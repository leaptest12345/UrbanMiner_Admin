{"version":3,"sources":["components/cards/MiniCardComponent.js","routes/dashboard/TodayTrendsComponent.js","components/cards/CardComponent.js","routes/dashboard/UnresolvedTicketsComponent.js","routes/dashboard/TasksComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","className","useTheme","classes","composedClassName","join","flexGrow","horizontal","vertical","data","x","push","y","Math","floor","random","graphContainer","marginTop","marginLeft","marginRight","width","graphSection","graphSubtitle","smallSubtitle","graphTitle","legendTitle","separator","statContainer","borderBottom","height","stats","borderTop","statTitle","whiteSpace","statValue","containerMobile","itemContainer","paddingLeft","paddingRight","paddingBottom","paddingTop","itemContainerMobile","link","subtitle","subtitle2","itemTitle","itemValue","addButton","lightGrayishBlue","greyTitle","grayishBlue3","tagStyles","checkboxWrapper","TasksComponent","cardsContainer","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","DashboardComponent","useState","totalUser","setTotalUser","totalItem","setTotalItem","totalInvoice","setTotalInvoice","getAllData","a","starCountRef","ref","database","onValue","snapshot","newArr","val","formateData","length","starCountRef1","starCountRef2","error","console","log","useEffect","wrap","breakpoints","768","384"],"mappings":"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","file":"static/js/4.a00ef9aa.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Column } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        maxWidth: 350,\r\n        padding: '16px 32px 16px 32px',\r\n        '&:hover': {\r\n            borderColor: theme.color.lightBlue,\r\n            '&:nth-child(n) > span': {\r\n                color: theme.color.lightBlue\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginBottom: 12,\r\n        minWidth: 102,\r\n        textAlign: 'center'\r\n    },\r\n    value: {\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        fontWeight: 'bold',\r\n        fontSize: 40,\r\n        letterSpacing: '1px',\r\n        lineHeight: '50px',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nfunction MiniCardComponent({ className = '', title, value }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const composedClassName = [classes.container, className].join(' ');\r\n    return (\r\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\r\n            <span className={classes.title}>{title}</span>\r\n            <span className={classes.value}>{value}</span>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default MiniCardComponent;\r\n","import React from 'react';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport LineChart from 'react-svg-line-chart';\r\n\r\nconst data = [];\r\n\r\nfor (let x = 1; x <= 24; x++) {\r\n    data.push({ x: x, y: Math.floor(Math.random() * 100) });\r\n}\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer'\r\n    },\r\n    graphContainer: {\r\n        marginTop: 24,\r\n        marginLeft: 0,\r\n        marginRight: 0,\r\n        width: '100%'\r\n    },\r\n    graphSection: {\r\n        padding: 24\r\n    },\r\n    graphSubtitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginTop: 4,\r\n        marginRight: 8\r\n    },\r\n    graphTitle: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    legendTitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        fontWeight: '600',\r\n        color: theme.color.grayishBlue2,\r\n        marginLeft: 8\r\n    },\r\n    separator: {\r\n        backgroundColor: theme.color.lightGrayishBlue2,\r\n        width: 1,\r\n        minWidth: 1\r\n    },\r\n    statContainer: {\r\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        padding: '24px 32px 24px 32px',\r\n        height: 'calc(114px - 48px)',\r\n        '&:last-child': {\r\n            border: 'none'\r\n        }\r\n    },\r\n    stats: {\r\n        borderTop: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        width: '100%'\r\n    },\r\n    statTitle: {\r\n        fontWeight: '600',\r\n        fontSize: 16,\r\n        lineHeight: '22px',\r\n        letterSpacing: '0.3px',\r\n        textAlign: 'center',\r\n        color: theme.color.grayishBlue2,\r\n        whiteSpace: 'nowrap',\r\n        marginBottom: 6\r\n    },\r\n    statValue: {\r\n        ...theme.typography.title,\r\n        textAlign: 'center',\r\n        color: theme.color.veryDarkGrayishBlue\r\n    }\r\n}));\r\n\r\nfunction TodayTrendsComponent() {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n\r\n    function renderLegend(color, title) {\r\n        return (\r\n            <Row vertical='center'>\r\n                <div style={{ width: 16, border: '2px solid', borderColor: color }}></div>\r\n                <span className={classes.legendTitle}>{title}</span>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    function renderStat(title, value) {\r\n        return (\r\n            <Column\r\n                flexGrow={1}\r\n                className={classes.statContainer}\r\n                vertical='center'\r\n                horizontal='center'\r\n            >\r\n                <span className={classes.statTitle}>{title}</span>\r\n                <span className={classes.statValue}>{value}</span>\r\n            </Column>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Row\r\n            flexGrow={1}\r\n            className={classes.container}\r\n            horizontal='center'\r\n            breakpoints={{ 1024: 'column' }}\r\n        >\r\n            <Column\r\n                wrap\r\n                flexGrow={7}\r\n                flexBasis='735px'\r\n                className={classes.graphSection}\r\n                breakpoints={{ 1024: { width: 'calc(100% - 48px)', flexBasis: 'auto' } }}\r\n            >\r\n                <Row wrap horizontal='space-between'>\r\n                    <Column>\r\n                        <span className={classes.graphTitle}>Today’s trends</span>\r\n                        <span className={classes.graphSubtitle}>as of 25 May 2019, 09:41 PM</span>\r\n                    </Column>\r\n                    {renderLegend(theme.color.lightBlue, 'Today')}\r\n                </Row>\r\n                <div className={classes.graphContainer}>\r\n                    <LineChart\r\n                        data={data}\r\n                        viewBoxWidth={500}\r\n                        pointsStrokeColor={theme.color.lightBlue}\r\n                        areaColor={theme.color.lightBlue}\r\n                        areaVisible={true}\r\n                    />\r\n                </div>\r\n            </Column>\r\n            <Column className={classes.separator} breakpoints={{ 1024: { display: 'none' } }}>\r\n                <div />\r\n            </Column>\r\n            <Column flexGrow={3} flexBasis='342px' breakpoints={{ 1024: classes.stats }}>\r\n                {renderStat('Resolved', '449')}\r\n                {renderStat('Received', '426')}\r\n                {renderStat('Average first response time', '33m')}\r\n                {renderStat('Average response time', '3h 8m')}\r\n                {renderStat('Resolution within SLA', '94%')}\r\n            </Column>\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default TodayTrendsComponent;\r\n","import React from 'react';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        padding: '24px 32px 0px 32px',\r\n        height: '100%'\r\n    },\r\n    containerMobile: {\r\n        padding: '12px 16px 6px 16px !important'\r\n    },\r\n    itemContainer: {\r\n        marginLeft: -32,\r\n        marginRight: -32,\r\n        paddingLeft: 32,\r\n        paddingRight: 32,\r\n        paddingBottom: 18,\r\n        paddingTop: 18,\r\n        borderBottom: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        '&:last-child': {\r\n            borderBottom: 'none'\r\n        }\r\n    },\r\n    itemContainerMobile: {\r\n        marginLeft: -16,\r\n        marginRight: -16,\r\n        paddingLeft: 16,\r\n        paddingRight: 16\r\n    },\r\n    link: {\r\n        ...theme.typography.link\r\n    },\r\n    subtitle: {\r\n        ...theme.typography.smallSubtitle,\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    subtitle2: {\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        marginLeft: 2\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    }\r\n}));\r\n\r\nfunction CardComponent(props) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const { title, link, subtitle, subtitleTwo, items, containerStyles } = props;\r\n    function renderItem(item, index) {\r\n        return (\r\n            <Column\r\n                className={classes.itemContainer}\r\n                key={`item-${index}`}\r\n                breakpoints={{ 426: classes.itemContainerMobile }}\r\n            >\r\n                {item}\r\n            </Column>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <Column\r\n            flexGrow={1}\r\n            className={[classes.container, containerStyles].join(' ')}\r\n            breakpoints={{ 426: classes.containerMobile }}\r\n        >\r\n            <Row horizontal='space-between'>\r\n                <Column>\r\n                    <span className={classes.title}>{title}</span>\r\n                    <Row style={{ marginTop: 8, marginBottom: 16 }}>\r\n                        <span className={classes.subtitle}>{subtitle}</span>\r\n                        {subtitleTwo && (\r\n                            <span className={[classes.subtitle, classes.subtitle2].join(' ')}>\r\n                                {subtitleTwo}\r\n                            </span>\r\n                        )}\r\n                    </Row>\r\n                </Column>\r\n                <span className={classes.link}>{link}</span>\r\n            </Row>\r\n            {items.map(renderItem)}\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default CardComponent;\r\n","import React from 'react';\r\nimport { Row } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport CardComponent from 'components/cards/CardComponent';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    itemTitle: {\r\n        ...theme.typography.itemTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    }\r\n}));\r\n\r\nfunction UnresolvedTicketsComponent({ containerStyles }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n\r\n    function renderStat(title, value) {\r\n        return (\r\n            <Row horizontal='space-between' vertical='center'>\r\n                <span className={classes.itemTitle}>{title}</span>\r\n                <span className={[classes.itemTitle, classes.itemValue].join(' ')}>{value}</span>\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <CardComponent\r\n            containerStyles={containerStyles}\r\n            title='Unresolved tickets'\r\n            link='View details'\r\n            subtitle='Group:'\r\n            subtitleTwo='Support'\r\n            items={[\r\n                renderStat('Waiting on Feature Request', 4238),\r\n                renderStat('Awaiting Customer Response', 1005),\r\n                renderStat('Awaiting Developer Fix', 914),\r\n                renderStat('Pending', 281)\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nexport default UnresolvedTicketsComponent;\r\n","import React, { useState } from 'react';\r\nimport { Row } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { IconCheckboxOn, IconCheckboxOff } from 'assets/icons';\r\nimport CardComponent from 'components/cards/CardComponent';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    addButton: {\r\n        backgroundColor: theme.color.lightGrayishBlue,\r\n        color: theme.color.grayishBlue2,\r\n        fontSize: '20px !important',\r\n        padding: '7px !important'\r\n    },\r\n    itemTitle: {\r\n        ...theme.typography.itemTitle,\r\n        color: theme.color.veryDarkGrayishBlue\r\n    },\r\n    itemValue: {\r\n        color: theme.color.grayishBlue2\r\n    },\r\n    greyTitle: {\r\n        color: theme.color.grayishBlue3\r\n    },\r\n    tagStyles: {\r\n        borderRadius: 5,\r\n        cursor: 'pointer',\r\n        fontWeight: 'bold',\r\n        fontSize: 11,\r\n        letterSpacing: '0.5px',\r\n        lineHeight: '14px',\r\n        padding: '5px 12px 5px 12px'\r\n    },\r\n    checkboxWrapper: {\r\n        cursor: 'pointer',\r\n        marginRight: 16\r\n    }\r\n}));\r\n\r\nconst TAGS = {\r\n    URGENT: { text: 'URGENT', backgroundColor: '#FEC400', color: '#FFFFFF' },\r\n    NEW: { text: 'NEW', backgroundColor: '#29CC97', color: '#FFFFFF' },\r\n    DEFAULT: { text: 'DEFAULT', backgroundColor: '#F0F1F7', color: '#9FA2B4' }\r\n};\r\n\r\nfunction TasksComponent(props) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const [items, setItems] = useState([\r\n        { title: 'Finish ticket update', checked: false, tag: TAGS.URGENT },\r\n        {\r\n            title: 'Create new ticket example',\r\n            checked: false,\r\n            tag: TAGS.NEW\r\n        },\r\n        { title: 'Update ticket report', checked: true, tag: TAGS.DEFAULT }\r\n    ]);\r\n\r\n    function onCheckboxClick(index) {\r\n        setItems((prev) => {\r\n            const newItems = [...prev];\r\n            newItems[index].checked = newItems[index].checked ? false : true;\r\n            return newItems;\r\n        });\r\n    }\r\n    function getNextTag(current = 'URGENT') {\r\n        const tagLabels = ['URGENT', 'NEW', 'DEFAULT'];\r\n        const tagIndex = (tagLabels.indexOf(current) + 1) % 3;\r\n        return TAGS[tagLabels[tagIndex]];\r\n    }\r\n\r\n    function onTagClick(index) {\r\n        setItems((prev) => {\r\n            const newItems = [...prev];\r\n            newItems[index].tag = getNextTag(newItems[index].tag.text);\r\n            return newItems;\r\n        });\r\n    }\r\n\r\n    function onAddButtonClick() {\r\n        setItems((prev) => {\r\n            const newItems = [...prev];\r\n            newItems.push({\r\n                title: `Task ${newItems.length + 1}`,\r\n                checked: false,\r\n                tag: getNextTag()\r\n            });\r\n            return newItems;\r\n        });\r\n    }\r\n\r\n    function renderAddButton() {\r\n        return (\r\n            <Row\r\n                horizontal='center'\r\n                vertical='center'\r\n                className={[classes.tagStyles, classes.addButton].join(' ')}\r\n                onClick={onAddButtonClick}\r\n            >\r\n                +\r\n            </Row>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <CardComponent\r\n            containerStyles={props.containerStyles}\r\n            title='Tasks'\r\n            link='View all'\r\n            subtitle='Today'\r\n            items={[\r\n                <Row horizontal='space-between' vertical='center'>\r\n                    <span className={[classes.itemTitle, classes.greyTitle].join(' ')}>\r\n                        Create new task\r\n                    </span>\r\n                    {renderAddButton()}\r\n                </Row>,\r\n                ...items.map((item, index) => (\r\n                    <TaskComponent\r\n                        classes={classes}\r\n                        index={index}\r\n                        item={item}\r\n                        onCheckboxClick={onCheckboxClick}\r\n                        onTagClick={onTagClick}\r\n                    />\r\n                ))\r\n            ]}\r\n        />\r\n    );\r\n}\r\n\r\nfunction TaskComponent({ classes, index, item = {}, onCheckboxClick, onTagClick }) {\r\n    const { tag = {} } = item;\r\n    return (\r\n        <Row horizontal='space-between' vertical='center'>\r\n            <Row>\r\n                <div className={classes.checkboxWrapper} onClick={() => onCheckboxClick(index)}>\r\n                    {item.checked ? <IconCheckboxOn /> : <IconCheckboxOff />}\r\n                </div>\r\n                <span className={classes.itemTitle}>{item.title}</span>\r\n            </Row>\r\n            <TagComponent\r\n                backgroundColor={tag.backgroundColor}\r\n                classes={classes}\r\n                color={tag.color}\r\n                index={index}\r\n                onClick={onTagClick}\r\n                text={tag.text}\r\n            />\r\n        </Row>\r\n    );\r\n}\r\n\r\nfunction TagComponent({ backgroundColor, classes, color, index, onClick, text }) {\r\n    return (\r\n        <Row\r\n            horizontal='center'\r\n            vertical='center'\r\n            style={{ backgroundColor, color }}\r\n            className={classes.tagStyles}\r\n            onClick={() => onClick(index)}\r\n        >\r\n            {text}\r\n        </Row>\r\n    );\r\n}\r\n\r\nexport default TasksComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\r\nimport TodayTrendsComponent from './TodayTrendsComponent';\r\nimport UnresolvedTicketsComponent from './UnresolvedTicketsComponent';\r\nimport TasksComponent from './TasksComponent';\r\nimport { database } from 'configs/firebaseConfig';\r\nimport { onValue, ref } from 'firebase/database';\r\nimport { async } from '@firebase/util';\r\nimport { Box, Button } from '@material-ui/core';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { formateData } from 'util/formateData';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction DashboardComponent() {\r\n  const [totalUser,setTotalUser]=useState('')\r\n  const [totalItem,setTotalItem]=useState('')\r\n  const [totalInvoice,setTotalInvoice]=useState('')\r\n  const getAllData=async()=>{\r\n    try{\r\n        const starCountRef = ref(database, '/USERS');\r\n        onValue(starCountRef, (snapshot) => {\r\n        const newArr = snapshot.val();\r\n        setTotalUser(formateData(newArr).length)\r\n        });\r\n        const starCountRef1 = ref(database, '/INVOICE');\r\n        onValue(starCountRef1, (snapshot) => {\r\n        const newArr = snapshot.val();\r\n        setTotalInvoice(formateData(newArr).length)\r\n        });\r\n        const starCountRef2 = ref(database, '/ADMIN/ITEM');\r\n        onValue(starCountRef2, (snapshot) => {\r\n        const newArr = snapshot.val();\r\n        setTotalItem(formateData(newArr).length)\r\n        });\r\n    }\r\n    catch(error)\r\n    {\r\n        console.log(error)\r\n    }\r\n  }\r\n    useEffect(()=>{\r\n       getAllData()\r\n    },[])\r\n    const theme=useTheme()\r\n  \r\n  \r\n    const classes = useStyles(theme);\r\n    return (\r\n        <Column>\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                   <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                   >\r\n         \r\n         \r\n                   <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total User'\r\n                        value={totalUser}\r\n                   />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total Items'\r\n                        value={totalItem}\r\n                    />\r\n                   </Row>\r\n                {/* <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                > */}\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='TotalInvoice'\r\n                        value={totalInvoice}\r\n                    />\r\n                    {/* <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='On hold'\r\n                        value='64'\r\n                    /> */}\r\n                {/* </Row> */}\r\n                    </Row>\r\n            {/* <div className={classes.todayTrends}>\r\n                <TodayTrendsComponent />\r\n            </div> */}\r\n            {/* <Row\r\n                horizontal='space-between'\r\n                className={classes.lastRow}\r\n                breakpoints={{ 1024: 'column' }}\r\n            >\r\n                <UnresolvedTicketsComponent containerStyles={classes.unresolvedTickets} />\r\n                <TasksComponent containerStyles={classes.tasks} />\r\n            </Row> */}\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import DashboardComponent from './DashboardComponent';\r\n\r\nexport default DashboardComponent;\r\n"],"sourceRoot":""}