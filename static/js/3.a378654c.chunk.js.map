{"version":3,"sources":["components/cards/MiniCardComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","className","useTheme","classes","composedClassName","join","flexGrow","horizontal","vertical","i","cardsContainer","marginRight","marginTop","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","DashboardComponent","useState","totalUser","setTotalUser","totalItem","setTotalItem","totalInvoice","setTotalInvoice","getAllData","starCountRef","ref","database","onValue","snapshot","newArr","val","formateData","length","starCountRef1","starCountRef2","error","console","log","useEffect","wrap","breakpoints","768","384"],"mappings":"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","file":"static/js/3.a378654c.chunk.js","sourcesContent":["import React from 'react';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer',\n        maxWidth: 350,\n        padding: '16px 32px 16px 32px',\n        '&:hover': {\n            borderColor: theme.color.lightBlue,\n            '&:nth-child(n) > span': {\n                color: theme.color.lightBlue\n            }\n        }\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.grayishBlue2,\n        marginBottom: 12,\n        minWidth: 102,\n        textAlign: 'center'\n    },\n    value: {\n        color: theme.color.veryDarkGrayishBlue,\n        fontWeight: 'bold',\n        fontSize: 40,\n        letterSpacing: '1px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    }\n}));\n\nfunction MiniCardComponent({ className = '', title, value }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const composedClassName = [classes.container, className].join(' ');\n    return (\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\n            <span className={classes.title}>{title}</span>\n            <span className={classes.value}>{value}</span>\n        </Column>\n    );\n}\n\nexport default MiniCardComponent;\n","import React, { useEffect, useState } from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { database } from 'configs/firebaseConfig';\nimport { onValue, ref } from 'firebase/database';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { formateData } from 'util/formateData';\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\n\nconst useStyles = createUseStyles({\n    cardsContainer: {\n        marginRight: -30,\n        marginTop: -30\n    },\n    cardRow: {\n        marginTop: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 0\n        }\n    },\n    miniCardContainer: {\n        flexGrow: 1,\n        marginRight: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 30,\n            maxWidth: 'none'\n        }\n    },\n    todayTrends: {\n        marginTop: 30\n    },\n    lastRow: {\n        marginTop: 30\n    },\n    unresolvedTickets: {\n        marginRight: 30,\n        '@media (max-width: 1024px)': {\n            marginRight: 0\n        }\n    },\n    tasks: {\n        marginTop: 0,\n        '@media (max-width: 1024px)': {\n            marginTop: 30\n        }\n    }\n});\n\nfunction DashboardComponent() {\n    const [totalUser, setTotalUser] = useState('');\n    const [totalItem, setTotalItem] = useState('');\n    const [totalInvoice, setTotalInvoice] = useState('');\n    const getAllData = async () => {\n        try {\n            const starCountRef = ref(database, '/USERS');\n            onValue(starCountRef, (snapshot) => {\n                const newArr = snapshot.val();\n                setTotalUser(formateData(newArr).length);\n            });\n            const starCountRef1 = ref(database, '/INVOICE');\n            onValue(starCountRef1, (snapshot) => {\n                const newArr = snapshot.val();\n                setTotalInvoice(formateData(newArr).length);\n            });\n            const starCountRef2 = ref(database, '/ADMIN/ITEM');\n            onValue(starCountRef2, (snapshot) => {\n                const newArr = snapshot.val();\n                setTotalItem(formateData(newArr).length);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(() => {\n        getAllData();\n    }, []);\n    const theme = useTheme();\n\n    const classes = useStyles(theme);\n    return (\n        <Column>\n            <Row\n                className={classes.cardsContainer}\n                wrap\n                flexGrow={1}\n                horizontal='space-between'\n                breakpoints={{ 768: 'column' }}\n            >\n                <Row\n                    className={classes.cardRow}\n                    wrap\n                    flexGrow={1}\n                    horizontal='space-between'\n                    breakpoints={{ 384: 'column' }}\n                >\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Total User'\n                        value={totalUser}\n                    />\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Total Items'\n                        value={totalItem}\n                    />\n                </Row>\n                <MiniCardComponent\n                    className={classes.miniCardContainer}\n                    title='TotalInvoice'\n                    value={totalInvoice}\n                />\n            </Row>\n        </Column>\n    );\n}\n\nexport default DashboardComponent;\n","import DashboardComponent from './DashboardComponent';\n\nexport default DashboardComponent;\n"],"sourceRoot":""}