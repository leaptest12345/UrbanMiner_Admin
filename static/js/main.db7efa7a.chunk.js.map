{"version":3,"sources":["assets/icons/urbanminer.png","resources/theme.js","resources/slugs.js","assets/icons/icon-agents.js","assets/icons/icon-arrow-up.js","assets/icons/icon-articles.js","assets/icons/icon-contacts.js","assets/icons/icon-logout.js","assets/icons/icon-subscription.js","assets/icons/icon-tickets.js","resources/utilities.js","components/sidebar/LogoComponent.js","components/sidebar/MenuComponent.js","components/collapsible/CollapsibleContent.js","hooks/useSidebar.js","components/sidebar/MenuItemComponent.js","util/userContext.js","components/sidebar/SidebarComponent.js","components/sidebar/SidebarContext.js","components/dropdown/DropdownComponent.js","components/dropdown/index.js","components/header/HeaderComponent.js","components/loading/LoadingComponent.js","components/loading/index.js","util/notify.js","routes/privacyPolicy/PrivacyPolicy.js","routes/Items/items.js","routes/PaymentList/PaymentList.js","routes/FeedbackList/FeedbackList.js","components/ImageModal/ImageModal.js","routes/UserList/styles.js","routes/UserList/UserList.js","routes/TermAndConditions/TermAndConditions.js","routes/UserDetail/styles.js","routes/UserDetail/UserDetail.js","util/convertIntoDoller.js","routes/customerDetail/styles.js","routes/customerDetail/customerDetail.js","routes/ViewDraft/styles.js","routes/ViewDraft/ViewDraft.js","components/Spinner/LoadingSpinner.js","util/uploadProductImage.js","routes/AddProduct/styles.js","routes/AddProduct/AddProduct.js","routes/AdminList/adminList.js","routes/AddAdmin/AddAdmin.js","routes/PdfDetail/PdfDetail.js","routes/PriceSheet/styles.js","routes/PriceSheet/PriceSheet.js","routes/CategoryImages/styles.js","routes/CategoryImages/CategoryImages.js","routes/editCategory/styles.js","routes/editCategory/editCategory.js","routes/PrivateRoutes.js","routes/PrivateSection.js","routes/Login/Login.js","routes/PublicRoutes.js","routes/index.js","serviceWorker.js","index.js","util/formateData.js","configs/firebaseConfig.js"],"names":["module","exports","color","brightBlue","darkGrayishBlue","darkRed","grayishBlue","grayishBlue2","grayishBlue3","lightBlue","lightGrayishBlue","lightGrayishBlue2","paleBlue","paleBlueTransparent","veryDarkGrayishBlue","white","BLACK","WHITE","BG","BORDER","BORDER1","TEXT","BOX","typography","cardTitle","fontWeight","fontSize","lineHeight","letterSpacing","smallSubtitle","link","textAlign","cursor","textDecoration","itemTitle","title","props","width","height","viewBox","fill","xmlns","opacity","d","id","fillOpacity","clipPath","convertSlugToUrl","slug","parameters","url","Object","entries","forEach","key","value","replace","useStyles","createUseStyles","theme","container","marginLeft","img","borderRadius","LogoComponent","useTheme","classes","className","horizontal","vertical","src","LOGO","MenuComponent","children","isMobile","menuStyles","bmBurgerButton","position","left","top","zIndex","bmBurgerBars","background","bmBurgerBarsHover","bmCrossButton","display","bmCross","bmMenuWrap","bmMenu","bmItem","outline","bmMorphShape","bmOverlay","getMenuStyles","useState","isOpen","setIsOpen","noOverlay","disableCloseOnEsc","styles","onStateChange","state","STATUS","CollapsibleContent","transitionStyles","expanded","style","transitionDuration","transitionTimingFunction","onTransitionStart","onTransitionEnd","others","contentContainerRef","useRef","status","setStatus","scrollHeight","useScrollHeight","maxHeight","useEffect","setTimeout","overflow","transitionProperty","ref","defaultProps","SidebarContext","createContext","SidebarProvider","defaultItem","currentItem","setCurrentItem","Provider","activeContainer","backgroundColor","paddingLeft","level","transition","leftBar","borderLeft","isActive","MenuItemComponent","Icon","icon","items","onClick","isCollapsible","length","item","useContext","includes","isExpanded","setIsExpanded","onItemClick","prev","useSidebar","classNameColumn","classNameContainer","join","iconColor","e","map","child","type","UserContext","require","i","separator","borderTop","marginTop","marginBottom","SidebarComponent","permission","show","setShow","signOut1","React","setPermissionStatus","push","useHistory","window","innerWidth","data","JSON","parse","localStorage","getItem","matchMedia","addEventListener","matches","paddingTop","paddingBottom","SLUGS","IconSubscription","user","IconContacts","IconTickets","payment","addAdmin","IconAgents","addProduct","feedback","priceSheet","pdfDetail","IconArticles","privacy","term","IconLogout","pathname","useLocation","arrowContainer","right","dropdownButton","alignItems","border","padding","dropdownContainer","dropdownItemsContainer","minWidth","bottom","dropdownItem","content","DropdownComponent","label","options","userMenuOpen","setUserMenuOpen","option","index","avatar","name","marginRight","iconStyles","HeaderComponent","setName","setPhoto","getUserDetail","userID","result","database","onValue","snapshot","val","firstName","lastName","photo","console","log","from","transform","to","noTransparency","minHeight","fullScreen","loading","animationName","animationTimingFunction","animationDuration","animationIterationCount","loadingSpan","LoadingComponent","hideText","toast","configure","config","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","css","boxShadow","notify","message","success","error","info","warning","PrivacyPolicy","description","setDescription","snapShot","Description","getDetail","btnstyle","margin","onSubmit","preventDefault","set","areaText","onChange","event","target","Button","btn","variant","mainDiv","cardsContainer","input","borderWidth","bottomView","widh","flexDirection","justifyContent","bottomView1","addItemView","alignSelf","h1","h3","Items","uuid","slice","itemName","setItemName","setData","getItemValues","starCountRef","formateData","StyledTableCell","withStyles","head","body","TableCell","StyledTableRow","root","TableRow","trim","temp","toLowerCase","toLocaleLowerCase","addedOrNot","starCount","ID","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","scope","Delete","onDelete","PaymentList","Array","isArray","newArr","filter","arr","hasOwnProperty","getPaymentList","FeedBackList","ReadMore","text","isReadMore","setIsReadMore","keys","getFeedbackList","email","feedBack","ImageModal","imageStyle","openImage","setOpenImage","large","onClose","UserList","setUsers","setAdminLevel","getUserList","userRef","subUserRef","adminLevel","isDeleted","onAction","update","itemDetails","userData","phoneNumber","substring","TermAndConditions","btnStyle","div","div1","borderBottom","leftDiv","gap","UserDetail","setUser","userDetailStyle","isApproved","setIsApproved","location","getUserCustomer","refDetail","CUSTOMER","onViewDetailClick","userId","customerId","onApproved","UserFirstName","UserLastName","BusinessEmail","convertIntoDoller","price","toLocaleString","currency","minimumFractionDigits","marginDiv","flexDiv","CustomerDetail","customerStyle","customerImages","setCustomerImages","getCustomerDetail","getInvoiceList","getCustomerImages","viewPdf","open","focus","onActions","slugs","invoiceId","BusinessName","BusinessAddress","photoName","invoiceDate","totalItems","Amount","subDiv","flexWrap","ViewDraft","invoices","setInvoices","invoiceImg","setInvoiceImg","note","setNote","getDraftDetail","details","refDeatail1","WeightType","unit","Total","parseInt","grossWeight","tareWeight","netWeight","LoadingSpinner","uploadProductImage","imgfile","Promise","resolve","reject","storage","getStorage","storageRef","uploadTask","uploadBytesResumable","on","bytesTransferred","totalBytes","getDownloadURL","then","downloadURL","rowDiv","modalDiv","modal","inputStyle","paddingInline","textareaStyle","btnStyle1","dangerBtn","imgStyle","imgStyle1","closeBtn","productDescView","marginTopView","width10","AddProduct","setImageFile","productName","setProductName","productDesc","setProductDesc","setOpen","setLoading","subProduct","setSubProduct","subProductName","setSubProductName","subProductDesc","setSubProductDesc","subImgFile","setSubImageFile","productList","setProductList","isEditable","setIsEditable","productType","setProductType","productId","setProductId","productSubId","setProductSubId","isImageChange","setIsImageChange","addToDatabase","setAddToDatabase","setItem","productStyle","uniqueId","getProduct","setProductDetail","createProduct","addSubProductDatabase","productImage","prodductDescription","onModalClose","StyledTableCell1","addSubProduct","editProduct","editProductDetail","editSubProductDetail","deleteProduct","refDetail1","addSubProductInDatabase","SUB_PRODUCT","imageFileUrl","URL","createObjectURL","files","deleteSubProduct","item1","index1","Modal","accept","AdminList","users","getUsers","snapShot1","htmlFor","AddAdmin","setEmail","password","setPassword","itemPermission","setItemPermission","userPermission","setUserPermission","paymentPermission","setPaymentPermission","feedbackPermission","setFeedBackPermission","termPermission","setTermPermission","privacyPermission","setPrivacyPermission","adminPermission","setAdminPermission","pdfDetailPermission","setpdfDetailPermission","priceSheetPermission","setPriceSheetPermission","setAddProduct","userList","setUserList","setAdminUsers","getAdminDetails","snapshOT","permissionStatus","role","PermissionStatus","getUserId","userAlreadyExist","createAdmin","subUserID","userDetailRef","roleName","auth","getAuth","createUserWithEmailAndPassword","userUniqueID","cca2","countryCode","checkboxStyle","labelStyle","marginInline","formCheckStyle","dangerLabel","placeholder","checked","PdfDetail","description1","setDescription1","address","pdfDescription","rowWrap","modalDiv1","modal1","dangerBtn1","PriceSheet","categoryName","setCategoryName","editCategoryName","setEditCategoryName","imagesFile","setImagesFile","openEditCategory","setOpenEditCategory","productPrice","setProductPrice","categoryList","setCategoryList","categoryId","setCategoryId","getCategories","addProductInDatabase","createCategory","deleteCategory","onEditCategory","multiple","PRODUCT","onProductEdit","CategoryImages","photoList","setPhotoList","getPhotos","history","deleteImage","deleteObject","catch","deleteProductImage","onAddNewImage","goBack","flex","EditCategory","getProductList","categoryDetail","editCategory","DashboardComponent","lazy","PrivateRoutes","fallback","exact","path","render","mainBlock","contentBlock","PrivateSection","getUserPermissionDetail","flexGrow","Login","signIn1","paperStyle","emailResult","signInWithEmailAndPassword","uid","errorMessage","containerStyle","backgroundImage","elevation","Grid","Avatar","TextField","fullWidth","required","PublicRoutes","Routes","authContext","useMemo","stringify","removeItem","scrollTo","Boolean","hostname","match","ReactDOM","Theme","basename","process","document","getElementById","navigator","serviceWorker","ready","registration","unregister","app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","getDatabase"],"mappings":"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","file":"static/js/main.db7efa7a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/urbanminer.6906ca8e.png\";","const color = {\n    brightBlue: '#3498db',\n    darkGrayishBlue: '#8b8d94',\n    darkRed: '#a90000',\n    grayishBlue: '#A4A6B3',\n    grayishBlue2: '#9fa2b4',\n    grayishBlue3: '#bdc3c7',\n    lightBlue: '#3751FF',\n    lightGrayishBlue: '#F7F8FC', // background color\n    lightGrayishBlue2: '#DFE0EB',\n    paleBlue: '#DDE2FF',\n    paleBlueTransparent: 'rgba(221, 226, 255, 0.08)',\n    veryDarkGrayishBlue: '#373a47',\nwhite:'#ffff',\nBLACK: '#171616',\n  WHITE: '#FFFFFF',\n  BG: '#DCDEE1',\n  BORDER: '#707070',\n  BORDER1: '#999999',\n  TEXT: '#707070',\n  BOX: '#C7CBD1',\n};\n\nconst typography = {\n    cardTitle: {\n        fontWeight: 'bold',\n        fontSize: 19,\n        lineHeight: '24px',\n        letterSpacing: '0.4px'\n    },\n    smallSubtitle: {\n        fontSize: 12,\n        lineHeight: '16px',\n        letterSpacing: '0.1px'\n    },\n    link: {\n        fontWeight: '600',\n        fontSize: 14,\n        lineHeight: '20px',\n        letterSpacing: '0.2px',\n        color: color.lightBlue,\n        textAlign: 'right',\n        cursor: 'pointer',\n        textDecoration: 'underline',\n        '&:hover': {\n            color: color.grayishBlue\n        }\n    },\n    itemTitle: {\n        fontWeight: 600,\n        fontSize: 14,\n        lineHeight: '20px',\n        letterSpacing: 0.2\n    },\n    title: {\n        fontWeight: 'bold',\n        fontSize: 24,\n        lineHeight: '30px',\n        letterSpacing: 0.3\n    }\n};\n\nexport default {\n    // https://www.colorhexa.com/A4A6B3\n    color,\n    typography\n};\n","export default {\n    dashboard: '/dashboard',\n    tickets: '/tickets',\n    ideas: '/ideas',\n    ideasTwo: '/ideas/two',\n    ideasThree: '/ideas/three',\n    PaymentList: '/PaymentList',\n    FeedBack: '/FeedBack',\n    articles: '/articles',\n    TermAndCondition: '/TermAndCondition',\n    settings: '/settings',\n    PdfDetail: '/PdfDetail',\n    UserList: '/UserList',\n    EditCategory: '/EditCategory',\n    AddAdmin: '/AddAdmin',\n    AdminList: '/AdminList',\n    login: '/login',\n    signup: '/signup',\n    forgotPassword: '/forgot_password',\n    privacyPolicy: '/privacyPolicy',\n    items: '/items',\n    UserDetail: '/UserDetail',\n    CustomerDetail: '/CustomerDetail',\n    ViewDraft: '/ViewDraft',\n    AddProduct: '/AddProduct',\n    PriceSheet: '/PriceSheet',\n    categoryImages: '/CategoryImages'\n};\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M8 8C10.2094 8 12 6.20937 12 4C12 1.79063 10.2094 0 8 0C5.79063 0 4 1.79063 4 4C4 6.20937 5.79063 8 8 8ZM10.9937 9.01875L9.5 15L8.5 10.75L9.5 9H6.5L7.5 10.75L6.5 15L5.00625 9.01875C2.77812 9.125 1 10.9469 1 13.2V14.5C1 15.3281 1.67188 16 2.5 16H13.5C14.3281 16 15 15.3281 15 14.5V13.2C15 10.9469 13.2219 9.125 10.9937 9.01875Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg\n        id={props.id}\n        width={props.height || '15'}\n        height={props.height || '15'}\n        viewBox='0 0 640 640'\n        fill='none'\n        xmlns='http://www.w3.org/2000/svg'\n    >\n        <path\n            d='M319.99 640L21.87 640L170.92 320L319.99 32.21L469.07 320L618.13 640L618.13 640L319.99 640Z'\n            opacity='1'\n            fill='#dfe0eb'\n            fillOpacity='1'\n        />\n        <path\n            d='M469.07 478.15L544.52 640L335.64 640L93.64 640L170.92 478.15L319.99 158.15L469.07 478.15Z'\n            opacity='1'\n            fill='#ffffff'\n            fillOpacity='1'\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M15 11.25V0.75C15 0.334375 14.6656 0 14.25 0H4C2.34375 0 1 1.34375 1 3V13C1 14.6562 2.34375 16 4 16H14.25C14.6656 16 15 15.6656 15 15.25V14.75C15 14.5156 14.8906 14.3031 14.7219 14.1656C14.5906 13.6844 14.5906 12.3125 14.7219 11.8313C14.8906 11.6969 15 11.4844 15 11.25ZM5 4.1875C5 4.08437 5.08437 4 5.1875 4H11.8125C11.9156 4 12 4.08437 12 4.1875V4.8125C12 4.91563 11.9156 5 11.8125 5H5.1875C5.08437 5 5 4.91563 5 4.8125V4.1875ZM5 6.1875C5 6.08437 5.08437 6 5.1875 6H11.8125C11.9156 6 12 6.08437 12 6.1875V6.8125C12 6.91563 11.9156 7 11.8125 7H5.1875C5.08437 7 5 6.91563 5 6.8125V6.1875ZM12.9187 14H4C3.44688 14 3 13.5531 3 13C3 12.45 3.45 12 4 12H12.9187C12.8594 12.5344 12.8594 13.4656 12.9187 14Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M2.4 7.2C3.2825 7.2 4 6.4825 4 5.6C4 4.7175 3.2825 4 2.4 4C1.5175 4 0.8 4.7175 0.8 5.6C0.8 6.4825 1.5175 7.2 2.4 7.2ZM13.6 7.2C14.4825 7.2 15.2 6.4825 15.2 5.6C15.2 4.7175 14.4825 4 13.6 4C12.7175 4 12 4.7175 12 5.6C12 6.4825 12.7175 7.2 13.6 7.2ZM14.4 8H12.8C12.36 8 11.9625 8.1775 11.6725 8.465C12.68 9.0175 13.395 10.015 13.55 11.2H15.2C15.6425 11.2 16 10.8425 16 10.4V9.6C16 8.7175 15.2825 8 14.4 8ZM8 8C9.5475 8 10.8 6.7475 10.8 5.2C10.8 3.6525 9.5475 2.4 8 2.4C6.4525 2.4 5.2 3.6525 5.2 5.2C5.2 6.7475 6.4525 8 8 8ZM9.92 8.8H9.7125C9.1925 9.05 8.615 9.2 8 9.2C7.385 9.2 6.81 9.05 6.2875 8.8H6.08C4.49 8.8 3.2 10.09 3.2 11.68V12.4C3.2 13.0625 3.7375 13.6 4.4 13.6H11.6C12.2625 13.6 12.8 13.0625 12.8 12.4V11.68C12.8 10.09 11.51 8.8 9.92 8.8ZM4.3275 8.465C4.0375 8.1775 3.64 8 3.2 8H1.6C0.7175 8 0 8.7175 0 9.6V10.4C0 10.8425 0.3575 11.2 0.8 11.2H2.4475C2.605 10.015 3.32 9.0175 4.3275 8.465Z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 297 297\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M155,6.5c-30.147,0-58.95,9.335-83.294,26.995c-2.789,2.023-3.547,5.853-1.739,8.787L92.83,79.374\n\t\t\t\tc0.962,1.559,2.53,2.649,4.328,3.004c1.796,0.354,3.661-0.054,5.145-1.129c14.23-10.323,31.069-15.78,48.698-15.78\n\t\t\t\tc45.783,0,83.03,37.247,83.03,83.03c0,45.783-37.247,83.03-83.03,83.03c-17.629,0-34.468-5.456-48.698-15.78\n\t\t\t\tc-1.484-1.076-3.349-1.486-5.145-1.129c-1.798,0.355-3.366,1.444-4.328,3.004l-22.863,37.093\n\t\t\t\tc-1.808,2.934-1.05,6.763,1.739,8.787C96.05,281.165,124.853,290.5,155,290.5c78.299,0,142-63.701,142-142S233.299,6.5,155,6.5z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n        <path opacity={props.opacity || ''} d=\"M90.401,201.757c1.147-2.142,1.021-4.74-0.326-6.76l-15.463-23.195h93.566c12.849,0,23.302-10.453,23.302-23.302\n            s-10.453-23.302-23.302-23.302H74.612l15.463-23.195c1.348-2.02,1.473-4.618,0.326-6.76c-1.146-2.141-3.377-3.478-5.806-3.478\n            H40.019c-2.201,0-4.258,1.1-5.479,2.933L1.106,144.847c-1.475,2.212-1.475,5.093,0,7.306l33.433,50.149\n            c1.221,1.832,3.278,2.933,5.479,2.933h44.577C87.025,205.235,89.256,203.898,90.401,201.757z\"\n            fill={props.fill || \"#9FA2B4\"}\n        />\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <g clipPath=\"url(#clip0)\">\n            <path opacity={props.opacity || ''} d=\"M5.035 11.3322C4.76344 11.0606 4.905 11.1372 4.25 10.9619C3.95281 10.8822 3.69156 10.7291 3.45531 10.5456L2.0375 14.0219C1.90031 14.3584 2.15656 14.7241 2.51969 14.7103L4.16625 14.6475L5.29875 15.8437C5.54875 16.1075 5.9875 16.0253 6.12469 15.6887L7.75125 11.7006C7.4125 11.8894 7.03656 12 6.64781 12C6.03844 12 5.46594 11.7628 5.035 11.3322ZM13.9625 14.0219L12.5447 10.5456C12.3084 10.7294 12.0472 10.8822 11.75 10.9619C11.0916 11.1381 11.2359 11.0612 10.965 11.3322C10.5341 11.7628 9.96125 12 9.35188 12C8.96313 12 8.58719 11.8891 8.24844 11.7006L9.875 15.6887C10.0122 16.0253 10.4513 16.1075 10.7009 15.8437L11.8338 14.6475L13.4803 14.7103C13.8434 14.7241 14.0997 14.3581 13.9625 14.0219ZM10.2188 10.625C10.6963 10.1391 10.7509 10.1809 11.4309 9.99562C11.865 9.87718 12.2044 9.53187 12.3206 9.08999C12.5544 8.20249 12.4938 8.30968 13.1316 7.66031C13.4494 7.33687 13.5734 6.8653 13.4572 6.42343C13.2238 5.53655 13.2234 5.66031 13.4572 4.77249C13.5734 4.33062 13.4494 3.85906 13.1316 3.53562C12.4938 2.88624 12.5544 2.99312 12.3206 2.10593C12.2044 1.66406 11.865 1.31874 11.4309 1.20031C10.5597 0.962493 10.6647 1.02468 10.0263 0.374993C9.70844 0.0515551 9.245 -0.0750074 8.81094 0.0434301C7.94 0.28093 8.06156 0.281243 7.18906 0.0434301C6.755 -0.0750074 6.29156 0.0512426 5.97375 0.374993C5.33594 1.02437 5.44094 0.962493 4.56938 1.20031C4.13531 1.31874 3.79594 1.66406 3.67969 2.10593C3.44625 2.99312 3.50656 2.88624 2.86875 3.53562C2.55094 3.85906 2.42656 4.33062 2.54313 4.77249C2.77656 5.65874 2.77688 5.53499 2.54313 6.42312C2.42688 6.86499 2.55094 7.33656 2.86875 7.66031C3.50656 8.30968 3.44594 8.20249 3.67969 9.08999C3.79594 9.53187 4.13531 9.87718 4.56938 9.99562C5.26875 10.1862 5.32094 10.1562 5.78125 10.625C6.19469 11.0459 6.83875 11.1212 7.33563 10.8069C7.53432 10.6807 7.76481 10.6137 8.00016 10.6137C8.23551 10.6137 8.466 10.6807 8.66469 10.8069C9.16125 11.1212 9.80531 11.0459 10.2188 10.625ZM5.05188 5.49874C5.05188 3.84156 6.37188 2.49812 8 2.49812C9.62813 2.49812 10.9481 3.84156 10.9481 5.49874C10.9481 7.15593 9.62813 8.49937 8 8.49937C6.37188 8.49937 5.05188 7.15593 5.05188 5.49874Z\"\n                fill={props.fill || \"#9FA2B4\"}\n            />\n        </g>\n        <defs>\n            <clipPath id=\"clip0\">\n                <rect width=\"16\" height=\"16\" fill=\"white\" />\n            </clipPath>\n        </defs>\n    </svg>\n);\n","import React from 'react';\n\nexport default (props) => (\n    <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n        <path opacity={props.opacity || ''} d=\"M3.55556 5.33334H12.4444V10.6667H3.55556V5.33334ZM14.6667 8C14.6667 8.73639 15.2636 9.33334 16 9.33334V12C16 12.7364 15.4031 13.3333 14.6667 13.3333H1.33333C0.596944 13.3333 0 12.7364 0 12V9.33334C0.736389 9.33334 1.33333 8.73639 1.33333 8C1.33333 7.26362 0.736389 6.66667 0 6.66667V4.00001C0 3.26362 0.596944 2.66667 1.33333 2.66667H14.6667C15.4031 2.66667 16 3.26362 16 4.00001V6.66667C15.2636 6.66667 14.6667 7.26362 14.6667 8ZM13.3333 5.11112C13.3333 4.74292 13.0349 4.44445 12.6667 4.44445H3.33333C2.96514 4.44445 2.66667 4.74292 2.66667 5.11112V10.8889C2.66667 11.2571 2.96514 11.5556 3.33333 11.5556H12.6667C13.0349 11.5556 13.3333 11.2571 13.3333 10.8889V5.11112Z\"\n        fill={props.fill || \"#9FA2B4\"} />\n    </svg>\n);\n","export function convertSlugToUrl(slug, parameters) {\n    let url = slug;\n    Object.entries(parameters).forEach(([key, value]) => {\n        url = url.replace(`:${key}`, value);\n    });\n    return url;\n}\n","import React from 'react';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconLogo } from 'assets/icons';\nimport LOGO from 'assets/icons/urbanminer.png';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {},\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.white,\n        opacity: 0.7,\n        marginLeft: 12\n    },\n    img: {\n        width: '50px',\n        height: '50px',\n        borderRadius: '10px'\n    }\n}));\n\nfunction LogoComponent() {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    return (\n        <Row className={classes.container} horizontal='center' vertical='center'>\n            <img src={LOGO} className={classes.img} />\n            <span className={classes.title}>UrbanMiner</span>\n        </Row>\n    );\n}\n\nexport default LogoComponent;\n","import React, { useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { slide as Menu } from 'react-burger-menu';\n\nconst getMenuStyles = ({ theme }) => ({\n    bmBurgerButton: {\n        position: 'absolute',\n        width: 26,\n        height: 20,\n        left: 30,\n        top: 40,\n        zIndex: 19\n    },\n    bmBurgerBars: {\n        background: theme.color.veryDarkGrayishBlue\n    },\n    bmBurgerBarsHover: {\n        background: theme.color.darkRed\n    },\n    bmCrossButton: {\n        display: 'none'\n    },\n    bmCross: {\n        background: theme.color.grayishBlue3\n    },\n    bmMenuWrap: {\n        position: 'fixed',\n        height: '100%',\n        width: 255,\n        zIndex: 30\n    },\n    bmMenu: {\n        background: theme.color.veryDarkGrayishBlue\n    },\n    bmItem: {\n        outline: 'none',\n        '&:focus': {\n            outline: 'none'\n        }\n    },\n    bmMorphShape: {\n        fill: theme.color.veryDarkGrayishBlue\n    },\n    bmOverlay: {\n        background: 'rgba(0, 0, 0, 0.3)',\n        zIndex: 20\n    }\n});\n\nfunction MenuComponent({ children, isMobile }) {\n    const theme = useTheme();\n    const menuStyles = getMenuStyles({ theme });\n    const [isOpen, setIsOpen] = useState(false);\n\n    return (\n        <Menu\n            isOpen={!isMobile || isOpen}\n            noOverlay={!isMobile}\n            disableCloseOnEsc\n            styles={menuStyles}\n            onStateChange={(state) => setIsOpen(state.isOpen)}\n        >\n            {children}\n        </Menu>\n    );\n}\n\nexport default MenuComponent;\n","import React, { useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useScrollHeight } from 'react-collapsible-content';\n\nconst STATUS = {\n    COLLAPSED: 'COLLAPSED',\n    PRE_EXPANDED: 'PRE_EXPANDED',\n    EXPANDED: 'EXPANDED',\n    PRE_COLLAPSED: 'PRE_COLLAPSED'\n};\n\nfunction CollapsibleContent({\n    children,\n    expanded,\n    style,\n    transitionDuration,\n    transitionTimingFunction,\n    onTransitionStart,\n    onTransitionEnd,\n    ...others\n}) {\n    const contentContainerRef = useRef(null);\n    const [status, setStatus] = useState(expanded ? STATUS.EXPANDED : STATUS.COLLAPSED);\n    const { scrollHeight } = useScrollHeight(contentContainerRef, {\n        onTransitionStart,\n        onTransitionEnd\n    });\n    let transitionStyles;\n    switch (status) {\n        case STATUS.EXPANDED:\n            transitionStyles = { maxHeight: '100vh', transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_COLLAPSED:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n            break;\n        case STATUS.PRE_EXPANDED:\n            transitionStyles = { maxHeight: scrollHeight };\n            break;\n        case STATUS.COLLAPSED:\n            transitionStyles = { maxHeight: 0 };\n            break;\n        default:\n            transitionStyles = { maxHeight: scrollHeight, transitionDuration: '.001s' };\n    }\n\n    useEffect(() => {\n        if (expanded) {\n            if (status === STATUS.COLLAPSED) {\n                setStatus(STATUS.PRE_EXPANDED);\n            } else if (status === STATUS.PRE_EXPANDED) {\n                setTimeout(() => setStatus(STATUS.EXPANDED), 800);\n            }\n        } else if (!expanded) {\n            if (status === STATUS.EXPANDED) {\n                setStatus(STATUS.PRE_COLLAPSED);\n            } else if (status === STATUS.PRE_COLLAPSED) {\n                setTimeout(() => setStatus(STATUS.COLLAPSED), 100);\n            }\n        }\n    }, [expanded, status]);\n\n    return (\n        <div\n            {...others}\n            style={{\n                overflow: 'hidden',\n                transitionProperty: 'max-height',\n                transitionTimingFunction,\n                transitionDuration,\n                ...transitionStyles,\n                ...style\n            }}\n            ref={contentContainerRef}\n        >\n            {children}\n        </div>\n    );\n}\n\nCollapsibleContent.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.element), PropTypes.element])\n        .isRequired,\n    expanded: PropTypes.bool,\n    onTransitionStart: PropTypes.func,\n    onTransitionEnd: PropTypes.func,\n    style: PropTypes.object,\n    transitionDuration: PropTypes.string,\n    transitionTimingFunction: PropTypes.string\n};\n\nCollapsibleContent.defaultProps = {\n    transitionDuration: '.425s',\n    transitionTimingFunction: 'ease-in-out'\n};\n\nexport default CollapsibleContent;\n","import React, { useState, useEffect, useContext, createContext } from 'react';\n\nexport const SidebarContext = createContext();\n\nexport function SidebarProvider({ children, defaultItem }) {\n    const [currentItem, setCurrentItem] = useState(defaultItem);\n    useEffect(() => {\n        if (defaultItem !== currentItem) {\n            return setCurrentItem(defaultItem);\n        }\n    }, [currentItem, defaultItem]);\n    return (\n        <SidebarContext.Provider value={{ currentItem, setCurrentItem }}>\n            {children}\n        </SidebarContext.Provider>\n    );\n}\n\nexport const useSidebar = ({ isCollapsible, item, items = [] } = {}) => {\n    const { currentItem, setCurrentItem } = useContext(SidebarContext);\n    const isActive = item === currentItem || items.includes(currentItem);\n    const [isExpanded, setIsExpanded] = useState(isActive);\n\n    useEffect(() => {\n        if (!isActive && isExpanded) {\n            return setIsExpanded(false);\n        }\n        if (isActive && !isExpanded) {\n            return setIsExpanded(true);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [currentItem]);\n\n    const onItemClick = () => {\n        if (!isCollapsible) {\n            setCurrentItem(item);\n        }\n        setIsExpanded((prev) => !prev);\n    };\n\n    return {\n        isExpanded,\n        isActive,\n        onItemClick\n    };\n};\n","import React from 'react';\nimport { any, arrayOf, func, string } from 'prop-types';\nimport { Column, Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport CollapsibleContent from 'components/collapsible/CollapsibleContent';\nimport { useSidebar } from 'hooks/useSidebar';\n\nconst useStyles = createUseStyles({\n    activeContainer: {\n        backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n    },\n    container: {\n        display: 'flex',\n        height: 56,\n        cursor: 'pointer',\n        '&:hover': {\n            backgroundColor: ({ theme }) => theme.color.paleBlueTransparent\n        },\n        paddingLeft: ({ level }) => 32 * level,\n        transition: 'all 0.2s ease-in-out'\n    },\n    leftBar: {\n        borderLeft: ({ theme, level }) =>\n            level > 1 ? 'none' : `3px solid ${theme.color.darkGrayishBlue}`\n    },\n    title: {\n        fontSize: 16,\n        lineHeight: '20px',\n        letterSpacing: '0.2px',\n        color: ({ theme, isActive }) => (isActive ? theme.color.paleBlue : theme.color.grayishBlue),\n        marginLeft: 24\n    }\n});\n\nfunction MenuItemComponent({ children, icon: Icon, id, items = [], level = 1, onClick, title }) {\n    const theme = useTheme();\n    const isCollapsible = children && children.length > 0;\n    const { isExpanded, isActive, onItemClick } = useSidebar({\n        isCollapsible,\n        item: id,\n        items\n    });\n    const classes = useStyles({ theme, level, isActive });\n    const classNameColumn = isActive ? classes.leftBar : '';\n    const classNameContainer = [classes.container, isActive && classes.activeContainer].join(' ');\n    const iconColor = isActive ? theme.color.paleBlue : theme.color.grayishBlue2;\n\n    function onItemClicked(e) {\n        if (onClick) {\n            onClick(e);\n        }\n        onItemClick();\n    }\n\n    return (\n        <Column key={id} className={classNameColumn}>\n            <Row vertical='center' onClick={onItemClicked} className={classNameContainer}>\n                <Icon fill={iconColor} opacity={!isActive && '0.4'} />\n                <span className={classes.title}>{title}</span>\n            </Row>\n            {isCollapsible && (\n                <CollapsibleContent expanded={isExpanded}>\n                    {children.map((child) => child.type({ ...child.props }))}\n                </CollapsibleContent>\n            )}\n        </Column>\n    );\n}\n\nMenuItemComponent.defaultProps = {};\n\nMenuItemComponent.propTypes = {\n    children: any,\n    icon: func,\n    id: string,\n    onClick: func,\n    items: arrayOf(string),\n    title: string\n};\n\nexport default MenuItemComponent;\n","const { createContext } = require(\"react\");\n\nexport const UserContext = createContext()\n","import React, { useEffect, useState } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { useHistory } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport {\n    IconAgents,\n    IconArticles,\n    IconContacts,\n    IconLogout,\n    IconSubscription,\n    IconTickets\n} from 'assets/icons';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport LogoComponent from './LogoComponent';\nimport Menu from './MenuComponent';\nimport MenuItem from './MenuItemComponent';\nimport { UserContext } from 'util/userContext';\n\nconst useStyles = createUseStyles({\n    separator: {\n        borderTop: ({ theme }) => `1px solid ${theme.color.lightGrayishBlue}`,\n        marginTop: 16,\n        marginBottom: 16,\n        opacity: 0.06\n    }\n});\n\nfunction SidebarComponent(props) {\n    const { permission } = props;\n    const [show, setShow] = useState(true);\n    const { signOut1 } = React.useContext(UserContext);\n    const [permissionStatus, setPermissionStatus] = useState('');\n    const { push } = useHistory();\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const isMobile = window.innerWidth <= 1080;\n    async function logout() {\n        signOut1();\n    }\n    function onClick(slug, parameters = {}) {\n        push(convertSlugToUrl(slug, parameters));\n    }\n    const data = JSON.parse(localStorage.getItem('permission'));\n\n    const handler = (e) => setShow(e.matches);\n    window.matchMedia('(min-width: 768px)').addEventListener('change', handler);\n    useEffect(() => {\n        setPermissionStatus(data);\n    }, []);\n    return show ? (\n        <div>\n            <Menu isMobile={isMobile}>\n                <div style={{ paddingTop: 30, paddingBottom: 30 }}>\n                    <LogoComponent />\n                </div>\n                <MenuItem\n                    id={SLUGS.dashboard}\n                    title='Dashboard'\n                    icon={IconSubscription}\n                    onClick={() => onClick(SLUGS.dashboard)}\n                />\n                {permission?.user ? (\n                    <MenuItem\n                        id={SLUGS.UserList}\n                        title='UserList'\n                        icon={IconContacts}\n                        onClick={() => onClick(SLUGS.UserList)}\n                    />\n                ) : null}\n                {permission?.item ? (\n                    <MenuItem\n                        id={SLUGS.items}\n                        title='Items'\n                        icon={IconTickets}\n                        onClick={() => onClick(SLUGS.items)}\n                    />\n                ) : null}\n                {permission?.payment ? (\n                    <MenuItem\n                        id={SLUGS.PaymentList}\n                        title='PaymentList'\n                        icon={IconTickets}\n                        onClick={() => onClick(SLUGS.PaymentList)}\n                    />\n                ) : null}\n\n                {permission?.addAdmin ? (\n                    <MenuItem\n                        id={SLUGS.AdminList}\n                        title='AdminList'\n                        icon={IconAgents}\n                        onClick={() => onClick(SLUGS.AdminList)}\n                    />\n                ) : null}\n\n                {permission?.addProduct ? (\n                    <MenuItem\n                        id={SLUGS.AddProduct}\n                        title='AddProduct'\n                        icon={IconSubscription}\n                        onClick={() => onClick(SLUGS.AddProduct)}\n                    />\n                ) : null}\n                {permission?.feedback ? (\n                    <MenuItem\n                        id={SLUGS.FeedBack}\n                        title='FeedBack'\n                        icon={IconAgents}\n                        onClick={() => onClick(SLUGS.FeedBack)}\n                    />\n                ) : null}\n                {permission?.priceSheet ? (\n                    <MenuItem\n                        id={SLUGS.PriceSheet}\n                        title='PriceSheet'\n                        icon={IconAgents}\n                        onClick={() => onClick(SLUGS.PriceSheet)}\n                    />\n                ) : null}\n                {permission?.pdfDetail ? (\n                    <MenuItem\n                        id={SLUGS.PdfDetail}\n                        title='PdfDetail'\n                        icon={IconArticles}\n                        onClick={() => onClick(SLUGS.PdfDetail)}\n                    />\n                ) : null}\n\n                {permission?.privacy ? (\n                    <MenuItem\n                        id={SLUGS.privacyPolicy}\n                        title='PrivacyPolicy'\n                        icon={IconSubscription}\n                        onClick={() => onClick(SLUGS.privacyPolicy)}\n                    />\n                ) : null}\n                {permission?.term ? (\n                    <MenuItem\n                        id={SLUGS.TermAndCondition}\n                        title='TermAndCondition'\n                        icon={IconArticles}\n                        onClick={() => onClick(SLUGS.TermAndCondition)}\n                    />\n                ) : null}\n                <div className={classes.separator}></div>\n                <MenuItem id='logout' title='Logout' icon={IconLogout} onClick={logout} />\n            </Menu>\n        </div>\n    ) : null;\n}\n\nexport default SidebarComponent;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { SidebarProvider } from 'hooks/useSidebar';\n\nfunction SidebarContext({ children }) {\n    const { pathname } = useLocation();\n    return <SidebarProvider defaultItem={pathname}>{children}</SidebarProvider>;\n}\nexport default SidebarContext;\n","import React, { useState } from 'react';\nimport { arrayOf, element, func, number, oneOfType, shape, string } from 'prop-types';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { IconArrowUp } from 'assets/icons';\n\nconst useStyles = createUseStyles((theme) => ({\n    arrowContainer: {\n        position: 'absolute',\n        top: -19,\n        right: 15\n    },\n    dropdownButton: {\n        alignItems: 'center',\n        background: 'transparent',\n        border: 'none',\n        cursor: 'pointer',\n        display: 'flex',\n        padding: 0,\n        outline: 'none'\n    },\n    dropdownContainer: {\n        position: 'relative'\n    },\n    dropdownItemsContainer: {\n        background: 'white',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 5,\n        minWidth: 170,\n        padding: 0,\n        position: 'absolute',\n        width: '100%',\n        top: ({ position }) => position.top,\n        right: ({ position }) => position.right,\n        bottom: ({ position }) => position.bottom,\n        left: ({ position }) => position.left,\n        '& button:first-of-type:hover div > svg > path': {\n            fill: theme.color.paleBlue\n        }\n    },\n    dropdownItem: {\n        cursor: 'pointer',\n        background: 'transparent',\n        border: 'none',\n        fontSize: 16,\n        outline: 'none',\n        padding: '10px 10px',\n        '&:hover': {\n            background: theme.color.paleBlue\n        },\n        '&:after': {\n            content: '\" \"',\n            display: 'block',\n            position: 'relative',\n            bottom: -10,\n            width: '100%',\n            height: 1,\n            background: theme.color.paleBlue\n        },\n        '&:last-child:after': {\n            content: '',\n            display: 'none'\n        }\n    }\n}));\n\nfunction DropdownComponent({ label, options, position }) {\n    const [userMenuOpen, setUserMenuOpen] = useState(false);\n    const theme = useTheme();\n    const classes = useStyles({ theme, position });\n\n    function onDropdownClick() {\n        setUserMenuOpen((prev) => !prev);\n    }\n\n    function onItemClick(onClick) {\n        setUserMenuOpen(false);\n        onClick && onClick();\n    }\n\n    return (\n        <Column className={classes.dropdownContainer}>\n            <button className={classes.dropdownButton} onClick={onDropdownClick}>\n                {label}\n            </button>\n            {userMenuOpen && (\n                <Column className={classes.dropdownItemsContainer}>\n                    {options.map((option, index) => (\n                        <button\n                            key={`option-${index}`}\n                            className={classes.dropdownItem}\n                            onClick={() => onItemClick(option.onClick)}\n                        >\n                            {option.label}\n                            {index === 0 && (\n                                <div className={classes.arrowContainer}>\n                                    <IconArrowUp />\n                                </div>\n                            )}\n                        </button>\n                    ))}\n                </Column>\n            )}\n        </Column>\n    );\n}\n\nDropdownComponent.propTypes = {\n    label: oneOfType([string, element]),\n    options: arrayOf(\n        shape({\n            label: oneOfType([string, arrayOf(element)]),\n            onClick: func\n        })\n    ),\n    position: shape({\n        top: number,\n        right: number,\n        bottom: number,\n        left: number\n    })\n};\n\nDropdownComponent.defaultProps = {\n    position: {\n        top: 52,\n        right: -6\n    }\n};\n\nexport default DropdownComponent;\n","import DropdownComponent from './DropdownComponent';\n\nexport default DropdownComponent;\n","import React, { useContext, useEffect, useState } from 'react';\nimport { string } from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { Row } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { SidebarContext } from 'hooks/useSidebar';\nimport SLUGS from 'resources/slugs';\nimport DropdownComponent from 'components/dropdown';\nimport { onValue, ref } from 'firebase/database';\nimport { database } from 'configs/firebaseConfig';\nimport { UserContext } from 'util/userContext';\nconst useStyles = createUseStyles((theme) => ({\n    avatar: {\n        height: 35,\n        width: 35,\n        minWidth: 35,\n        borderRadius: 50,\n        marginLeft: 14,\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        '@media (max-width: 768px)': {\n            marginLeft: 14\n        }\n    },\n    container: {\n        height: 40\n    },\n    name: {\n        ...theme.typography.itemTitle,\n        textAlign: 'right',\n        '@media (max-width: 768px)': {\n            display: 'none'\n        }\n    },\n    separator: {\n        borderLeft: `1px solid ${theme.color.lightGrayishBlue2}`,\n        marginLeft: 32,\n        marginRight: 32,\n        height: 32,\n        width: 2,\n        '@media (max-width: 768px)': {\n            marginLeft: 14,\n            marginRight: 0\n        }\n    },\n    title: {\n        ...theme.typography.title,\n        '@media (max-width: 1080px)': {\n            marginLeft: 50\n        },\n        '@media (max-width: 468px)': {\n            fontSize: 20\n        }\n    },\n    iconStyles: {\n        cursor: 'pointer',\n        marginLeft: 25,\n        '@media (max-width: 768px)': {\n            marginLeft: 12\n        }\n    }\n}));\n\nfunction HeaderComponent() {\n    const { push } = useHistory();\n    const { currentItem } = useContext(SidebarContext);\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const [name, setName] = useState('');\n    const [photo, setPhoto] = useState('');\n    const { signOut1 } = React.useContext(UserContext);\n    let title;\n    switch (true) {\n        case currentItem === SLUGS.dashboard:\n            title = 'Dashboard';\n            break;\n        case currentItem === SLUGS.items:\n            title = 'items';\n            break;\n        case currentItem === SLUGS.UserList:\n            title = 'UserList';\n            break;\n        case currentItem === SLUGS.AdminList:\n            title = 'AdminList';\n            break;\n        case currentItem === SLUGS.AddProduct:\n            title = 'AddProduct';\n            break;\n        case currentItem === SLUGS.UserDetail:\n            title = 'UserDetail';\n            break;\n        case currentItem === SLUGS.ViewDraft:\n            title = 'ViewDraft';\n            break;\n        case currentItem === SLUGS.PaymentList:\n            title = 'PaymentList';\n            break;\n        case currentItem === SLUGS.CustomerDetail:\n            title = 'CustomerDetail';\n            break;\n        case currentItem === SLUGS.FeedBack:\n            title = 'FeedBack';\n            break;\n        case currentItem === SLUGS.TermAndCondition:\n            title = 'TermAndCondition';\n            break;\n        case currentItem === SLUGS.privacyPolicy:\n            title = 'privacyPolicy';\n            break;\n        case currentItem === SLUGS.settings:\n            title = 'Settings';\n            break;\n        case currentItem === SLUGS.PdfDetail:\n            title = 'PdfDetail';\n            break;\n        default:\n            title = '';\n    }\n\n    function onSettingsClick() {\n        push(SLUGS.settings);\n    }\n\n    useEffect(() => {\n        getUserDetail();\n    }, []);\n    const getUserDetail = async () => {\n        try {\n            const userID = await localStorage.getItem('userID');\n            if (userID != null) {\n                const result = ref(database, `/ADMIN/USERS/${userID}`);\n                onValue(result, (snapshot) => {\n                    const data = snapshot.val();\n                    setName(data?.firstName + data?.lastName);\n                    setPhoto(data?.photo);\n                });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <Row className={classes.container} vertical='center' horizontal='space-between'>\n            <span className={classes.title}>{title}</span>\n            <Row vertical='center'>\n                <div className={classes.iconStyles}>{/* <IconSearch /> */}</div>\n                <div className={classes.iconStyles}></div>\n                <div className={classes.separator}></div>\n                <DropdownComponent\n                    label={\n                        <>\n                            {/* <img\n                                src={\n                                    photo\n                                        ? photo\n                                        : ''\n                                }\n                                alt='avatar'\n                                className={classes.avatar}\n                            /> */}\n                        </>\n                    }\n                    options={[\n                        {\n                            label: 'Settings',\n                            onClick: onSettingsClick\n                        },\n                        {\n                            label: 'Logout',\n                            onClick: () => signOut1()\n                        }\n                    ]}\n                    position={{\n                        top: 52,\n                        right: -6\n                    }}\n                />\n            </Row>\n        </Row>\n    );\n}\n\nHeaderComponent.propTypes = {\n    title: string\n};\n\nexport default HeaderComponent;\n","import React from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Column } from 'simple-flexbox';\n\nconst useStyles = createUseStyles({\n    '@keyframes loadingSpin': {\n        from: { transform: 'rotate(0deg)' },\n        to: { transform: 'rotate(360deg)' }\n    },\n    container: {\n        backgroundColor: ({ theme, noTransparency, backgroundColor }) => {\n            if (backgroundColor) {\n                return noTransparency ? backgroundColor : `${backgroundColor}A0`;\n            }\n            return noTransparency\n                ? theme.color.veryDarkGrayishBlue\n                : `${theme.color.veryDarkGrayishBlue}A0`;\n        },\n        height: '100%',\n        minHeight: ({ fullScreen }) => (fullScreen ? '100vh' : '100%'),\n        width: ({ fullScreen }) => (fullScreen ? '100vw' : '100%'),\n        position: ({ fullScreen }) => (fullScreen ? 'fixed' : 'relative'),\n        top: 0,\n        left: 0,\n        zIndex: ({ zIndex }) => zIndex\n    },\n    loading: {\n        border: ({ theme }) => `16px solid ${theme.color.lightGrayishBlue}`,\n        borderRadius: '50%',\n        borderTop: ({ theme }) => `16px solid ${theme.color.brightBlue}`,\n        width: 120,\n        height: 120,\n        animationName: '$loadingSpin',\n        animationTimingFunction: 'linear',\n        animationDuration: '2s',\n        animationIterationCount: 'infinite'\n    },\n    loadingSpan: {\n        color: 'white',\n        marginTop: 10,\n        fontSize: 18\n    }\n});\n\nfunction LoadingComponent({\n    backgroundColor,\n    children,\n    fullScreen,\n    height,\n    hideText,\n    loading,\n    noTransparency,\n    width,\n    zIndex\n}) {\n    const theme = useTheme();\n    const classes = useStyles({ theme, fullScreen, noTransparency, backgroundColor, zIndex });\n    return (\n        <div style={{ position: 'relative', height, width }}>\n            {loading && (\n                <Column className={classes.container} horizontal='center' vertical='center'>\n                    <div className={classes.loading}></div>\n                    {!hideText && <span className={classes.loadingSpan}>Loading...</span>}\n                </Column>\n            )}\n            {children || <div />}\n        </div>\n    );\n}\n\nLoadingComponent.defaultProps = {\n    fullScreen: true,\n    zIndex: 10\n};\n\nexport default LoadingComponent;\n","import LoadingComponent from './LoadingComponent';\n\nexport default LoadingComponent;\n","import { css } from '@emotion/react';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\ntoast.configure();\nconst config = {\n    position: 'top-right',\n    autoClose: 2000,\n    hideProgressBar: false,\n    closeOnClick: true,\n    pauseOnHover: true,\n    draggable: true,\n    progress: undefined,\n    theme: 'dark',\n    background: 'red',\n    className: 'toast',\n    toast: css({\n        color: '#343a40',\n        minHeight: '60px',\n        borderRadius: '8px',\n        background: '#2FEDAD',\n        boxShadow: '2px 2px 20px 2px rgba(0,0,0,0.3)'\n    })\n};\nexport const notify = (message, type) => {\n    switch (type) {\n        case 1:\n            toast.success(message, config);\n            break;\n        case 0:\n            toast.error(message, config);\n            break;\n        case 3:\n            toast.info(message, config);\n            break;\n        case 2:\n            toast.warning(message, config);\n            break;\n        default:\n            toast.success(message, config);\n            break;\n    }\n};\n","import { database } from 'configs/firebaseConfig';\nimport React, { useEffect, useState } from 'react';\nimport { ref, onValue, set } from 'firebase/database';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Button } from '@material-ui/core';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function PrivacyPolicy() {\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const [description, setDescription] = useState('');\n\n    const getDetail = () => {\n        try {\n            const result = ref(database, '/ADMIN/privacyPolicy');\n            onValue(result, (snapShot) => {\n                if (snapShot.val()) {\n                    setDescription(snapShot.val().Description);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getDetail();\n    }, []);\n    const handleMessageChange = (event) => {\n        setDescription(event.target.value);\n    };\n    function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const result = ref(database, '/ADMIN/privacyPolicy');\n            set(result, {\n                title: 'privacyPolicy',\n                Description: description\n            });\n            notify('PrivacyPolicy Successfully Updated!', 1);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const btnstyle = {\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        margin: 30\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    className={classes.areaText}\n                    value={description}\n                    onChange={handleMessageChange}\n                />\n                <Button className={classes.btn} type='submit' style={btnstyle} variant='contained'>\n                    Add\n                </Button>\n            </form>\n            <ToastContainer />\n        </div>\n    );\n}\n\nconst useStyles = createUseStyles((theme) => ({\n    mainDiv: {\n        display: 'flex',\n        height: '100%',\n        width: '100%'\n    },\n    btn: {\n        width: '30%',\n        borderRadius: 10,\n        height: 50,\n        color: 'white',\n        marginTop: '5%',\n        backgroundColor: 'black'\n    },\n    areaText: {\n        width: '100%',\n        height: 300,\n        borderRadius: 10,\n        padding: 20,\n        backgroundColor: theme.color.WHITE\n    }\n}));\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Delete } from '@material-ui/icons';\nimport { ToastContainer } from 'react-toastify';\nimport { notify } from 'util/notify';\nimport { formateData } from 'util/formateData';\nimport { v4 as uuid } from 'uuid';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = createUseStyles((theme) => ({\n    cardsContainer: {\n        marginRight: -30,\n        marginTop: -30\n    },\n    input: {\n        height: 50,\n        width: '50%',\n        borderRadius: 10,\n        padding: 20\n    },\n    btn: {\n        height: 50,\n        width: '20%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: 'black',\n        color: 'white',\n        marginLeft: 40\n    },\n    bottomView: {\n        // backgroundColor:'red',\n        widh: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 50\n    },\n    bottomView1: {\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        widh: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 50,\n        height: 50,\n        alignItems: 'center',\n        borderRadius: 10,\n        padding: 20\n    },\n    addItemView: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignSelf: 'flex-end'\n    },\n    h1: {\n        color: 'white',\n        fontSize: 23\n    },\n    h3: {\n        color: theme.color.veryDarkGrayishBlue\n    },\n    img: {\n        width: 100,\n        height: 50\n    }\n}));\n\nexport default function Items() {\n    const theme = useTheme();\n\n    const id = uuid().slice(0, 8);\n    const classes = useStyles({ theme });\n    const [itemName, setItemName] = useState('');\n    const [data, setData] = useState([]);\n\n    const btn = {\n        height: 50,\n        width: '20%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        marginLeft: 40\n    };\n\n    const addedOrNot = () => {\n        let temp = false;\n        data.map((item) => {\n            if (item.title.toLowerCase() == itemName.trim().toLocaleLowerCase()) temp = true;\n        });\n        return temp;\n    };\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (itemName.trim() && !addedOrNot()) {\n                const starCount = ref(database, `/ADMIN/ITEM/${id}`);\n                set(starCount, {\n                    ID: id,\n                    title: itemName.trim()\n                });\n                setItemName('');\n                notify('Item Successfully Added!', 1);\n            } else {\n                if (itemName.trim()) notify('Item Already Added!', 2);\n                else notify('invalid itemName', 0);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    const onchange = (event) => {\n        setItemName(event.target.value);\n    };\n    useEffect(() => {\n        getItemValues();\n    }, []);\n    const getItemValues = () => {\n        try {\n            const starCountRef = ref(database, '/ADMIN/ITEM');\n            onValue(starCountRef, (snapshot) => {\n                const data = formateData(snapshot.val());\n                setData(data);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const onDelete = (item) => {\n        try {\n            const starCount = ref(database, `/ADMIN/ITEM/${item.ID}`);\n            set(starCount, null);\n            setTimeout(() => {\n                notify('Item has been Deleted!', 0);\n            }, 100);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n    return (\n        <div className={classes.mainDiv}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.addItemView}>\n                    <input value={itemName} className={classes.input} onChange={onchange} />\n                    <Button type='submit' style={btn}>\n                        Add\n                    </Button>\n                </div>\n            </form>\n            <TableContainer\n                style={{\n                    marginTop: 100\n                }}\n                component={Paper}\n            >\n                <Table aria-label='customized table'>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align='left'>No.</StyledTableCell>\n                            <StyledTableCell align='left'>ItemName</StyledTableCell>\n                            <StyledTableCell align='left'>Action</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {data &&\n                            data.map((item, index) => (\n                                <StyledTableRow align='left' key={item.id}>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {index + 1}\n                                    </StyledTableCell>\n                                    <StyledTableCell align='left'>{item.title}</StyledTableCell>\n                                    <StyledTableCell component='th' scope='row'>\n                                        <Delete onClick={() => onDelete(item)}></Delete>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ToastContainer />\n        </div>\n    );\n}\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Delete } from '@material-ui/icons';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\nimport { v4 as uuid } from 'uuid';\nimport { Button } from '@material-ui/core';\n\nconst useStyles = createUseStyles((theme) => ({\n    cardsContainer: {\n        marginRight: -30,\n        marginTop: -30\n    },\n    input: {\n        height: 50,\n        width: '50%',\n        borderRadius: 10,\n        padding: 20\n    },\n    btn: {\n        height: 50,\n        width: '20%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        marginLeft: 40\n    },\n    bottomView: {\n        // backgroundColor:'red',\n\n        widh: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 50\n    },\n    bottomView1: {\n        // backgroundImage: `linear-gradient(to right,#ffffff,#000001)`,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        width: '100%',\n        display: 'flex',\n        flexDirection: 'row',\n        justifyContent: 'space-between',\n        marginTop: 50,\n        height: 50,\n        alignItems: 'center',\n        borderRadius: 10,\n        padding: 20\n    },\n    addItemView: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignSelf: 'flex-end'\n    },\n    h1: {\n        color: 'white',\n        fontSize: 23\n    },\n    h3: {\n        color: theme.color.veryDarkGrayishBlue\n    },\n    img: {\n        width: 100,\n        height: 50\n    }\n}));\n\nexport default function PaymentList() {\n    const id = uuid().slice(0, 8);\n    const [itemName, setItemName] = useState('');\n    const [data, setData] = useState([]);\n\n    const theme = useTheme();\n\n    const btn = {\n        height: 50,\n        width: '20%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        marginLeft: 40\n    };\n\n    const addedOrNot = () => {\n        let temp = false;\n        data.map((item) => {\n            if (item.title.toLowerCase() == itemName.trim().toLocaleLowerCase()) temp = true;\n        });\n        return temp;\n    };\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            if (itemName.trim() && !addedOrNot()) {\n                const starCount = ref(database, `/ADMIN/PAYMENTTYPE/${id}`);\n                set(starCount, {\n                    ID: id,\n                    title: itemName.trim()\n                });\n                setItemName('');\n                setTimeout(() => {\n                    notify('PaymentMethod Successfully Added!', 1);\n                }, 100);\n            } else {\n                if (itemName.trim()) notify('Method Already Added!', 2);\n                else notify('Invalid PaymentMethod!', 0);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const classes = useStyles(theme);\n    const onchange = (event) => {\n        setItemName(event.target.value);\n    };\n    const getPaymentList = () => {\n        try {\n            const starCountRef = ref(database, '/ADMIN/PAYMENTTYPE');\n            onValue(starCountRef, (snapshot) => {\n                let arr = [];\n                const data = snapshot.val();\n                const isArray = Array.isArray(data);\n                if (isArray) {\n                    const newArr = data.filter((item) => item);\n                    setData(newArr);\n                } else {\n                    let arr = [];\n                    for (let key in data) {\n                        if (data.hasOwnProperty(key)) {\n                            let value = data[key];\n                            arr.push(value);\n                        }\n                    }\n                    console.log(arr);\n                    const newArr = arr.filter((item) => item);\n                    setData(newArr);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getPaymentList();\n    }, []);\n\n    const onDelete = (item) => {\n        try {\n            const starCount = ref(database, `/ADMIN/PAYMENTTYPE/${item.ID}`);\n            set(starCount, null);\n            setTimeout(() => {\n                notify('PaymentMethod has been Deleted!', 0);\n            }, 100);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <div className={classes.mainDiv}>\n            <form onSubmit={handleSubmit}>\n                <div className={classes.addItemView}>\n                    <input value={itemName} className={classes.input} onChange={onchange} />\n                    <Button type='submit' style={btn}>\n                        Add\n                    </Button>\n                </div>\n            </form>\n            <TableContainer\n                style={{\n                    marginTop: 100\n                }}\n                component={Paper}\n            >\n                <Table aria-label='customized table'>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align='left'>No.</StyledTableCell>\n                            <StyledTableCell align='left'>ItemName</StyledTableCell>\n                            <StyledTableCell align='left'>Action</StyledTableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {data &&\n                            data.map((item, index) => (\n                                <StyledTableRow align='left' key={item.id}>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {index + 1}\n                                    </StyledTableCell>\n                                    <StyledTableCell align='left'>{item.title}</StyledTableCell>\n                                    <StyledTableCell component='th' scope='row'>\n                                        <Delete onClick={() => onDelete(item)}></Delete>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n            <ToastContainer className='toast' />\n        </div>\n    );\n}\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function FeedBackList() {\n    const theme = useTheme();\n    const [data, setData] = useState([]);\n    const ReadMore = ({ children }) => {\n        const text = children;\n        const [isReadMore, setIsReadMore] = useState(true);\n        const toggleReadMore = () => {\n            setIsReadMore(!isReadMore);\n        };\n        return (\n            <p className='text'>\n                {isReadMore ? text.slice(0, 150) : text}\n                {\n                    <span\n                        style={{\n                            color: 'red'\n                        }}\n                        onClick={toggleReadMore}\n                        className='read'\n                    >\n                        {isReadMore ? '...read more' : ' show less'}\n                    </span>\n                }\n            </p>\n        );\n    };\n\n    const getFeedbackList = () => {\n        try {\n            const starCountRef = ref(database, '/ADMIN/FeedBack');\n            onValue(starCountRef, (snapshot) => {\n                if (Array.isArray(snapshot.val())) {\n                    let newArr = snapshot.val();\n                    setData(newArr);\n                } else {\n                    let arr = [];\n                    Object.keys(snapshot.val()).map((key) => arr.push(snapshot.val()[key]));\n\n                    console.log(arr);\n                    setData(arr);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(() => {\n        getFeedbackList();\n    }, []);\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label='customized table'>\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell align='left'>No.</StyledTableCell>\n                        <StyledTableCell align='left'>Name</StyledTableCell>\n                        <StyledTableCell align='left'>Email</StyledTableCell>\n                        <StyledTableCell align='left'>FeedBack</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {data &&\n                        data.map((item, index) => (\n                            <StyledTableRow align='left' key={item.id}>\n                                <StyledTableCell component='th' scope='row'>\n                                    {index + 1}\n                                </StyledTableCell>\n                                <StyledTableCell component='th' scope='row'>\n                                    {item.name}\n                                </StyledTableCell>\n                                <StyledTableCell component='th' scope='row'>\n                                    {item.email}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    <ReadMore>{item.feedBack}</ReadMore>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        ))}\n                </TableBody>\n            </Table>\n            <ToastContainer />\n        </TableContainer>\n    );\n}\n","import React, { useState } from 'react';\nimport Lightbox from 'react-modal-image/lib/Lightbox';\nexport default function ImageModal({ url, imageStyle }) {\n    const [openImage, setOpenImage] = useState(false);\n    return (\n        <div>\n            <img src={url} loading='lazy' onClick={() => setOpenImage(true)} style={imageStyle} />\n            {openImage ? <Lightbox large={url} onClose={() => setOpenImage(false)} /> : null}\n        </div>\n    );\n}\n","const styles = {\n    mainDiv: {\n        display: 'flex',\n        height: '100%',\n        width: '100%'\n    },\n    img: {\n        width: 50,\n        height: 50,\n        borderRadius: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex'\n    }\n};\n\nexport default styles;\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref, update } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { useHistory } from 'react-router-dom';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\nimport { formateData } from 'util/formateData';\nimport SLUGS from 'resources/slugs';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport ImageModal from 'components/ImageModal/ImageModal';\n\nimport styles from './styles';\nimport { Delete } from '@material-ui/icons';\n\nexport default function UserList() {\n    const theme = useTheme();\n    const { push } = useHistory();\n\n    const [user, setUsers] = useState([]);\n    const [adminLevel, setAdminLevel] = useState(0);\n\n    const getUserDetail = (id) => {\n        let userData = null;\n        const userRef = ref(database, `USERS/${id}`);\n        onValue(userRef, (snapshot) => {\n            const data = snapshot.val();\n            userData = data;\n        });\n        return userData;\n    };\n\n    const getUserList = async () => {\n        try {\n            const id = await localStorage.getItem('userID');\n            const userRef = ref(database, `/ADMIN/USERS/${id}`);\n            const subUserRef = ref(database, `/ADMIN/USERS/${id}/SUB_USERS`);\n            onValue(userRef, (snapshot) => {\n                setAdminLevel(snapshot.val().adminLevel);\n                if (snapshot.val().adminLevel == '2') {\n                    //can only see subusers data\n                    onValue(subUserRef, (snapshot) => {\n                        const data = snapshot.val();\n                        setUsers(formateData(data));\n                    });\n                } else if (snapshot.val().adminLevel == '1') {\n                    //level 1 admin will be able to see all the user data\n                    const starCountRef = ref(database, '/USERS');\n                    onValue(starCountRef, (snapshot) => {\n                        const data = snapshot.val();\n                        setUsers(formateData(data).filter((item) => item.isDeleted == false));\n                    });\n                } else {\n                    //no need to show this for level3 user\n                    onValue(userRef, (snapshot) => {\n                        user.push(snapshot.val());\n                        console.log(user);\n                    });\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(() => {\n        getUserList();\n    }, []);\n\n    function onClick(slug, data, parameters = {}) {\n        push({\n            pathname: convertSlugToUrl(slug, parameters),\n            state: data\n        });\n    }\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n    const onAction = async (item) => {\n        try {\n            const id = await localStorage.getItem('userID');\n            if (id != item.ID) {\n                const starCountRef = ref(database, `/USERS/${item.ID}`);\n                if (starCountRef) {\n                    update(starCountRef, {\n                        isDeleted: !item.isDeleted\n                    });\n                    setTimeout(() => {\n                        notify(\n                            `User has been ${\n                                !item.isDeleted ? 'Deleted' : 'Activated'\n                            } Successfully`,\n                            !item.isDeleted ? 0 : 1\n                        );\n                    }, 200);\n                }\n            } else {\n                notify(\"You can't delete this User\", 0);\n            }\n        } catch (error) {\n            console.log('error');\n        }\n    };\n    return (\n        <TableContainer component={Paper}>\n            <Table aria-label='customized table'>\n                <TableHead>\n                    <TableRow>\n                        <StyledTableCell align='left'>No.</StyledTableCell>\n                        <StyledTableCell align='left'>Photo</StyledTableCell>\n                        <StyledTableCell align='left'>Name</StyledTableCell>\n                        <StyledTableCell align='left'>PhoneNumber</StyledTableCell>\n                        <StyledTableCell align='left'>Detail</StyledTableCell>\n                        <StyledTableCell align='left'>Delete</StyledTableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {user.map((itemDetails, index) => {\n                        const item = getUserDetail(itemDetails.ID);\n                        return (\n                            <StyledTableRow align='left' key={itemDetails.ID + '['}>\n                                <StyledTableCell component='th' scope='row'>\n                                    {index + 1}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    {item?.photo ? (\n                                        <ImageModal url={item?.photo} imageStyle={styles.img} />\n                                    ) : (\n                                        <div className={styles.img}>-</div>\n                                    )}\n                                </StyledTableCell>\n                                <StyledTableCell component='th' scope='row'>\n                                    {item?.firstName == undefined\n                                        ? item?.email\n                                        : item?.firstName + '   ' + item?.lastName}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    {item?.phoneNumber\n                                        ? (item?.phoneNumber + '').substring(0, 3) +\n                                          '   ' +\n                                          (item?.phoneNumber + '').substring(3, 6) +\n                                          '   ' +\n                                          (item?.phoneNumber + '').substring(6, 10) +\n                                          '   '\n                                        : '-'}\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    <Button\n                                        onClick={() => onClick(SLUGS.UserDetail, { id: item?.ID })}\n                                    >\n                                        View Detail\n                                    </Button>\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    <Delete onClick={() => onAction(item)}></Delete>\n                                </StyledTableCell>\n                            </StyledTableRow>\n                        );\n                    })}\n                </TableBody>\n            </Table>\n            <ToastContainer />\n        </TableContainer>\n    );\n}\n","import { database } from 'configs/firebaseConfig';\nimport React, { useEffect, useState } from 'react';\nimport { ref, onValue, set } from 'firebase/database';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Button } from '@material-ui/core';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function TermAndConditions() {\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const [description, setDescription] = useState('');\n\n    const getDetail = () => {\n        try {\n            const result = ref(database, '/ADMIN/termAndcondition');\n            onValue(result, (snapShot) => {\n                if (snapShot.val()) {\n                    setDescription(snapShot.val().Description);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getDetail();\n    }, []);\n    const handleMessageChange = (event) => {\n        setDescription(event.target.value);\n    };\n    function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const result = ref(database, '/ADMIN/termAndcondition');\n            set(result, {\n                title: 'termAndcondition',\n                Description: description\n            });\n            notify('TermAndCondition Successfully Updated!', 1);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const btnStyle = {\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        margin: 30\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <textarea\n                    className={classes.areaText}\n                    value={description}\n                    onChange={handleMessageChange}\n                />\n                <Button className={classes.btn} type='submit' style={btnStyle} variant='contained'>\n                    Add\n                </Button>\n            </form>\n            <ToastContainer />\n        </div>\n    );\n}\n\nconst useStyles = createUseStyles((theme) => ({\n    mainDiv: {\n        display: 'flex',\n        height: '100%',\n        width: '100%'\n    },\n    btn: {\n        width: '30%',\n        borderRadius: 10,\n        height: 50,\n        color: 'white',\n        marginTop: '5%',\n        backgroundColor: 'black'\n    },\n    areaText: {\n        width: '100%',\n        height: 300,\n        borderRadius: 10,\n        padding: 20,\n        backgroundColor: theme.color.WHITE\n    }\n}));\n","const styles = {\n    div: {\n        height: '50%'\n    },\n    img: {\n        height: 150,\n        width: 150,\n        borderRadius: 10\n    },\n    div1: {\n        backgroundColor: 'white',\n        padding: 20,\n        marginTop: 20,\n        width: '50%',\n        borderRadius: 10,\n        boxShadow: ' 1px 1px 1px 1px #9E9E9E'\n    },\n    text: {\n        display: 'flex',\n        alignItems: 'center',\n        borderBottom: '0.5px solid grey',\n        paddingBottom: 10\n    },\n    title: {\n        fontSize: 30,\n        marginTop: 20,\n        marginBottom: 20,\n        fontWeight: 'bold'\n    },\n    leftDiv: {\n        alignItems: 'center',\n        display: 'flex',\n        gap: 10\n    }\n};\n\nexport default {\n    styles\n};\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set, update } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport { Delete } from '@material-ui/icons';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\nimport { formateData } from 'util/formateData';\nimport { useHistory } from 'react-router-dom';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport SLUGS from 'resources/slugs';\nimport ImageModal from 'components/ImageModal/ImageModal';\nimport userDetailStyle from './styles';\n\nexport default function UserDetail(props) {\n    const theme = useTheme();\n    const { push } = useHistory();\n    const [data, setData] = useState([]);\n    const [user, setUser] = useState('');\n    const { styles } = userDetailStyle;\n    const [isApproved, setIsApproved] = useState(false);\n    \n    function onClick(slug, data, parameters = {}) {\n        push({\n            pathname: convertSlugToUrl(slug, parameters),\n\n            state: data\n        });\n    }\n    const btn = {\n        position: 'absolute',\n        top: '20%',\n        right: '8%',\n        height: 50,\n        width: '10%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        marginLeft: 40\n    };\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    const { id } = props.location.state;\n    useEffect(() => {\n        getUserDetail();\n        getUserCustomer();\n    }, []);\n    const getUserCustomer = () => {\n        try {\n            const refDetail = ref(database, `/USER_CUSTOMER/${id}`);\n            onValue(refDetail, (snapShot) => {\n                const data = snapShot.val();\n                if (data) {\n                    setData(formateData(data?.CUSTOMER));\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getUserDetail = () => {\n        try {\n            const refDetail = ref(database, `USERS/${id}`);\n            onValue(refDetail, (snapShot) => {\n                setIsApproved(snapShot.val()?.isApproved);\n                setUser(snapShot.val());\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const onApproved = () => {\n        try {\n            const refDetail = ref(database, `/USERS/${id}`);\n            update(refDetail, {\n                isApproved: true\n            });\n            setIsApproved(true);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const onDelete = async (item) => {\n        try {\n            const id = await localStorage.getItem('userID');\n            const starCountRef = ref(database, `/USER_CUSTOMER/${id}/CUSTOMER/${item.ID}`);\n            set(starCountRef, null);\n            notify('Customer has been Deleted Successfully', 0);\n        } catch (error) {\n            console.log('error', error);\n        }\n    };\n    const onViewDetailClick = (item) => {\n        onClick(SLUGS.CustomerDetail, {\n            userId: id,\n            customerId: item.ID\n        });\n    };\n    return (\n        <div>\n            <div style={styles.div}>\n                {user?.photo ? <ImageModal url={user?.photo} imageStyle={styles.img} /> : null}\n                <div style={styles.div1}>\n                    <span style={styles.text}>\n                        <h4>UserName </h4> : <h4> {user?.firstName + user?.lastName}</h4>\n                    </span>\n                    <br />\n                    <span style={styles.text}>\n                        <h4>Email </h4> : <h4> {user?.email}</h4>\n                    </span>\n                    <br />\n\n                    <span style={styles.text}>\n                        <h4>PhoneNumer</h4> : <h4>{user?.phoneNumber}</h4>\n                    </span>\n                    <br />\n                </div>\n            </div>\n            {!isApproved ? (\n                <Button type='Approve' style={btn} onClick={() => onApproved()}>\n                    Approved\n                </Button>\n            ) : null}\n            {data.length != 0 && <h1 style={styles.title}>CustomerList</h1>}\n            <TableContainer component={Paper}>\n                <Table aria-label='customized table'>\n                    {data.length != 0 && (\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>Name</StyledTableCell>\n                                <StyledTableCell align='left'>Email</StyledTableCell>\n                                <StyledTableCell align='left'>Actions</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                    )}\n                    <TableBody>\n                        {data &&\n                            data.map((item, index) => (\n                                <StyledTableRow align='left' key={item.id}>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {index + 1}\n                                    </StyledTableCell>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {item?.UserFirstName + '  ' + item.UserLastName}\n                                    </StyledTableCell>\n                                    <StyledTableCell component='th' scope='row'>\n                                        {item.BusinessEmail}\n                                    </StyledTableCell>\n                                    <StyledTableCell align='left' style={styles.leftDiv}>\n                                        <Button onClick={() => onViewDetailClick(item)}>\n                                            View Detail\n                                        </Button>\n                                        <Delete onClick={() => onDelete(item)}></Delete>\n                                    </StyledTableCell>\n                                </StyledTableRow>\n                            ))}\n                    </TableBody>\n                </Table>\n                <ToastContainer />\n            </TableContainer>\n        </div>\n    );\n}\n","export const convertIntoDoller = price => {\n    let formatting_options = {\n      style: 'currency',\n      currency: 'USD',\n      minimumFractionDigits: 2,\n    };\n    let numberWithDollar = price.toLocaleString('en-US', formatting_options);\n    return numberWithDollar;\n  };","const styles = {\n    text: {\n        fontWeight: 'bold'\n    },\n    div: {\n        display: 'flex',\n        justifyContent: 'center',\n        height: 250\n    },\n    marginDiv: {\n        margin: 20\n    },\n    img: {\n        width: 120,\n        height: 120,\n        borderRadius: 10,\n        margin: 20\n    },\n    flexDiv: {\n        alignItems: 'center',\n        display: 'flex',\n        gap: 10\n    }\n};\nexport default {\n    styles\n};\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { Button } from '@material-ui/core';\nimport { ToastContainer } from 'react-toastify';\nimport { formateData } from 'util/formateData';\nimport { convertIntoDoller } from 'util/convertIntoDoller';\nimport { useHistory } from 'react-router-dom';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport slugs from 'resources/slugs';\nimport ImageModal from 'components/ImageModal/ImageModal';\nimport customerStyle from './styles';\nexport default function CustomerDetail(props) {\n    const theme = useTheme();\n    const { styles } = customerStyle;\n\n    const [data, setData] = useState([]);\n    const { push } = useHistory();\n    const [customerImages, setCustomerImages] = useState([]);\n    const [user, setUser] = useState('');\n    function onClick(slug, data, parameters = {}) {\n        push({\n            pathname: convertSlugToUrl(slug, parameters),\n            state: data\n        });\n    }\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    const { userId, customerId } = props.location.state;\n\n    useEffect(() => {\n        getCustomerDetail();\n        getInvoiceList();\n        getCustomerImages();\n    }, []);\n    const getCustomerImages = () => {\n        try {\n            const refDetail = ref(database, `/CUSTOMER_IMG/user:${userId}/customer:${customerId}`);\n            onValue(refDetail, (snapShot) => {\n                const data = formateData(snapShot.val());\n                setCustomerImages(data);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getCustomerDetail = () => {\n        try {\n            const refDetail = ref(database, `/USER_CUSTOMER/${userId}/CUSTOMER/${customerId}`);\n            onValue(refDetail, (snapShot) => {\n                const data = snapShot.val();\n                setUser(data);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getInvoiceList = () => {\n        try {\n            const refDetail = ref(database, `/INVOICE_LIST`);\n            let arr = [];\n            onValue(refDetail, (snapShot) => {\n                const data = formateData(snapShot.val());\n                data.map((item) => {\n                    if (item.userId == userId && item.customerId == customerId) {\n                        arr.push(item);\n                    }\n                });\n                setData(arr);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    function openInNewTab(url) {\n        var win = window.open(url, '_blank');\n        win.focus();\n    }\n    const viewPdf = (id) => {\n        // .ref(`/PDF/user:${userId}/customer:${customerId}/invoiceid:${ID}/1`)\n        try {\n            const refDetail = ref(\n                database,\n                `/PDF/user:${userId}/customer:${customerId}/invoiceid:${id}/`\n            );\n            onValue(refDetail, (snapShot) => {\n                const data = formateData(snapShot.val());\n                openInNewTab(data[0]?.url);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const onActions = (item) => {\n        if (item.type == 'draft') {\n            onClick(slugs.ViewDraft, {\n                userId,\n                customerId,\n                invoiceId: item.ID\n            });\n        } else viewPdf(item.ID);\n    };\n    return (\n        <div>\n            <div style={{ height: '330' }}>\n                <span style={styles.text}>UserFirstName : {user?.UserFirstName}</span>\n                <br />\n                <span style={styles.text}>UserLastName : {user?.UserLastName}</span>\n                <br />\n                <span style={styles.text}>BusinessEmail : {user?.BusinessEmail}</span>\n                <br />\n                <span style={styles.text}>BusinessName : {user?.BusinessName}</span>\n                <br />\n                <span style={styles.text}>Address : {user?.BusinessAddress}</span>\n                <br />\n                <div style={styles.div}>\n                    {customerImages &&\n                        customerImages.map((item) => {\n                            return (\n                                <div style={styles.marginDiv}>\n                                    <span>{item.photoName}</span>\n                                    <ImageModal url={item.url} imageStyle={styles.img} />\n                                </div>\n                            );\n                        })}\n                </div>\n            </div>\n            {data.length != 0 ? (\n                <TableContainer component={Paper}>\n                    <Table aria-label='customized table'>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>InvoiceDate</StyledTableCell>\n                                <StyledTableCell align='left'>TotalItems</StyledTableCell>\n                                <StyledTableCell align='left'>Type</StyledTableCell>\n                                <StyledTableCell align='left'>Amount</StyledTableCell>\n                                <StyledTableCell align='left'>Actions</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {data &&\n                                data.map((item, index) => (\n                                    <StyledTableRow align='left' key={item.id}>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {index + 1}\n                                        </StyledTableCell>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {item.invoiceDate}\n                                        </StyledTableCell>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {item.totalItems}\n                                        </StyledTableCell>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {item.type}\n                                        </StyledTableCell>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {convertIntoDoller(item.Amount)}\n                                        </StyledTableCell>\n                                        <StyledTableCell align='left' style={styles.flexDiv}>\n                                            <Button\n                                                onClick={() => onActions(item)}\n                                                style={{\n                                                    backgroundColor: theme.color.BORDER,\n                                                    color: theme.color.WHITE\n                                                }}\n                                            >\n                                                {item.type == 'sent' ? 'View PDF' : 'View Detail'}\n                                            </Button>\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                ))}\n                        </TableBody>\n                    </Table>\n                    <ToastContainer />\n                </TableContainer>\n            ) : null}\n        </div>\n    );\n}\n","const styles = {\n    div: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    subDiv: {\n        height: 130,\n        gap: 50\n    },\n    div1: {\n        marginBottom: 30\n    },\n    container: {\n        display: 'flex',\n        flexWrap: 'wrap',\n        marginRight: '20px',\n        marginTop: '20px'\n    },\n    img: {\n        width: 100,\n        height: 100,\n        marginRight: '20px'\n    },\n    bottomView: {\n        marginBottom: 50\n    }\n};\n\nexport default styles;\n","import ImageModal from 'components/ImageModal/ImageModal';\nimport { database } from 'configs/firebaseConfig';\nimport { onValue, ref } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { convertIntoDoller } from 'util/convertIntoDoller';\nimport { formateData } from 'util/formateData';\nimport styles from './styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { ToastContainer } from 'react-toastify';\nimport { useTheme } from 'react-jss';\n\nexport default function ViewDraft(props) {\n    const theme = useTheme();\n    const [invoices, setInvoices] = useState([]);\n    const [invoiceImg, setInvoiceImg] = useState([]);\n    const [note, setNote] = useState('');\n    const { invoiceId, userId, customerId } = props.location.state;\n    useEffect(() => {\n        getDraftDetail();\n    }, []);\n    const getDraftDetail = () => {\n        try {\n            const details = ref(database, `/INVOICE_LIST/${invoiceId}`);\n            onValue(details, (snapShot) => {\n                if (snapShot.val()) {\n                    setNote(snapShot.val()?.note);\n                }\n            });\n            const refDetail = ref(database, `/INVOICE/${invoiceId}`);\n            onValue(refDetail, (snapShot) => {\n                const data = formateData(snapShot.val());\n                setInvoices(data);\n            });\n            const refDeatail1 = ref(\n                database,\n                `/INVOICE_IMAGES/User:${userId}/customer:${customerId}/invoice:${invoiceId}`\n            );\n            onValue(refDeatail1, (snapShot) => {\n                const arr = [];\n                const data = formateData(snapShot.val());\n                arr.push(data);\n                setInvoiceImg(arr[0]);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    return (\n        <div style={styles.div}>\n            <div style={styles.subDiv}>\n                {note ? (\n                    <div style={styles.bottomView}>\n                        <TableContainer component={Paper}>\n                            <Table aria-label='customized table'>\n                                <TableHead>\n                                    <TableRow>\n                                        <StyledTableCell align='left'>Note</StyledTableCell>\n                                    </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                    <StyledTableRow align='left'>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {note}\n                                        </StyledTableCell>\n                                    </StyledTableRow>\n                                </TableBody>\n                            </Table>\n                            <ToastContainer />\n                        </TableContainer>\n                    </div>\n                ) : null}\n                {invoices &&\n                    invoices.map((item, index) => {\n                        if (item.WeightType == 'unit') {\n                            return (\n                                <div style={styles.div1}>\n                                    <span>\n                                        ({index + 1}).{item.itemName}\n                                    </span>\n                                    <br />\n                                    <br />\n                                    <span>Unit:{item.unit}</span>\n                                    <br />\n                                    <span>Price:{item.price}</span>\n                                    <br />\n                                    <span>Total:{convertIntoDoller(item.Total)}</span>\n                                    <br />\n                                    <div style={styles.container}>\n                                        {invoiceImg.length != 0 &&\n                                            invoiceImg[parseInt(item.ID) - 1].map((item) => {\n                                                if (item) {\n                                                    return (\n                                                        <ImageModal\n                                                            url={item.url}\n                                                            imageStyle={styles.img}\n                                                        />\n                                                    );\n                                                }\n                                            })}\n                                    </div>\n                                </div>\n                            );\n                        } else {\n                            return (\n                                <div>\n                                    <span>\n                                        ({index + 1}).{item.itemName}\n                                    </span>\n                                    <br />\n                                    <br />\n                                    <span>GrossWeight:{item.grossWeight}</span>\n                                    <br />\n                                    <span>TareWeight:{item.tareWeight}</span>\n                                    <br />\n                                    <span>NetWeight:{item.netWeight}</span>\n                                    <br />\n                                    <span>Price:{item.price}</span>\n                                    <br />\n                                    <span>Total:{convertIntoDoller(item.Total)}</span>\n                                    <br />\n                                    <div style={styles.container}>\n                                        {invoiceImg.length != 0 &&\n                                            invoiceImg[parseInt(item.ID) - 1].map((item) => {\n                                                if (item) {\n                                                    return (\n                                                        <ImageModal\n                                                            url={item.url}\n                                                            imageStyle={styles.img}\n                                                        />\n                                                    );\n                                                }\n                                            })}\n                                    </div>\n                                </div>\n                            );\n                        }\n                    })}\n            </div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport \"./spinner.css\";\n\nexport default function LoadingSpinner() {\n  return (\n    <div className=\"spinner-container\">\n      <div className=\"loading-spinner\">\n      </div>\n    </div>\n  );\n}","import {\n    deleteObject,\n    getDownloadURL,\n    getStorage,\n    ref,\n    uploadBytesResumable\n} from 'firebase/storage';\n\nexport const uploadProductImage = async (imgfile) => {\n    return new Promise((resolve, reject) => {\n        const storage = getStorage();\n        const storageRef = ref(storage, `ProductImages/${imgfile.name}`);\n        const uploadTask = uploadBytesResumable(storageRef, imgfile);\n        uploadTask.on(\n            'state_changed',\n            (snapshot) => {\n                const progress = (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                switch (snapshot.state) {\n                    case 'paused':\n                        break;\n                    case 'running':\n                        break;\n                }\n            },\n            (error) => {\n                reject(error);\n            },\n            () => {\n                getDownloadURL(uploadTask.snapshot.ref).then((downloadURL) => {\n                    resolve(downloadURL);\n                });\n            }\n        );\n    });\n};\n\nexport const deleteProductImage = (imgfile) => {\n    const storage = getStorage();\n    const storageRef = ref(storage, `ProductImages/${imgfile}`);\n    deleteObject(storageRef)\n        .then(() => {\n            console.log('succesfully deleted');\n        })\n        .catch((error) => {\n            console.log('while uploading iamge', error);\n        });\n};\n","const styles = {\n    img: {\n        width: 50,\n        height: 50,\n        borderRadius: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex'\n    },\n    rowDiv: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: '1%'\n    },\n    modalDiv: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        height: '80vh',\n        width: '70vw',\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    modal: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '10px',\n        boxShadow: '2px 5px solid black',\n        height: '80vh',\n        width: '70vw',\n        margin: 'auto',\n        left: '10%',\n        top: '10%'\n    },\n    inputStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px'\n    },\n    textareaStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px',\n        height: '100px',\n        padding: '10px',\n        width: '50vw'\n    },\n    btnStyle: {\n        background: '#707070',\n        color: 'white',\n        position: 'absolute',\n        right: '15%',\n        top: '14%',\n        paddingInline: '1em'\n    },\n    btnStyle1: {\n        background: '#373a47',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    dangerBtn: {\n        background: '#ff8785',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    imgStyle: {\n        height: '30vh',\n        width: '20vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    imgStyle1: {\n        height: '15vh',\n        width: '10vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    closeBtn: {\n        position: 'absolute',\n        right: '3%',\n        top: '5%',\n        background: '#707070',\n        color: 'white'\n    },\n    title: {\n        fontSize: '25px',\n        color: 'black',\n        fontWeight: 'bold'\n    },\n    productDescView: { marginTop: '20px', marginBottom: '20px' },\n    marginTopView: { marginTop: '20px' },\n    width10: { width: '10%' }\n};\nexport default {\n    styles\n};\n","import React, { useEffect, useState } from 'react';\nimport { database } from 'configs/firebaseConfig';\nimport { set, onValue, ref, update } from 'firebase/database';\nimport { v4 as uuid } from 'uuid';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\nimport { Button } from '@material-ui/core';\nimport LoadingSpinner from 'components/Spinner/LoadingSpinner';\nimport { useTheme } from 'react-jss';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Delete } from '@material-ui/icons';\nimport { uploadProductImage } from 'util/uploadProductImage';\nimport productStyle from './styles';\nimport { formateData } from 'util/formateData';\nimport ImageModal from 'components/ImageModal/ImageModal';\nfunction AddProduct() {\n    const [imgfile, setImageFile] = useState('');\n    const [productName, setProductName] = useState('');\n    const [productDesc, setProductDesc] = useState('');\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n    const [subProduct, setSubProduct] = useState([]);\n    const [subProductName, setSubProductName] = useState('');\n    const [subProductDesc, setSubProductDesc] = useState('');\n    const [subImgFile, setSubImageFile] = useState('');\n    const [productList, setProductList] = useState([]);\n    const [isEditable, setIsEditable] = useState(false);\n    const [productType, setProductType] = useState(0);\n    const [productId, setProductId] = useState(null);\n    const [productSubId, setProductSubId] = useState(null);\n    const [isImageChange, setIsImageChange] = useState(false);\n    const [addToDatabase, setAddToDatabase] = useState(false);\n    const [item, setItem] = useState('');\n    const { styles } = productStyle;\n    const uniqueId = uuid().slice(0, 8);\n    const imgFilehandler = (e) => {\n        setImageFile(e.target.files[0]);\n    };\n    const imgFilehandler1 = (e) => {\n        if (isEditable) {\n            setIsImageChange(true);\n            setSubImageFile(e.target.files[0]);\n        } else setSubImageFile(e.target.files[0]);\n    };\n    useEffect(() => {\n        getProduct();\n    }, []);\n    const setProductDetail = async () => {\n        try {\n            setLoading(true);\n            const url = await uploadProductImage(imgfile);\n            createProduct(url);\n            setLoading(false);\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    };\n    const addSubProductDatabase = async (id) => {\n        try {\n            subProduct.map(async (item, index) => {\n                if (item.img) {\n                    const url = await uploadProductImage(item.img);\n                    const starCount = ref(\n                        database,\n                        `/ADMIN/PRODUCT/${id}/SUB_PRODUCT/${index + 1}`\n                    );\n                    await set(starCount, {\n                        id: index + 1,\n                        productName: item.name,\n                        productImage: url,\n                        prodductDescription: item.description\n                    });\n                    onModalClose();\n                } else {\n                    const starCount = ref(\n                        database,\n                        `/ADMIN/PRODUCT/${id}/SUB_PRODUCT/${index + 1}`\n                    );\n                    await set(starCount, {\n                        id: index + 1,\n                        productName: item.name,\n                        productImage: '',\n                        prodductDescription: item.description\n                    });\n                    onModalClose();\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getProduct = () => {\n        try {\n            const refDetail = ref(database, `/ADMIN/PRODUCT`);\n            onValue(refDetail, (snapShot) => {\n                const arr = formateData(snapShot.val());\n                setProductList(arr);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const createProduct = async (downloadURL) => {\n        try {\n            if (productName && productDesc && imgfile) {\n                const id = uuid().slice(0, 8);\n                const starCount = ref(database, `/ADMIN/PRODUCT/${id}`);\n                await set(starCount, {\n                    ID: id,\n                    productName: productName,\n                    productImage: downloadURL,\n                    prodductDescription: productDesc\n                });\n                notify('Product has been successfully created!', 1);\n                addSubProductDatabase(id);\n                setSubProductName('');\n                setSubProductDesc('');\n                setSubImageFile('');\n                setProductName('');\n                setProductDesc('');\n                setImageFile('');\n                setSubProduct([]);\n            } else {\n                if (!productName) notify('Please Fill The ProductName', 2);\n                else if (!productDesc) notify('Please Fill The ProductDescription', 2);\n                else notify('Product Image Is Mendatory!', 2);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n\n            console.log(error);\n        }\n    };\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14,\n            backgroundColor: theme.color.BG\n        }\n    }))(TableCell);\n    const StyledTableCell1 = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14,\n            backgroundColor: theme.color.lightGrayishBlue\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n    const theme = useTheme();\n\n    const addSubProduct = () => {\n        if (!subProductName) notify('Please Fill The Product Name!', 2);\n        else if (!subProductDesc) notify('Please Fill The Product Description', 2);\n        else {\n            setSubProduct([\n                ...subProduct,\n                { id: uniqueId, name: subProductName, description: subProductDesc, img: subImgFile }\n            ]);\n            setSubProductName('');\n            setSubProductDesc('');\n            setSubImageFile('');\n            setOpen(false);\n        }\n    };\n    const deleteSubProduct = (data) => {\n        const result = subProduct.filter((item) => {\n            return item.id != data.id;\n        });\n        setSubProduct(result);\n    };\n    const editProduct = (item) => {\n        try {\n            setIsEditable(true);\n            setOpen(true);\n            setSubProductName(item.productName);\n            setSubProductDesc(item.prodductDescription);\n            setSubImageFile(item.productImage);\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const editProductDetail = async () => {\n        try {\n            setLoading(true);\n            if (isImageChange) {\n                const url = await uploadProductImage(subImgFile);\n                const refDetail = ref(database, `ADMIN/PRODUCT/${productId}`);\n                update(refDetail, {\n                    productName: subProductName,\n                    prodductDescription: subProductDesc,\n                    productImage: url\n                });\n                notify('Product detail has been updated!', 2);\n            } else {\n                const refDetail = ref(database, `ADMIN/PRODUCT/${productId}`);\n                update(refDetail, {\n                    productName: subProductName,\n                    prodductDescription: subProductDesc\n                });\n                notify('Product detail has been updated!', 2);\n            }\n            onModalClose();\n            setLoading(false);\n        } catch (error) {\n            setOpen(false);\n            console.log(error);\n            setLoading(false);\n        }\n    };\n    const editSubProductDetail = async () => {\n        try {\n            setLoading(true);\n            if (isImageChange) {\n                const url = await uploadProductImage(subImgFile);\n                const refDetail = ref(\n                    database,\n                    `ADMIN/PRODUCT/${productId}/SUB_PRODUCT/${productSubId}`\n                );\n                update(refDetail, {\n                    productName: subProductName,\n                    prodductDescription: subProductDesc,\n                    productImage: url\n                });\n                notify('Sub_Product detail has been updated!', 2);\n            } else {\n                const refDetail = ref(\n                    database,\n                    `ADMIN/PRODUCT/${productId}/SUB_PRODUCT/${productSubId}`\n                );\n                update(refDetail, {\n                    productName: subProductName,\n                    prodductDescription: subProductDesc\n                });\n                notify('Sub_Product detail has been updated!', 2);\n            }\n            onModalClose();\n            setLoading(false);\n        } catch (error) {\n            setOpen(false);\n            console.log(error);\n            setLoading(false);\n        }\n    };\n    const onModalClose = () => {\n        setOpen(false);\n        setIsEditable(false);\n        setSubProductName('');\n        setSubProductDesc('');\n        setSubImageFile('');\n        setIsImageChange(false);\n        setAddToDatabase(false);\n    };\n    const deleteProduct = (productId) => {\n        const refDetail = ref(database, `/ADMIN/PRODUCT/${productId}`);\n        const refDetail1 = ref(database, `/ADMIN/PRODUCT/${productId}/SUB_PRODUCT/${productSubId}`);\n        try {\n            if (productType == 0) {\n                set(refDetail, null);\n                notify('Product Successfully Deleted!', 0);\n            } else {\n                set(refDetail1, null);\n                notify('Sub_Product Successfully Deleted!', 0);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const addSubProductInDatabase = async () => {\n        try {\n            if (subImgFile) {\n                setLoading(true);\n                const url = await uploadProductImage(subImgFile);\n                const id = item.SUB_PRODUCT ? formateData(item.SUB_PRODUCT).length + 1 : 1;\n                const starCount = ref(database, `/ADMIN/PRODUCT/${item.ID}/SUB_PRODUCT/${id}`);\n                await set(starCount, {\n                    id: id,\n                    productName: subProductName,\n                    productImage: url,\n                    prodductDescription: subProductDesc\n                });\n                setOpen(false);\n                setAddToDatabase(false);\n                notify('Sub_Product Successfully Added', `1`);\n                setLoading(false);\n            } else {\n                setLoading(true);\n                const id = item.SUB_PRODUCT ? formateData(item.SUB_PRODUCT).length + 1 : 1;\n                const starCount = ref(database, `/ADMIN/PRODUCT/${item.ID}/SUB_PRODUCT/${id}`);\n                await set(starCount, {\n                    id: id,\n                    productName: subProductName,\n                    productImage: '',\n                    prodductDescription: subProductDesc\n                });\n                setOpen(false);\n                setAddToDatabase(false);\n                notify('Sub_Product Successfully Added', `1`);\n                setLoading(false);\n            }\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n        }\n    };\n    const onEdit = () => {\n        addToDatabase\n            ? addSubProductInDatabase()\n            : isEditable\n            ? productType == 0\n                ? editProductDetail()\n                : editSubProductDetail()\n            : addSubProduct();\n    };\n    const imageFileUrl = imgfile != '' ? window.URL.createObjectURL(imgfile) : '';\n\n    return (\n        <div>\n            {loading ? <LoadingSpinner /> : null}\n            <text>Enter Product Name: </text>\n            <br />\n            <input\n                value={productName}\n                onChange={(e) => setProductName(e.target.value)}\n                style={styles.inputStyle}\n            />\n            <div style={styles.productDescView}>\n                <br />\n                <text>Enter Product Description: </text>\n                <br />\n                <textarea\n                    value={productDesc}\n                    onChange={(e) => setProductDesc(e.target.value)}\n                    style={styles.textareaStyle}\n                />\n            </div>\n            <h2>Upload</h2>\n            <input style={styles.marginTopView} type='file' onChange={imgFilehandler} />\n\n            {imgfile != '' ? (\n                <>\n                    <hr />\n                    <div>\n                        <h2>Preview</h2>\n                        <span>\n                            <ImageModal imageStyle={styles.imgStyle} url={imageFileUrl} />\n                        </span>\n                    </div>\n                </>\n            ) : null}\n            <br />\n            <div style={styles.marginTopView}>\n                <Button style={styles.btnStyle} onClick={() => setOpen(true)}>\n                    ADD SUB_PRODUCT\n                </Button>\n                <Button onClick={() => setProductDetail()} style={styles.btnStyle1}>\n                    Upload Product\n                </Button>\n                <br />\n                {subProduct.length != 0 ? <text style={styles.title}>SUB_PRODUCT LIST</text> : null}\n                {subProduct.length != 0 ? (\n                    <Table aria-label='customized table' style={styles.marginTopView}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>Photo</StyledTableCell>\n                                <StyledTableCell align='left'>Sub_ProductName</StyledTableCell>\n                                <StyledTableCell align='left'>\n                                    Sub_ProductDescription\n                                </StyledTableCell>\n                                <StyledTableCell align='left'>Delete</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {subProduct &&\n                                subProduct.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                {item.img ? (\n                                                    <ImageModal\n                                                        imageStyle={styles.img}\n                                                        url={\n                                                            item.img != ''\n                                                                ? window.URL.createObjectURL(\n                                                                      item.img\n                                                                  )\n                                                                : ''\n                                                        }\n                                                    />\n                                                ) : (\n                                                    <div style={styles.img}>-</div>\n                                                )}\n                                            </StyledTableCell>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {item.name}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                {item.description ? item.description : '-'}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                <Delete\n                                                    onClick={() => deleteSubProduct(item)}\n                                                ></Delete>\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n                <br />\n                {productList.length != 0 ? <text style={styles.title}>PRODUCT_LIST</text> : null}\n                {productList.length != 0 ? (\n                    <Table aria-label='customized table' style={{ marginTop: '20px' }}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    No.\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={{ width: '20%' }}>\n                                    Photo\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={{ width: '20%' }}>\n                                    ProductName\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={{ width: '40%' }}>\n                                    ProductDescription\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    Actions\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    Delete\n                                </StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {productList &&\n                                productList.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell\n                                                component='th'\n                                                scope='row'\n                                                style={styles.width10}\n                                            >\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left' style={{ width: '20%' }}>\n                                                {item.productImage ? (\n                                                    <ImageModal\n                                                        url={item.productImage}\n                                                        style={styles.productImage}\n                                                    />\n                                                ) : (\n                                                    <div style={styles.img}>-</div>\n                                                )}\n                                            </StyledTableCell>\n                                            <StyledTableCell\n                                                component='th'\n                                                scope='row'\n                                                style={styles.width10}\n                                            >\n                                                {item.productName}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left' style={{ width: '35%' }}>\n                                                {item.prodductDescription\n                                                    ? item.prodductDescription\n                                                    : '-'}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left' style={styles.width10}>\n                                                <Button\n                                                    style={styles.dangerBtn}\n                                                    onClick={() =>\n                                                        setProductId(item.ID) + editProduct(item)\n                                                    }\n                                                >\n                                                    EDIT\n                                                </Button>\n                                                <Button\n                                                    style={styles.btnStyle1}\n                                                    onClick={() =>\n                                                        setItem(item) +\n                                                        setAddToDatabase(true) +\n                                                        setOpen(true)\n                                                    }\n                                                >\n                                                    ADD SUB_PRODUCT\n                                                </Button>\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left' style={styles.width10}>\n                                                <Delete\n                                                    onClick={() =>\n                                                        setProductType(0) +\n                                                        setProductId(item.ID) +\n                                                        deleteProduct(item.ID)\n                                                    }\n                                                ></Delete>\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                        {item.SUB_PRODUCT\n                                            ? formateData(item.SUB_PRODUCT).map((item1, index1) => {\n                                                  return (\n                                                      <StyledTableRow align='left' key={item1.id}>\n                                                          <StyledTableCell1\n                                                              component='th'\n                                                              scope='row'\n                                                              style={styles.width10}\n                                                          >\n                                                              {index + 1 + '.' + (index1 + 1)}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={{ width: '20%' }}\n                                                          >\n                                                              {item1.productImage ? (\n                                                                  <ImageModal\n                                                                      url={item1.productImage}\n                                                                      style={styles.productImage}\n                                                                  />\n                                                              ) : (\n                                                                  <div style={styles.img}>-</div>\n                                                              )}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              component='th'\n                                                              scope='row'\n                                                              style={styles.width10}\n                                                          >\n                                                              {item1.productName}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={{ width: '35%' }}\n                                                          >\n                                                              {item1.prodductDescription\n                                                                  ? item1.prodductDescription\n                                                                  : '-'}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={styles.width10}\n                                                          >\n                                                              <Button\n                                                                  style={styles.dangerBtn}\n                                                                  onClick={() => {\n                                                                      setProductId(item.ID);\n                                                                      setProductSubId(item1.id);\n                                                                      editProduct(item1);\n                                                                      setProductType(1);\n                                                                  }}\n                                                              >\n                                                                  EDIT\n                                                              </Button>\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={styles.width10}\n                                                          >\n                                                              <Delete\n                                                                  onClick={() =>\n                                                                      setProductType(1) +\n                                                                      setProductId(item.ID) +\n                                                                      setProductSubId(item1.id) +\n                                                                      deleteProduct()\n                                                                  }\n                                                              ></Delete>\n                                                          </StyledTableCell1>\n                                                      </StyledTableRow>\n                                                  );\n                                              })\n                                            : null}\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n            </div>\n            <ToastContainer />\n            <Modal onClose={() => setOpen(false)} open={open} style={styles.modal}>\n                <div style={styles.modalDiv}>\n                    {loading ? <LoadingSpinner /> : null}\n                    <Button style={styles.closeBtn} onClick={() => onModalClose()}>\n                        Close\n                    </Button>\n                    <div>\n                        <text>Enter Sub_product name</text>\n                        <br />\n                        <input\n                            value={subProductName}\n                            onChange={(e) => setSubProductName(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <text>Enter Sub_Product Description: </text>\n                        <br />\n                        <textarea\n                            value={subProductDesc}\n                            onChange={(e) => setSubProductDesc(e.target.value)}\n                            style={styles.textareaStyle}\n                        />\n                    </div>\n                    <div style={styles.rowDiv}>\n                        <div>\n                            <h4>Upload Sub_Product Image (Optional)</h4>\n                            <input type='file' onChange={imgFilehandler1} accept='image/*' />\n                        </div>\n                        <div>\n                            {subImgFile != '' ? (\n                                <span>\n                                    <ImageModal\n                                        url={\n                                            addToDatabase\n                                                ? window.URL.createObjectURL(subImgFile)\n                                                : isEditable\n                                                ? isImageChange\n                                                    ? window.URL.createObjectURL(subImgFile)\n                                                    : subImgFile\n                                                : window.URL.createObjectURL(subImgFile)\n                                        }\n                                        imageStyle={styles.imgStyle1}\n                                    />\n                                </span>\n                            ) : null}\n                        </div>\n                    </div>\n                    <div style={{ marginTop: '0.5%' }}>\n                        <Button\n                            style={{\n                                ...styles.btnStyle1\n                            }}\n                            onClick={() =>\n                                addToDatabase\n                                    ? addSubProductInDatabase()\n                                    : isEditable\n                                    ? productType == 0\n                                        ? editProductDetail()\n                                        : editSubProductDetail()\n                                    : addSubProduct()\n                            }\n                        >\n                            {isEditable ? 'Edit Product' : 'ADD SUBPRODUCT'}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n}\nexport default AddProduct;\n","import { Button } from '@material-ui/core';\nimport { database } from 'configs/firebaseConfig';\nimport { onValue, ref } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { formateData } from 'util/formateData';\nimport SLUGS from 'resources/slugs';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport { useHistory } from 'react-router-dom';\n\nexport default function AdminList() {\n    const [users, setUsers] = useState([]);\n    const [adminLevel, setAdminLevel] = useState('');\n    const theme = useTheme();\n    const { push } = useHistory();\n\n    useEffect(() => {\n        getUsers();\n    }, []);\n\n    const getUserDetail = (id) => {\n        let userData = null;\n        const userRef = ref(database, `USERS/${id}`);\n        onValue(userRef, (snapshot) => {\n            const data = snapshot.val();\n            userData = data;\n        });\n        return userData;\n    };\n    const getUsers = async () => {\n        try {\n            const id = await localStorage.getItem('userID');\n            const userRef = ref(database, `/ADMIN/USERS/${id}`);\n            const subUserRef = ref(database, `/ADMIN/USERS/${id}/SUB_USERS`);\n            onValue(subUserRef, (snapShot1) => {\n                setUsers(formateData(snapShot1.val()));\n                // subUsers.push(formateData(snapShot1.val()));\n            });\n            onValue(userRef, (snapShot) => {\n                setAdminLevel(snapShot.val().adminLevel);\n            });\n\n            // onValue(userRef, (snapshot) => {\n            //     setAdminLevel(snapshot.val().adminLevel);\n            //     const refDetail = ref(database, '/ADMIN/USERS');\n            //     onValue(refDetail, (snapshOT) => {\n            //         const data = snapshOT.val();\n\n            //         console.log(formateData(data), snapshot.val().email);\n            //         setUsers(\n            //             formateData(data)\n            //             // .filter(\n            //             //     (item) =>\n            //             //         item.email != snapshot.val().email && subUserExistOrNot(item.ID)\n            //             // )\n            //         );\n            //     });\n            // });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14\n        }\n    }))(TableCell);\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    const btn = {\n        height: 50,\n        width: '20%',\n        borderRadius: 10,\n        borderWidth: 0.5,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        position: 'absolute',\n        right: 30,\n        top: 30\n    };\n\n    function onClick(slug, data, parameters = {}) {\n        push({\n            pathname: convertSlugToUrl(slug, parameters),\n            state: data\n        });\n    }\n    return (\n        <div>\n            <label className='form-check-label' htmlFor='flexCheckChecked'>\n                AdminLevel:{adminLevel}\n            </label>\n            <Button type='submit' style={btn} onClick={() => onClick(SLUGS.AddAdmin, { id: null })}>\n                {adminLevel == 1 ? 'Create New Admin' : 'Add New User'}\n            </Button>\n            <TableContainer\n                style={{\n                    marginTop: 30,\n                    marginBottom: 20\n                }}\n                component={Paper}\n            >\n                <Table aria-label='customized table'>\n                    <TableHead>\n                        <TableRow>\n                            <StyledTableCell align='left'>No.</StyledTableCell>\n                            <StyledTableCell align='left'>\n                                {adminLevel == 1 ? 'Admin List' : 'User List'}\n                            </StyledTableCell>\n                            {adminLevel != 1 ? null : (\n                                <StyledTableCell align='left'>Actions</StyledTableCell>\n                            )}\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {formateData(users) &&\n                            formateData(users).map((item, index) => {\n                                const data = getUserDetail(item.ID);\n                                return (\n                                    <StyledTableRow align='left' key={item.ID + '-'}>\n                                        <StyledTableCell component='th' scope='row'>\n                                            {index + 1}\n                                        </StyledTableCell>\n                                        <StyledTableCell align='left'>{data.email}</StyledTableCell>\n                                        {adminLevel != 1 ? null : (\n                                            <StyledTableCell align='left'>\n                                                <Button\n                                                    onClick={() =>\n                                                        onClick(SLUGS.AddAdmin, { id: item.ID })\n                                                    }\n                                                >\n                                                    Update Permission\n                                                </Button>\n                                            </StyledTableCell>\n                                        )}\n                                    </StyledTableRow>\n                                );\n                            })}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n        </div>\n    );\n}\n","import { Button } from '@material-ui/core';\nimport { database } from 'configs/firebaseConfig';\nimport { ToastContainer } from 'react-toastify';\nimport { formateData } from 'util/formateData';\nimport { notify } from 'util/notify';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { v4 as uuid } from 'uuid';\nimport { onValue, ref, set, update } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { useTheme } from 'react-jss';\n\nexport default function AddAdmin(props) {\n    const uniqueId = uuid().slice(0, 8);\n    const [email, setEmail] = useState('');\n    const [users, setUsers] = useState([]);\n    const [password, setPassword] = useState('');\n    const [itemPermission, setItemPermission] = useState(false);\n    const [userPermission, setUserPermission] = useState(false);\n    const [paymentPermission, setPaymentPermission] = useState(false);\n    const [feedbackPermission, setFeedBackPermission] = useState(false);\n    const [termPermission, setTermPermission] = useState(false);\n    const [privacyPermission, setPrivacyPermission] = useState(false);\n    const [adminPermission, setAdminPermission] = useState(false);\n    const [pdfDetailPermission, setpdfDetailPermission] = useState(false);\n    const [priceSheetPermission, setPriceSheetPermission] = useState(false);\n    const [addProduct, setAddProduct] = useState(false);\n    const [userList, setUserList] = useState([]);\n    const [adminLevel, setAdminLevel] = useState('');\n    const [adminUsers, setAdminUsers] = useState('');\n    const theme = useTheme();\n\n    const { id } = props.location.state;\n\n    useEffect(() => {\n        getUsers();\n        if (id) {\n            getAdminDetails(id);\n        }\n    }, []);\n\n    const getAdminDetails = (id) => {\n        const refDetail = ref(database, `/ADMIN/USERS/${id}`);\n        onValue(refDetail, (snapshOT) => {\n            if (snapshOT.val()) {\n                setEmail(snapshOT.val()?.email);\n                const permissionStatus = snapshOT.val()?.role?.PermissionStatus;\n                if (permissionStatus) {\n                    setItemPermission(permissionStatus.item);\n                    setTermPermission(permissionStatus.term);\n                    setUserPermission(permissionStatus.user);\n                    setAdminPermission(permissionStatus.addAdmin);\n                    setpdfDetailPermission(permissionStatus.pdfDetail ? true : false);\n                    setFeedBackPermission(permissionStatus.feedback);\n                    setPriceSheetPermission(permissionStatus.priceSheet ? true : false);\n                    setPaymentPermission(permissionStatus.payment);\n                    setPrivacyPermission(permissionStatus.privacy);\n                    setAddProduct(permissionStatus.addProduct);\n                }\n            }\n        });\n    };\n\n    const getUsers = async () => {\n        try {\n            const id = await localStorage.getItem('userID');\n            const userRef = ref(database, `/ADMIN/USERS/${id}`);\n            onValue(userRef, (snapshot) => {\n                setAdminLevel(snapshot.val().adminLevel);\n                setAdminUsers(snapshot.val().users);\n            });\n            const refDetail = ref(database, '/ADMIN/USERS');\n            onValue(refDetail, (snapshOT) => {\n                const data = snapshOT.val();\n                setUsers(formateData(data));\n            });\n            const refDetail1 = ref(database, '/USERS');\n            onValue(refDetail1, (snapshot) => {\n                const data = snapshot.val();\n                setUserList(data);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const getUserId = () => {\n        let result = 0;\n        users &&\n            users.map((item) => {\n                if (email == item.email) {\n                    result = item.ID;\n                }\n            });\n        return result;\n    };\n    const userAlreadyExist = () => {\n        let result = null;\n        formateData(userList).map((item) => {\n            if (item.email == email) {\n                result = item.ID;\n            }\n        });\n        return result;\n    };\n\n    const createAdmin = async () => {\n        try {\n            const result = await getUserId();\n            if (result == 0) {\n                const subUserID = userAlreadyExist();\n                //check if user exist or not\n                if (subUserID != null) {\n                    //if user  exist\n                    const id = await localStorage.getItem('userID');\n                    const userDetailRef = ref(database, `/USERS/${subUserID}`);\n                    onValue(userDetailRef, async (snapShot) => {\n                        console.log('snapShot of the users ', snapShot.val());\n                        const userRef = ref(database, `/ADMIN/USERS/${id}/SUB_USERS/${subUserID}`);\n                        set(userRef, {\n                            ID: subUserID,\n                            email: email\n                        });\n                        if (adminLevel == 1) {\n                            //only add admin2 in the adminlist admin3 is user so no need to add them in adminlist\n                            const refDetail = ref(database, `/ADMIN/USERS/${subUserID}`);\n                            await set(refDetail, {\n                                ID: subUserID,\n                                email: email,\n                                adminLevel: parseInt(adminLevel) + 1,\n                                role: {\n                                    roleName: 'admin',\n                                    PermissionStatus: {\n                                        user: userPermission,\n                                        item: itemPermission,\n                                        payment: paymentPermission,\n                                        privacy: privacyPermission,\n                                        term: termPermission,\n                                        addAdmin: adminLevel == 2 ? false : adminPermission,\n                                        feedback: feedbackPermission,\n                                        addProduct: addProduct,\n                                        pdfDetail: pdfDetailPermission,\n                                        priceSheet: priceSheetPermission\n                                    }\n                                }\n                            });\n                        }\n                        notify(`New Admin has been created!`, 1);\n                    });\n                } else {\n                    if (password) {\n                        const auth = getAuth();\n                        try {\n                            //add new user\n                            await createUserWithEmailAndPassword(auth, email, password);\n                            const userUniqueID = uuid();\n                            const userDetailRef = ref(database, `USERS/${userUniqueID}`);\n                            set(userDetailRef, {\n                                ID: userUniqueID,\n                                email: email,\n                                isDeleted: false,\n                                firstName: email,\n                                lastName: '',\n                                photo: '',\n                                photoName: '',\n                                phoneNumber: '',\n                                isApproved: true,\n                                cca2: '',\n                                countryCode: ''\n                            });\n\n                            const id = await localStorage.getItem('userID');\n                            const userRef = ref(\n                                database,\n                                `/ADMIN/USERS/${id}/SUB_USERS/${userUniqueID}`\n                            );\n                            set(userRef, {\n                                ID: userUniqueID,\n                                email: email\n                            });\n                            notify(`New Admin has been created!`, 1);\n\n                            if (adminLevel == 1) {\n                                const refDetail = ref(database, `/ADMIN/USERS/${userUniqueID}`);\n                                await set(refDetail, {\n                                    ID: userUniqueID,\n                                    email: email,\n                                    adminLevel: parseInt(adminLevel) + 1,\n                                    role: {\n                                        roleName: 'admin',\n                                        PermissionStatus: {\n                                            user: userPermission,\n                                            item: itemPermission,\n                                            payment: paymentPermission,\n                                            privacy: privacyPermission,\n                                            term: termPermission,\n                                            addAdmin: adminLevel == 2 ? false : adminPermission,\n                                            feedback: feedbackPermission,\n                                            addProduct: addProduct,\n                                            pdfDetail: pdfDetailPermission,\n                                            priceSheet: priceSheetPermission\n                                        }\n                                    }\n                                });\n                            }\n                        } catch (error) {\n                            if (error.message.includes('Error (auth/email-already-in-use')) {\n                                notify(\n                                    \"This email already have user don't need to set password!\",\n                                    1\n                                );\n                            }\n                            console.log('addAdmin error', error);\n                        }\n                    } else {\n                        notify('Password required for new user', 0);\n                    }\n                }\n            } else {\n                if (!id) {\n                    notify('Admin already Exist!', 0);\n                } else {\n                    const refDetail = ref(database, `/ADMIN/USERS/${id}`);\n                    try {\n                        await update(refDetail, {\n                            role: {\n                                PermissionStatus: {\n                                    user: userPermission,\n                                    item: itemPermission,\n                                    payment: paymentPermission,\n                                    privacy: privacyPermission,\n                                    term: termPermission,\n                                    addAdmin: adminLevel == 2 ? false : adminPermission,\n                                    feedback: feedbackPermission,\n                                    addProduct: addProduct,\n                                    pdfDetail: pdfDetailPermission,\n                                    priceSheet: priceSheetPermission\n                                }\n                            }\n                        });\n                        notify(`User Permission updated!`, 1);\n                    } catch (error) {\n                        console.log(error);\n                    }\n                }\n                //admin exist show message \"admin already exist please try with differenet id\"\n                // const subUserID = userAlreadyExist();\n                // const refDetail = ref(database, `/ADMIN/USERS/${result}`);\n                // try {\n                //     await update(refDetail, {\n                //         ID: result,\n                //         adminLevel: parseInt(adminLevel) + 1,\n                //         role: {\n                //             roleName: 'admin',\n                //             PermissionStatus: {\n                //                 user: userPermission,\n                //                 item: itemPermission,\n                //                 payment: paymentPermission,\n                //                 privacy: privacyPermission,\n                //                 term: termPermission,\n                //                 addAdmin: adminLevel == 2 ? false : adminPermission,\n                //                 feedback: feedbackPermission,\n                //                 addProduct: addProduct,\n                //                 pdfDetail: pdfDetailPermission\n                //             }\n                //         }\n                //     });\n                //     notify(`User Permission updated!`, 1);\n                // } catch (error) {\n                //     console.log(error);\n                // }\n                // }\n            }\n        } catch (error) {\n            const { message } = error;\n            notify('somehting Went Wrong!, please try with diffrent email', 0);\n            // if (message == 'Firebase: Error (auth/email-already-in-use).') {\n            //     const result = await getUserId();\n            //     try {\n            //         if (result == 0) {\n            //             const refDetail = ref(database, `/ADMIN/USERS/${uniqueId}`);\n            //             await set(refDetail, {\n            //                 ID: uniqueId,\n            //                 email: email,\n            //                 adminLevel: parseInt(adminLevel) + 1,\n            //                 role: {\n            //                     roleName: 'admin',\n            //                     PermissionStatus: {\n            //                         user: userPermission,\n            //                         item: itemPermission,\n            //                         payment: paymentPermission,\n            //                         privacy: privacyPermission,\n            //                         term: termPermission,\n            //                         addAdmin: adminLevel == 2 ? false : adminPermission,\n            //                         feedback: feedbackPermission,\n            //                         addProduct: addProduct,\n            //                         pdfDetail: pdfDetailPermission,\n            //                         priceSheet: priceSheetPermission\n            //                     }\n            //                 }\n            //             });\n            //         } else {\n            //             const refDetail = ref(database, `/ADMIN/USERS/${result}`);\n            //             await update(refDetail, {\n            //                 ID: result,\n            //                 email: email,\n            //                 adminLevel: parseInt(adminLevel) + 1,\n            //                 role: {\n            //                     roleName: 'admin',\n            //                     PermissionStatus: {\n            //                         user: userPermission,\n            //                         item: itemPermission,\n            //                         payment: paymentPermission,\n            //                         privacy: privacyPermission,\n            //                         term: termPermission,\n            //                         addAdmin: adminLevel == 2 ? false : adminPermission,\n            //                         feedback: feedbackPermission,\n            //                         addProduct: addProduct,\n            //                         pdfDetail: pdfDetailPermission,\n            //                         priceSheet: priceSheetPermission\n            //                     }\n            //                 }\n            //             });\n            //         }\n            //         notify(`New Admin has been created!`, 1);\n            //     } catch (error) {\n            //         console.log(error);\n            //     }\n            // }\n        }\n    };\n    const onSubmit = () => {\n        if (!email) {\n            notify('Please Enter Email Value!', 0);\n        } else {\n            createAdmin();\n        }\n    };\n\n    const checkboxStyle = {\n        width: 25,\n        height: 25,\n        borderRadius: 100\n    };\n    const labelStyle = {\n        marginLeft: '20px'\n    };\n    const inputStyle = {\n        width: '45%',\n        height: 45,\n        borderRadius: 4,\n        padding: 20,\n        marginInline: 10,\n        margin: 20\n    };\n    const formCheckStyle = {\n        alignItems: 'center',\n        display: 'flex'\n    };\n\n    const btnStyle = {\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        margin: 30,\n        width: '30%',\n        height: 50\n    };\n    const dangerLabel = {\n        color: 'red'\n    };\n\n    return (\n        <div>\n            <div>\n                {id ? null : (\n                    <>\n                        <input\n                            className='form-check-input'\n                            placeholder='Enter Email Address'\n                            style={inputStyle}\n                            value={email}\n                            onChange={(e) => setEmail(e.target.value)}\n                        />\n                        <input\n                            type='password'\n                            className='form-check-input'\n                            placeholder='Enter Password'\n                            style={inputStyle}\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </>\n                )}\n                {adminLevel != 1 ? null : (\n                    <div style={{ marginLeft: 40 }}>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={userPermission}\n                                onChange={() => setUserPermission(!userPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>DELETE/VIEW</label> usersDetail\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={itemPermission}\n                                onChange={() => setItemPermission(!itemPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>ADD/DELETE</label> item\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={paymentPermission}\n                                onChange={() => setPaymentPermission(!paymentPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>ADD/DELETE</label> payment\n                                Method\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={pdfDetailPermission}\n                                onChange={() => setpdfDetailPermission(!pdfDetailPermission)}\n                            />\n\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>VIEW/UPDATE</label> pdfDetail\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={priceSheetPermission}\n                                onChange={() => setPriceSheetPermission(!priceSheetPermission)}\n                            />\n\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>VIEW/UPDATE</label> Category\n                                Price\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={feedbackPermission}\n                                onChange={() => setFeedBackPermission(!feedbackPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>VIEW</label> the feedbacks\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={adminPermission}\n                                onChange={() => setAdminPermission(!adminPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can give the <label style={dangerLabel}>PERMISSION</label> to\n                                the Another user\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={termPermission}\n                                onChange={() => setTermPermission(!termPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <lable style={dangerLabel}>VIEW/UPDATE</lable> the\n                                TermAndCondition\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={privacyPermission}\n                                onChange={() => setPrivacyPermission(!privacyPermission)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>VIEW/UPDATE </label>the\n                                PrivacyPolicy\n                            </label>\n                        </div>\n                        <div className='form-check' style={formCheckStyle}>\n                            <input\n                                className='form-check-input'\n                                type='checkbox'\n                                style={checkboxStyle}\n                                checked={addProduct}\n                                onChange={() => setAddProduct(!addProduct)}\n                            />\n                            <label\n                                style={labelStyle}\n                                className='form-check-label'\n                                htmlFor='flexCheckChecked'\n                            >\n                                User can <label style={dangerLabel}>ADD_PRODUCT</label>\n                            </label>\n                        </div>\n                    </div>\n                )}\n            </div>\n            <Button onClick={() => onSubmit()} style={btnStyle}>\n                <span style={{ color: 'white' }}>{id ? 'UPDATE' : 'SUBMIT'}</span>\n            </Button>\n\n            <ToastContainer />\n        </div>\n    );\n}\n","import { database } from 'configs/firebaseConfig';\nimport React, { useEffect, useState } from 'react';\nimport { ref, onValue, set } from 'firebase/database';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Button } from '@material-ui/core';\nimport { notify } from 'util/notify';\nimport { ToastContainer } from 'react-toastify';\n\nexport default function PdfDetail() {\n    const theme = useTheme();\n    const classes = useStyles(theme);\n    const [description, setDescription] = useState('');\n    const [description1, setDescription1] = useState('');\n\n    const getDetail = () => {\n        try {\n            const result = ref(database, '/ADMIN/PdfDetail');\n            onValue(result, (snapShot) => {\n                if (snapShot.val()) {\n                    setDescription(snapShot.val().address);\n                    setDescription1(snapShot.val().pdfDescription);\n                }\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getDetail();\n    }, []);\n    const handleMessageChange = (event) => {\n        setDescription(event.target.value);\n    };\n    const handleMessageChange1 = (event) => {\n        setDescription1(event.target.value);\n    };\n    function handleSubmit(e) {\n        e.preventDefault();\n        try {\n            const result = ref(database, '/ADMIN/PdfDetail');\n            set(result, {\n                address: description,\n                pdfDescription: description1\n            });\n            notify('address Successfully Updated!', 1);\n        } catch (error) {\n            console.log(error);\n        }\n    }\n    const btnstyle = {\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: 'white',\n        margin: 30\n    };\n    return (\n        <div>\n            <form onSubmit={handleSubmit}>\n                <>\n                    <h3\n                        style={{\n                            marginBottom: 10\n                        }}\n                    >\n                        Address:\n                    </h3>\n                    <textarea\n                        className={classes.areaText}\n                        value={description}\n                        onChange={handleMessageChange}\n                    />\n                </>\n                <>\n                    <h3\n                        style={{\n                            marginBottom: 10,\n                            marginTop: 10\n                        }}\n                    >\n                        Pdf Description:\n                    </h3>\n                    <textarea\n                        className={classes.areaText}\n                        value={description1}\n                        onChange={handleMessageChange1}\n                    />\n                    <Button\n                        className={classes.btn}\n                        type='submit'\n                        style={btnstyle}\n                        variant='contained'\n                    >\n                        Add\n                    </Button>\n                </>\n            </form>\n            <ToastContainer />\n        </div>\n    );\n}\n\nconst useStyles = createUseStyles((theme) => ({\n    mainDiv: {\n        display: 'flex',\n        height: '100%',\n        width: '100%'\n    },\n    btn: {\n        width: '30%',\n        borderRadius: 10,\n        height: 50,\n        color: 'white',\n        marginTop: '5%',\n        backgroundColor: 'black'\n    },\n    areaText: {\n        width: '100%',\n        height: 300,\n        borderRadius: 10,\n        padding: 20,\n        backgroundColor: theme.color.WHITE\n    }\n}));\n","const styles = {\n    img: {\n        width: 50,\n        height: 50,\n        borderRadius: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex'\n    },\n    rowDiv: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: '1%'\n    },\n    rowWrap: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n    },\n    modalDiv: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        height: '45vh',\n        width: '70vw',\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    modalDiv1: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        height: '35vh',\n        width: '70vw',\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    modal1: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '10px',\n        boxShadow: '2px 5px solid black',\n        height: '35vh',\n        width: '70vw',\n        margin: 'auto',\n        left: '10%',\n        top: '10%'\n    },\n    modal: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '10px',\n        boxShadow: '2px 5px solid black',\n        height: '45vh',\n        width: '70vw',\n        margin: 'auto',\n        left: '10%',\n        top: '10%'\n    },\n    inputStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px'\n    },\n    textareaStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px',\n        height: '100px',\n        padding: '10px',\n        width: '50vw'\n    },\n    btnStyle: {\n        background: '#707070',\n        color: 'white',\n        position: 'absolute',\n        right: '15%',\n        top: '14%',\n        paddingInline: '1em'\n    },\n    btnStyle1: {\n        background: '#373a47',\n        color: 'white'\n    },\n    dangerBtn: {\n        background: '#ff8785',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    dangerBtn1: {\n        background: 'grey',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    imgStyle: {\n        height: '30vh',\n        width: '20vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    imgStyle1: {\n        height: '15vh',\n        width: '10vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    closeBtn: {\n        position: 'absolute',\n        right: '3%',\n        top: '5%',\n        background: '#707070',\n        color: 'white'\n    },\n    title: {\n        fontSize: '25px',\n        color: 'black',\n        fontWeight: 'bold'\n    },\n    productDescView: { marginTop: '20px', marginBottom: '20px' },\n    marginTopView: { marginTop: '20px' },\n    width10: { width: '10%' }\n};\nexport default {\n    styles\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { ToastContainer } from 'react-toastify';\nimport { Button } from '@material-ui/core';\nimport LoadingSpinner from 'components/Spinner/LoadingSpinner';\nimport { useTheme } from 'react-jss';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport { Delete } from '@material-ui/icons';\nimport productStyle from './styles';\nimport ImageModal from 'components/ImageModal/ImageModal';\nimport { notify } from 'util/notify';\nimport { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set, update } from 'firebase/database';\nimport { formateData } from 'util/formateData';\nimport { uploadProductImage } from 'util/uploadProductImage';\nimport { useHistory } from 'react-router-dom';\nimport { convertSlugToUrl } from 'resources/utilities';\nimport SLUGS from 'resources/slugs';\n\nfunction PriceSheet() {\n    const [imgfile, setImageFile] = useState('');\n    const [categoryName, setCategoryName] = useState('');\n    const [editCategoryName, setEditCategoryName] = useState('');\n    const [imagesFile, setImagesFile] = useState([]);\n\n    const [open, setOpen] = useState(false);\n    const [openEditCategory, setOpenEditCategory] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [subProduct, setSubProduct] = useState([]);\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const [categoryList, setCategoryList] = useState([]);\n    const [isEditable, setIsEditable] = useState(false);\n\n    const [categoryId, setCategoryId] = useState(null);\n    const [productId, setProductId] = useState(null);\n\n    const [ModalType, setModalType] = useState(0);\n    const { styles } = productStyle;\n    const uniqueId = uuid().slice(0, 8);\n\n    const { push } = useHistory();\n\n    useEffect(() => {\n        getCategories();\n    }, []);\n\n    const getCategories = () => {\n        try {\n            const refDetail = ref(database, `/ADMIN/CATEGORY`);\n            onValue(refDetail, (snapShot) => {\n                const arr = formateData(snapShot.val());\n                setCategoryList(arr);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const imgFilehandler = (e) => {\n        setImagesFile(formateData(e.target.files));\n    };\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14,\n            backgroundColor: theme.color.BG\n        }\n    }))(TableCell);\n\n    const StyledTableCell1 = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14,\n            backgroundColor: theme.color.lightGrayishBlue\n        }\n    }))(TableCell);\n\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    const theme = useTheme();\n\n    const addProductInDatabase = async (id) => {\n        try {\n            subProduct.map(async (item, index) => {\n                const uniqueId = uuid().slice(0, 10);\n                const starCount = ref(database, `/ADMIN/CATEGORY/${id}/PRODUCT/${uniqueId}`);\n                await set(starCount, {\n                    id: uniqueId,\n                    productName: item.name,\n                    productPrice: item.price\n                });\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const createCategory = async () => {\n        try {\n            const id = uuid().slice(0, 10);\n            setLoading(true);\n            if (imagesFile.length != 0) {\n                imagesFile.map(async (item, index) => {\n                    const uniqueId = uuid().slice(0, 8);\n                    const url = await uploadProductImage(item);\n                    console.log('uplaodded url', url);\n                    const starCount = ref(database, `/ADMIN/CATEGORY_PHOTOS/${id}/${uniqueId}`);\n                    await set(starCount, {\n                        ID: uniqueId,\n                        name: item.name,\n                        url: url\n                    });\n                });\n            }\n            if (categoryName) {\n                const starCount = ref(database, `/ADMIN/CATEGORY/${id}`);\n                await set(starCount, {\n                    ID: id,\n                    categoryName: categoryName\n                });\n                notify('Category has been successfully created!', 1);\n                addProductInDatabase(id);\n                setCategoryName('');\n                setSubProduct([]);\n                setImagesFile([]);\n            } else {\n                if (!categoryName) notify('Please Fill The CategoryName', 2);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n\n            console.log(error);\n        }\n    };\n\n    const deleteCategory = (categoryId, productId, productType) => {\n        const refDetail = ref(database, `/ADMIN/CATEGORY/${categoryId}`);\n        const imageRef = ref(database, `ADMIN/CATEGORY_PHOTOS/${categoryId}`);\n        const refDetail1 = ref(database, `/ADMIN/CATEGORY/${categoryId}/PRODUCT/${productId}`);\n\n        try {\n            // onValue(imageRef, (snapShot) => {\n            //     const images = formateData(snapShot.val());\n            //     console.log('toatal iamges', snapShot.val());\n            //     images.map(async (item) => {\n            //         await deleteProductImage(item.name);\n            //     });\n            // });\n            if (productType == 0) {\n                set(refDetail, null);\n                notify('Category Successfully Deleted!', 0);\n            } else {\n                set(refDetail1, null);\n                notify('Category Product Successfully Deleted!', 0);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const onModalClose = () => {\n        setOpen(false);\n        setOpenEditCategory(false);\n        setIsEditable(false);\n        setProductName('');\n        setProductPrice('');\n    };\n\n    const onProductEdit = () => {\n        setLoading(true);\n\n        const refDetail = ref(database, `ADMIN/CATEGORY/${categoryId}/PRODUCT/${productId}`);\n        update(refDetail, {\n            productName: productName,\n            productPrice: productPrice\n        });\n        setLoading(false);\n        notify('Product detail has been updated!', 2);\n        onModalClose();\n    };\n\n    const onEditCategory = async () => {\n        try {\n            setLoading(true);\n            const starCount = ref(database, `/ADMIN/CATEGORY/${categoryId}`);\n            await update(starCount, {\n                categoryName: editCategoryName\n            });\n            notify('Category has been successfully Edited!', 1);\n            setLoading(false);\n            onModalClose();\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n        }\n    };\n    return (\n        <div>\n            {loading ? <LoadingSpinner /> : null}\n            <text>Enter Category Name: </text>\n            <br />\n            <input\n                value={categoryName}\n                onChange={(e) => setCategoryName(e.target.value)}\n                style={styles.inputStyle}\n            />\n            <h2\n                style={{\n                    marginTop: 30\n                }}\n            >\n                Upload\n            </h2>\n            <input\n                style={styles.marginTopView}\n                type='file'\n                accept='image/*'\n                multiple={true}\n                onChange={imgFilehandler}\n            />\n\n            {imagesFile.length != 0 ? (\n                <>\n                    <hr />\n                    <div>\n                        <h2>Preview</h2>\n                        <div style={styles.rowWrap}>\n                            {imagesFile.map((item) => {\n                                return (\n                                    <div\n                                        style={{\n                                            marginRight: 20,\n                                            width: '20vw'\n                                        }}\n                                    >\n                                        <ImageModal\n                                            imageStyle={styles.imgStyle}\n                                            url={item != '' ? window.URL.createObjectURL(item) : ''}\n                                        />\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </>\n            ) : null}\n            <br />\n            <div style={styles.marginTopView}>\n                <Button style={styles.btnStyle} onClick={() => setOpen(true)}>\n                    ADD PRODUCT\n                </Button>\n                <Button\n                    onClick={() => createCategory()}\n                    style={{ ...styles.btnStyle1, marginBottom: 50 }}\n                >\n                    UPLOAD CATEGORY\n                </Button>\n                <br />\n                {subProduct.length != 0 ? <text style={styles.title}>PRODUCT LIST</text> : null}\n                {subProduct.length != 0 ? (\n                    <Table aria-label='customized table' style={styles.marginTopView}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>ProductName</StyledTableCell>\n                                <StyledTableCell align='left'>ProductPrice</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {subProduct &&\n                                subProduct.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {item.name}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                $ {item.price ? item.price : '-'}\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n                <br />\n                {categoryList.length != 0 ? <text style={styles.title}>CATEGORY_LIST</text> : null}\n                {categoryList.length != 0 ? (\n                    <Table aria-label='customized table' style={{ marginTop: '20px' }}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    No.\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={{ width: '20%' }}>\n                                    categoryName\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    ProductPrice\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    Actions\n                                </StyledTableCell>\n                                <StyledTableCell align='left' style={styles.width10}>\n                                    Delete\n                                </StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {categoryList &&\n                                categoryList.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell\n                                                component='th'\n                                                scope='row'\n                                                style={styles.width10}\n                                            >\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell\n                                                component='th'\n                                                scope='row'\n                                                style={styles.width10}\n                                            >\n                                                {item.categoryName}\n                                            </StyledTableCell>\n                                            <StyledTableCell\n                                                align='left'\n                                                style={styles.width10}\n                                            ></StyledTableCell>\n                                            <StyledTableCell style={{ ...styles.width10 }}>\n                                                <Button\n                                                    style={styles.dangerBtn1}\n                                                    onClick={() => {\n                                                        push({\n                                                            pathname: convertSlugToUrl(\n                                                                SLUGS.categoryImages,\n                                                                {}\n                                                            ),\n                                                            state: { categoryId: item.ID }\n                                                        });\n                                                    }}\n                                                >\n                                                    SEE IMAGES\n                                                </Button>\n                                                <Button\n                                                    style={styles.dangerBtn}\n                                                    onClick={() => {\n                                                        // setEditCategoryName(item.categoryName);\n                                                        // setOpenEditCategory(true);\n                                                        // setCategoryId(item.ID);\n                                                        push({\n                                                            pathname: convertSlugToUrl(\n                                                                SLUGS.EditCategory,\n                                                                {}\n                                                            ),\n                                                            state: { categoryId: item.ID }\n                                                        });\n                                                    }}\n                                                >\n                                                    EDIT\n                                                </Button>\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left' style={styles.width10}>\n                                                <Delete\n                                                    onClick={() => deleteCategory(item.ID, null, 0)}\n                                                ></Delete>\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                        {item.PRODUCT\n                                            ? formateData(item.PRODUCT).map((item1, index1) => {\n                                                  return (\n                                                      <StyledTableRow align='left' key={item1.id}>\n                                                          <StyledTableCell1\n                                                              component='th'\n                                                              scope='row'\n                                                              style={styles.width10}\n                                                          >\n                                                              {index + 1 + '.' + (index1 + 1)}\n                                                          </StyledTableCell1>\n\n                                                          <StyledTableCell1\n                                                              component='th'\n                                                              scope='row'\n                                                              style={styles.width10}\n                                                          >\n                                                              {item1.productName}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={{ width: '35%' }}\n                                                          >\n                                                              $ {item1.productPrice}\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={styles.width10}\n                                                          >\n                                                              <Button\n                                                                  style={styles.dangerBtn}\n                                                                  onClick={() => {\n                                                                      setOpen(true);\n                                                                      setIsEditable(true);\n                                                                      setProductName(\n                                                                          item1.productName\n                                                                      );\n                                                                      setProductPrice(\n                                                                          item1.productPrice\n                                                                      );\n                                                                      setProductId(item1.id);\n                                                                      setCategoryId(item.ID);\n                                                                  }}\n                                                                  //   onClick={() => {\n                                                                  //       setProductId(item.ID);\n                                                                  //       setProductSubId(item1.id);\n                                                                  //       editProduct(item1);\n                                                                  //       setProductType(1);\n                                                                  //   }}\n                                                              >\n                                                                  EDIT\n                                                              </Button>\n                                                          </StyledTableCell1>\n                                                          <StyledTableCell1\n                                                              align='left'\n                                                              style={styles.width10}\n                                                          >\n                                                              <Delete\n                                                                  onClick={() =>\n                                                                      deleteCategory(\n                                                                          item.ID,\n                                                                          item1.id,\n                                                                          1\n                                                                      )\n                                                                  }\n                                                              ></Delete>\n                                                          </StyledTableCell1>\n                                                      </StyledTableRow>\n                                                  );\n                                              })\n                                            : null}\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n            </div>\n            <ToastContainer />\n            <Modal onClose={() => setOpen(false)} open={open} style={styles.modal}>\n                <div style={styles.modalDiv}>\n                    {loading ? <LoadingSpinner /> : null}\n                    <Button onClick={() => setOpen(false)} style={styles.closeBtn}>\n                        Close\n                    </Button>\n                    <div>\n                        <text>Enter Product Name:</text>\n                        <br />\n                        <input\n                            type='text'\n                            value={productName}\n                            onChange={(e) => setProductName(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <text>Enter Product Price: </text>\n                        <br />\n                        <input\n                            type='number'\n                            value={productPrice}\n                            onChange={(e) => setProductPrice(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <div style={{ marginTop: '4%' }}>\n                        <Button\n                            style={{\n                                ...styles.btnStyle1\n                            }}\n                            onClick={() => {\n                                if (isEditable) {\n                                    onProductEdit();\n                                } else {\n                                    if (productName && productPrice) {\n                                        setSubProduct([\n                                            ...subProduct,\n                                            {\n                                                id: uniqueId,\n                                                name: productName,\n                                                price: productPrice\n                                            }\n                                        ]);\n                                        setProductName('');\n                                        setProductPrice('');\n                                        setOpen(false);\n                                    }\n                                }\n                            }}\n                        >\n                            {isEditable ? 'EDIT PRODUCT' : 'ADD PRODUCT'}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n            <Modal\n                onClose={() => setOpenEditCategory(false)}\n                open={openEditCategory}\n                style={styles.modal1}\n            >\n                <div style={styles.modalDiv1}>\n                    {loading ? <LoadingSpinner /> : null}\n                    <Button onClick={() => setOpenEditCategory(false)} style={styles.closeBtn}>\n                        Close\n                    </Button>\n                    <div>\n                        <text>Category Name:</text>\n                        <br />\n                        <input\n                            type='text'\n                            value={editCategoryName}\n                            onChange={(e) => setEditCategoryName(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <br />\n                    <div style={{ marginTop: '4%' }}>\n                        <Button\n                            style={{\n                                ...styles.btnStyle1\n                            }}\n                            onClick={() => onEditCategory()}\n                        >\n                            {'EDIT CATEGORY'}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n}\nexport default PriceSheet;\n","const styles = {\n    imgStyle: {\n        height: '30vh',\n        width: '20vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    btnStyle: {\n        background: '#707070',\n        color: 'white',\n        position: 'absolute',\n        right: '15%',\n        top: '14%',\n        paddingInline: '1em'\n    },\n    rowWrap: {\n        display: 'flex',\n        flexDirection: 'row',\n        flexWrap: 'wrap'\n    }\n};\n\nexport default styles;\n","import { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set } from 'firebase/database';\nimport React, { useEffect, useState } from 'react';\nimport { formateData } from 'util/formateData';\nimport styles from './styles';\nimport ImageModal from 'components/ImageModal/ImageModal';\nimport { Delete } from '@material-ui/icons';\nimport { deleteProductImage, uploadProductImage } from 'util/uploadProductImage';\nimport { Button } from '@material-ui/core';\nimport { v4 as uuid } from 'uuid';\nimport { useHistory } from 'react-router-dom';\n\nexport default function CategoryImages(props) {\n    const { categoryId } = props.location.state;\n\n    const [imagesFile, setImagesFile] = useState([]);\n    const [photoList, setPhotoList] = useState([]);\n    useEffect(() => {\n        getPhotos();\n    }, []);\n\n    const history = useHistory();\n\n    const getPhotos = () => {\n        try {\n            const refDetail = ref(database, `/ADMIN/CATEGORY_PHOTOS/${categoryId}`);\n            onValue(refDetail, (snapShot) => {\n                const arr = formateData(snapShot.val());\n                setPhotoList(arr);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const deleteImage = (id, name) => {\n        deleteProductImage(name);\n        const refDetail = ref(database, `/ADMIN/CATEGORY_PHOTOS/${categoryId}/${id}`);\n        set(refDetail, null);\n    };\n\n    const onAddNewImage = async () => {\n        if (imagesFile.length != 0) {\n            imagesFile.map(async (item) => {\n                const uniqueId = uuid().slice(0, 8);\n                const url = await uploadProductImage(item);\n                const refDetail = ref(database, `/ADMIN/CATEGORY_PHOTOS/${categoryId}/${uniqueId}`);\n                set(refDetail, {\n                    ID: uniqueId,\n                    name: item.name,\n                    url: url\n                });\n            });\n            setImagesFile([]);\n            history.goBack();\n        }\n    };\n\n    return (\n        <div\n            style={{\n                flex: 1\n            }}\n        >\n            <h2\n                style={{\n                    marginBottom: 30\n                }}\n            >\n                Add New Image For This Category\n            </h2>\n            <input\n                style={styles.marginTopView}\n                type='file'\n                accept='image/*'\n                multiple\n                onChange={(e) => setImagesFile(formateData(e.target.files))}\n            />\n            {imagesFile.length != 0 ? (\n                <>\n                    <hr />\n                    <div>\n                        <h2>Preview</h2>\n                        <div style={styles.rowWrap}>\n                            {imagesFile.map((item) => {\n                                return (\n                                    <div\n                                        style={{\n                                            marginRight: 20,\n                                            width: '20vw'\n                                        }}\n                                    >\n                                        <ImageModal\n                                            imageStyle={styles.imgStyle}\n                                            url={item != '' ? window.URL.createObjectURL(item) : ''}\n                                        />\n                                    </div>\n                                );\n                            })}\n                        </div>\n                    </div>\n                </>\n            ) : null}\n            <Button style={styles.btnStyle} onClick={() => onAddNewImage()}>\n                ADD IMAGE\n            </Button>\n            <br />\n            <div style={styles.rowWrap}>\n                {photoList.map((item) => {\n                    console.log('getted images', item);\n                    return (\n                        <div\n                            style={{\n                                display: 'flex',\n                                flexDirection: 'row',\n                                alignItems: 'center',\n                                marginRight: 20\n                            }}\n                        >\n                            <ImageModal\n                                imageStyle={styles.imgStyle}\n                                url={item != '' ? item.url : ''}\n                            />\n                            <Delete\n                                style={{ margin: 10 }}\n                                onClick={() => deleteImage(item.ID, item.name)}\n                            ></Delete>\n                        </div>\n                    );\n                })}\n            </div>\n        </div>\n    );\n}\n","const styles = {\n    img: {\n        width: 50,\n        height: 50,\n        borderRadius: 100,\n        justifyContent: 'center',\n        alignItems: 'center',\n        display: 'flex'\n    },\n    rowDiv: {\n        display: 'flex',\n        justifyContent: 'flex-start',\n        flexDirection: 'row',\n        alignItems: 'center',\n        marginTop: '1%'\n    },\n    modalDiv: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        height: '45vh',\n        width: '70vw',\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    modalDiv1: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        height: '35vh',\n        width: '70vw',\n        padding: '30px',\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: 'space-between'\n    },\n    modal1: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '10px',\n        boxShadow: '2px 5px solid black',\n        height: '35vh',\n        width: '70vw',\n        margin: 'auto',\n        left: '10%',\n        top: '10%'\n    },\n    modal: {\n        position: 'absolute',\n        backgroundColor: 'white',\n        border: '1px solid black',\n        borderRadius: '10px',\n        boxShadow: '2px 5px solid black',\n        height: '45vh',\n        width: '70vw',\n        margin: 'auto',\n        left: '10%',\n        top: '10%'\n    },\n    inputStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px'\n    },\n    textareaStyle: {\n        height: '45px',\n        width: '40vw',\n        borderRadius: 10,\n        outline: 'none',\n        paddingInline: '10px',\n        border: '2px solid black',\n        marginTop: '10px',\n        height: '100px',\n        padding: '10px',\n        width: '50vw'\n    },\n    btnStyle: {\n        background: '#707070',\n        color: 'white',\n        position: 'absolute',\n        right: '15%',\n        top: '14%',\n        paddingInline: '1em'\n    },\n    btnStyle1: {\n        background: '#373a47',\n        color: 'white'\n    },\n    dangerBtn: {\n        background: '#ff8785',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    dangerBtn1: {\n        background: 'grey',\n        color: 'white',\n        marginBottom: '5%'\n    },\n    imgStyle: {\n        height: '30vh',\n        width: '20vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    imgStyle1: {\n        height: '15vh',\n        width: '10vw',\n        borderRadius: 10,\n        marginTop: '20px'\n    },\n    closeBtn: {\n        position: 'absolute',\n        right: '3%',\n        top: '5%',\n        background: '#707070',\n        color: 'white'\n    },\n\n    title: {\n        fontSize: '25px',\n        color: 'black',\n        fontWeight: 'bold'\n    },\n    productDescView: { marginTop: '20px', marginBottom: '20px' },\n    marginTopView: { marginTop: '20px' },\n    width10: { width: '10%' }\n};\nexport default {\n    styles\n};\n","import React, { useEffect, useState } from 'react';\nimport { v4 as uuid } from 'uuid';\nimport { ToastContainer } from 'react-toastify';\nimport { Button } from '@material-ui/core';\nimport LoadingSpinner from 'components/Spinner/LoadingSpinner';\nimport { useTheme } from 'react-jss';\nimport Modal from '@material-ui/core/Modal';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport { withStyles } from '@material-ui/core/styles';\nimport productStyle from './styles';\nimport { notify } from 'util/notify';\nimport { database } from 'configs/firebaseConfig';\nimport { onValue, ref, set, update } from 'firebase/database';\nimport { formateData } from 'util/formateData';\nimport { useHistory } from 'react-router-dom';\n\nfunction EditCategory(props) {\n    const { categoryId } = props.location.state;\n\n    const [categoryName, setCategoryName] = useState('');\n\n    const [open, setOpen] = useState(false);\n    const [loading, setLoading] = useState(false);\n\n    const [subProduct, setSubProduct] = useState([]);\n\n    const [productName, setProductName] = useState('');\n    const [productPrice, setProductPrice] = useState('');\n\n    const [productList, setProductList] = useState([]);\n\n    const { styles } = productStyle;\n    const uniqueId = uuid().slice(0, 8);\n\n    const history = useHistory();\n\n    useEffect(() => {\n        getProductList();\n    }, []);\n\n    const getProductList = () => {\n        try {\n            const categoryDetail = ref(database, `/ADMIN/CATEGORY/${categoryId}`);\n            onValue(categoryDetail, (snapShot1) => {\n                setCategoryName(snapShot1.val()?.categoryName);\n            });\n            const refDetail = ref(database, `/ADMIN/CATEGORY/${categoryId}/PRODUCT`);\n            onValue(refDetail, (snapShot) => {\n                const arr = formateData(snapShot.val());\n                console.log(arr);\n                setProductList(arr);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    const StyledTableCell = withStyles(() => ({\n        head: {\n            backgroundColor: theme.color.veryDarkGrayishBlue,\n            color: theme.color.white\n        },\n        body: {\n            fontSize: 14,\n            backgroundColor: theme.color.BG\n        }\n    }))(TableCell);\n\n    const StyledTableRow = withStyles(() => ({\n        root: {\n            '&:nth-of-type(odd)': {\n                backgroundColor: theme.color.lightGrayishBlue\n            }\n        }\n    }))(TableRow);\n\n    const theme = useTheme();\n\n    const addProductInDatabase = async () => {\n        try {\n            subProduct.map(async (item, index) => {\n                const uniqueId = uuid().slice(0, 8);\n                const starCount = ref(\n                    database,\n                    `/ADMIN/CATEGORY/${categoryId}/PRODUCT/${uniqueId}`\n                );\n                await set(starCount, {\n                    id: uniqueId,\n                    productName: item.name,\n                    productPrice: item.price\n                });\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const editCategory = async () => {\n        try {\n            setLoading(true);\n            if (categoryName) {\n                const starCount = ref(database, `/ADMIN/CATEGORY/${categoryId}`);\n                await update(starCount, {\n                    categoryName: categoryName\n                });\n                addProductInDatabase();\n                notify('Category has been successfully updated!', 1);\n                setSubProduct([]);\n                history.goBack();\n            } else {\n                if (!categoryName) notify('Please Fill The CategoryName', 2);\n            }\n            setLoading(false);\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n        }\n    };\n\n    return (\n        <div>\n            {loading ? <LoadingSpinner /> : null}\n            <text>Enter Category Name: </text>\n            <br />\n            <input\n                value={categoryName}\n                onChange={(e) => setCategoryName(e.target.value)}\n                style={styles.inputStyle}\n            />\n            <br />\n            <div style={styles.marginTopView}>\n                <Button style={styles.btnStyle} onClick={() => setOpen(true)}>\n                    ADD PRODUCT\n                </Button>\n                <Button\n                    onClick={() => editCategory()}\n                    style={{ ...styles.btnStyle1, marginBottom: 20 }}\n                >\n                    EDIT CATEGORY\n                </Button>\n                <br />\n                {subProduct.length != 0 ? <text style={styles.title}>NEW PRODUCT LIST</text> : null}\n                {subProduct.length != 0 ? (\n                    <Table\n                        aria-label='customized table'\n                        style={{ ...styles.marginTopView, marginBottom: 50 }}\n                    >\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>ProductName</StyledTableCell>\n                                <StyledTableCell align='left'>ProductPrice</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {subProduct &&\n                                subProduct.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {item.name}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                $ {item.price ? item.price : '-'}\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n                {productList.length != 0 ? <text style={styles.title}>PRODUCT LIST</text> : null}\n                {productList.length != 0 ? (\n                    <Table aria-label='customized table' style={styles.marginTopView}>\n                        <TableHead>\n                            <TableRow>\n                                <StyledTableCell align='left'>No.</StyledTableCell>\n                                <StyledTableCell align='left'>ProductName</StyledTableCell>\n                                <StyledTableCell align='left'>ProductPrice</StyledTableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {productList &&\n                                productList.map((item, index) => (\n                                    <>\n                                        <StyledTableRow align='left' key={item.id}>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {index + 1}\n                                            </StyledTableCell>\n                                            <StyledTableCell component='th' scope='row'>\n                                                {item.productName}\n                                            </StyledTableCell>\n                                            <StyledTableCell align='left'>\n                                                $ {item.productPrice ? item.productPrice : '-'}\n                                            </StyledTableCell>\n                                        </StyledTableRow>\n                                    </>\n                                ))}\n                        </TableBody>\n                    </Table>\n                ) : null}\n                <br />\n            </div>\n            <ToastContainer />\n            <Modal onClose={() => setOpen(false)} open={open} style={styles.modal}>\n                <div style={styles.modalDiv}>\n                    {loading ? <LoadingSpinner /> : null}\n                    <Button onClick={() => setOpen(false)} style={styles.closeBtn}>\n                        Close\n                    </Button>\n                    <div>\n                        <text>Enter Product Name:</text>\n                        <br />\n                        <input\n                            type='text'\n                            value={productName}\n                            onChange={(e) => setProductName(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <br />\n                    <div>\n                        <text>Enter Product Price: </text>\n                        <br />\n                        <input\n                            type='number'\n                            value={productPrice}\n                            onChange={(e) => setProductPrice(e.target.value)}\n                            style={styles.inputStyle}\n                        />\n                    </div>\n                    <div style={{ marginTop: '4%' }}>\n                        <Button\n                            style={{\n                                ...styles.btnStyle1\n                            }}\n                            onClick={() => {\n                                if (productName && productPrice) {\n                                    setSubProduct([\n                                        ...subProduct,\n                                        {\n                                            id: uniqueId,\n                                            name: productName,\n                                            price: productPrice\n                                        }\n                                    ]);\n                                    setProductName('');\n                                    setProductPrice('');\n                                    setOpen(false);\n                                }\n                            }}\n                        >\n                            {'ADD PRODUCT'}\n                        </Button>\n                    </div>\n                </div>\n            </Modal>\n        </div>\n    );\n}\nexport default EditCategory;\n","import React, { Suspense, lazy } from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport LoadingComponent from 'components/loading';\nimport PrivacyPolicy from './privacyPolicy/PrivacyPolicy';\nimport Items from './Items/items';\nimport PaymentList from './PaymentList/PaymentList';\nimport FeedBackList from './FeedbackList/FeedbackList';\nimport UserList from './UserList/UserList';\nimport TermAndConditions from './TermAndConditions/TermAndConditions';\nimport UserDetail from './UserDetail/UserDetail';\nimport CustomerDetail from './customerDetail/customerDetail';\nimport ViewDraft from './ViewDraft/ViewDraft';\nimport AddProduct from './AddProduct/AddProduct';\nimport AdminList from './AdminList/adminList';\nimport AddAdmin from './AddAdmin/AddAdmin';\nimport PdfDetail from './PdfDetail/PdfDetail';\nimport PriceSheet from './PriceSheet/PriceSheet';\nimport CategoryImages from './CategoryImages/CategoryImages';\nimport EditCategory, { editCategory } from './editCategory/editCategory';\n\nconst DashboardComponent = lazy(() => import('./dashboard'));\n\nfunction PrivateRoutes() {\n    return (\n        <Suspense fallback={<LoadingComponent loading />}>\n            <Switch>\n                <Route\n                    exact\n                    path={SLUGS.UserDetail}\n                    component={UserDetail}\n                    render={() => <div>userDetail</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.ViewDraft}\n                    component={ViewDraft}\n                    render={() => <div>DraftInvoice</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.CustomerDetail}\n                    component={CustomerDetail}\n                    render={() => <div>CustomerDetail</div>}\n                />\n                <Route exact path={SLUGS.dashboard} component={DashboardComponent} />\n                <Route\n                    exact\n                    path={SLUGS.UserList}\n                    component={UserList}\n                    render={() => <div>UserList</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.EditCategory}\n                    component={EditCategory}\n                    render={() => <div>Edit Category</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.PriceSheet}\n                    component={PriceSheet}\n                    render={() => <div>PriceSheet</div>}\n                />\n                <Route exact path={SLUGS.items} component={Items} render={() => <div>items</div>} />\n                <Route\n                    exact\n                    path={SLUGS.PaymentList}\n                    component={PaymentList}\n                    render={() => <div>PaymentList</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.TermAndCondition}\n                    component={TermAndConditions}\n                    render={() => <div>TermAndCondition</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.AdminList}\n                    component={AdminList}\n                    render={() => <div>Admin</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.AddAdmin}\n                    component={AddAdmin}\n                    render={() => <div>Admin</div>}\n                />\n                <Route\n                    exact\n                    path={SLUGS.PdfDetail}\n                    component={PdfDetail}\n                    render={() => <div>PdfDetail</div>}\n                />\n                <Route exact path={SLUGS.settings} render={() => <div>settings</div>} />\n                <Route\n                    exact\n                    path={SLUGS.categoryImages}\n                    component={CategoryImages}\n                    render={() => <div>CategoryImages</div>}\n                />\n                <Route exact path={SLUGS.privacyPolicy} component={PrivacyPolicy} />\n                <Route exact path={SLUGS.FeedBack} component={FeedBackList} />\n                <Route exact path={SLUGS.AddProduct} component={AddProduct} />\n                <Route exact path='/' component={DashboardComponent} />\n                {/* render={() => <div>PrivacyPolicy</div>} */}\n                <Redirect to={SLUGS.dashboard} component={DashboardComponent} />\n            </Switch>\n        </Suspense>\n    );\n}\n\nexport default PrivateRoutes;\n","import React, { useEffect, useState } from 'react';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { Column, Row } from 'simple-flexbox';\nimport { SidebarComponent, SidebarContext } from 'components/sidebar';\nimport HeaderComponent from 'components/header/HeaderComponent';\nimport PrivateRoutes from './PrivateRoutes';\nimport { onValue, ref } from 'firebase/database';\nimport { database } from 'configs/firebaseConfig';\n\nconst useStyles = createUseStyles({\n    container: {\n        height: '100%',\n        minHeight: 850\n    },\n    mainBlock: {\n        marginLeft: 255,\n        padding: 30,\n        '@media (max-width: 1080px)': {\n            marginLeft: 0\n        }\n    },\n    contentBlock: {\n        marginTop: 54\n    }\n});\n\nfunction PrivateSection() {\n    const theme = useTheme();\n    const [permissionStatus, setPermissionStatus] = useState(null);\n    const classes = useStyles({ theme });\n    const getUserPermissionDetail = async () => {\n        try {\n            const id = await localStorage.getItem('userID');\n            console.log('user id', id);\n            if (id != null) {\n                const refDetail = ref(database, `/ADMIN/USERS/${id}`);\n                onValue(refDetail, (snapShot) => {\n                    console.log(snapShot.val());\n                    setPermissionStatus(snapShot.val()?.role?.PermissionStatus);\n                });\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n\n    useEffect(() => {\n        getUserPermissionDetail();\n    }, []);\n\n    return (\n        <SidebarContext>\n            <Row className={classes.container}>\n                <SidebarComponent permission={permissionStatus} />\n                <Column flexGrow={1} className={classes.mainBlock}>\n                    <HeaderComponent />\n                    <div className={classes.contentBlock}>\n                        <PrivateRoutes />\n                    </div>\n                </Column>\n            </Row>\n        </SidebarContext>\n    );\n}\n\nexport default PrivateSection;\n","import React, { useEffect, useState } from 'react';\nimport { Grid, Paper, Avatar, TextField, Button } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport { useTheme } from 'react-jss';\nimport { UserContext } from 'util/userContext';\nimport { notify } from 'util/notify';\nimport { createUserWithEmailAndPassword, getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { onValue, ref, set, update } from 'firebase/database';\n\nimport { database } from 'configs/firebaseConfig';\nimport { formateData } from 'util/formateData';\nimport { ToastContainer } from 'react-toastify';\nimport LoadingSpinner from 'components/Spinner/LoadingSpinner';\nimport { v4 as uuid } from 'uuid';\nconst Login = () => {\n    const uniqueId = uuid().slice(0, 8);\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [users, setUsers] = useState([]);\n    const [loading, setLoading] = useState('');\n    const { signIn1 } = React.useContext(UserContext);\n    const auth = getAuth();\n\n    // useEffect(() => {\n    //     setValues();\n    // }, []);\n    // const setValues = async () => {\n    //     try {\n    //         const user = await createUserWithEmailAndPassword(\n    //             auth,\n    //             'sutharbipinn25899@gmail.com',\n    //             '12345678'\n    //         );\n    //         const refDetail = ref(database, `/ADMIN/USERS/${uniqueId}`);\n    //         await set(refDetail, {\n    //             ID: uniqueId,\n    //             email: 'sutharbipinn25899@gmail.com',\n    //             role: {\n    //                 roleName: 'admin',\n    //                 PermissionStatus: {\n    //                     user: true,\n    //                     item: true,\n    //                     payment: true,\n    //                     privacy: true,\n    //                     term: true,\n    //                     addAdmin: true,\n    //                     feedback: true,\n    //                     addProduct: true\n    //                 }\n    //             }\n    //         });\n    //         const id = uuid().slice(0, 8);\n    //         const starCount = ref(database, `/ADMIN/PRODUCT/${id}`);\n    //         await set(starCount, {\n    //             ID: id,\n    //             productName: 'new product',\n    //             productImage: '',\n    //             prodductDescription: 'urbanminer product has been added'\n    //         });\n    //     } catch (error) {\n    //         console.log('error details', error.message);\n    //     }\n    // };\n\n    const theme = useTheme();\n    const paperStyle = {\n        padding: 20,\n        height: '90vh',\n        width: 500,\n        backgroundColor: theme.color.WHITE\n    };\n    const avatarStyle = { backgroundColor: '#1bbd7e' };\n    const btnstyle = {\n        margin: '10px 0',\n        height: 50,\n        marginTop: 70,\n        backgroundColor: theme.color.veryDarkGrayishBlue,\n        color: theme.color.white\n    };\n\n    const onSubmit = async () => {\n        if (!email) notify('Please Fill The Email Filed!', 0);\n        else if (!password) notify('Please Fill The password Field!', 0);\n        else {\n            setLoading(true);\n            try {\n                let emailResult = false;\n                const userCredential = await signInWithEmailAndPassword(auth, email, password);\n                if (userCredential.user.uid) {\n                    users &&\n                        users.map((item, index) => {\n                            if (item.email == email) {\n                                emailResult = true;\n                                console.log('user item deatils', item);\n                                signIn1(item.ID + '', item.role.PermissionStatus);\n                                notify('Login Successfully Done!', 1);\n                                setLoading(false);\n                                return;\n                            }\n                        });\n                }\n\n                if (!emailResult) {\n                    notify('Invalid UserName and Password', 0);\n                    setLoading(false);\n                }\n                // const refDetail=ref(database,'/USERS/1')\n                // update(refDetail,{\n                //    ID:1,\n                //    role:{\n                //       roleName:'admin',\n                //       PermissionStatus:{\n                //         user:true,\n                //          item:true,\n                //          payment:true,\n                //          privacy:true,\n                //          term:true,\n                //          addAdmin:true,\n                //          feedback:true\n                //       }\n                //     }\n                // })\n            } catch (error) {\n                setLoading(false);\n                const errorMessage = error.message;\n                console.error(errorMessage);\n                notify(errorMessage, 0);\n            }\n        }\n    };\n    const onchangeEmail = (e) => {\n        setEmail(e.target.value);\n    };\n    const onchangePassword = (e) => {\n        setPassword(e.target.value);\n    };\n    useEffect(() => {\n        getDetail();\n    }, []);\n\n    const getDetail = () => {\n        try {\n            const starCountRef = ref(database, '/ADMIN/USERS');\n            onValue(starCountRef, (snapshot) => {\n                let data = snapshot.val();\n                setUsers(formateData(data));\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    const imageUrl =\n        'https://c4.wallpaperflare.com/wallpaper/644/305/118/pattern-black-gradient-texture-wallpaper-preview.jpg';\n    const containerStyle = {\n        display: 'flex',\n        flex: 1,\n        height: '100vh',\n        backgroundColor: theme.color.BG,\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundImage: `url(${imageUrl})`\n    };\n    return (\n        <div style={containerStyle}>\n            {loading ? <LoadingSpinner /> : null}\n            <Paper elevation={10} style={paperStyle}>\n                <Grid align='center' style={{ margin: '20px 0px' }}>\n                    <Avatar style={avatarStyle}>\n                        <LockOutlinedIcon />\n                    </Avatar>\n                    <h2 style={{ margin: 20 }}>Sign In</h2>\n                </Grid>\n                <TextField\n                    onChange={onchangeEmail}\n                    style={{ margin: '20px 0px' }}\n                    label='Username'\n                    placeholder='Enter username'\n                    variant='outlined'\n                    fullWidth\n                    required\n                />\n                <TextField\n                    onChange={onchangePassword}\n                    label='Password'\n                    placeholder='Enter password'\n                    type='password'\n                    variant='outlined'\n                    fullWidth\n                    required\n                />\n                <Button\n                    onClick={() => onSubmit()}\n                    type='submit'\n                    color={theme.color.white}\n                    variant='contained'\n                    style={btnstyle}\n                    fullWidth\n                >\n                    Sign in\n                </Button>\n            </Paper>\n            <ToastContainer />\n        </div>\n    );\n};\n\nexport default Login;\n","import React from 'react';\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport SLUGS from 'resources/slugs';\nimport Login from './Login/Login';\n\nfunction PublicRoutes() {\n    return (\n        <Switch>\n            <Route path={SLUGS.login} component={Login} render={() => <div>login</div>} />\n            <Route path={SLUGS.signup} render={() => <div>signup</div>} />\n            <Route path={SLUGS.forgotPassword} render={() => <div>forgotPassword</div>} />\n            <Redirect to={SLUGS.login} component={Login} />\n            <Route exact path='/' component={Login} />\n        </Switch>\n    );\n}\n\nexport default PublicRoutes;\n","import React, { useEffect, useMemo, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport PrivateSection from 'routes/PrivateSection';\nimport PublicRoutes from 'routes/PublicRoutes';\nimport { UserContext } from 'util/userContext';\n\nfunction Routes() {\n    const { pathname } = useLocation();\n    const [user, setUser] = useState(null);\n    const authContext = useMemo(() => ({\n        signIn1: (id, permission) => {\n            setTimeout(() => {\n                setUser(id);\n            }, 1000);\n            localStorage.setItem('userID', id + '');\n            localStorage.setItem('permission', JSON.stringify(permission));\n        },\n        signOut1: () => {\n            localStorage.removeItem('userID');\n            localStorage.removeItem('permission');\n            setUser(null);\n        }\n    }));\n    useEffect(() => {\n        window.scrollTo(0, 0);\n        const items = localStorage.getItem('userID');\n        setUser(items);\n    }, [pathname]);\n\n    return (\n        <UserContext.Provider value={authContext}>\n            {user ? <PrivateSection /> : <PublicRoutes />}\n        </UserContext.Provider>\n    );\n}\n\nexport default Routes;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n    // if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    //     // The URL constructor is available in all browsers that support SW.\n    //     const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    //     if (publicUrl.origin !== window.location.origin) {\n    //         // Our service worker won't work if PUBLIC_URL is on a different origin\n    //         // from what our page is served on. This might happen if a CDN is used to\n    //         // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n    //         return;\n    //     }\n    //     window.addEventListener('load', () => {\n    //         const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n    //         if (isLocalhost) {\n    //             // This is running on localhost. Let's check if a service worker still exists or not.\n    //             checkValidServiceWorker(swUrl, config);\n    //             // Add some additional logging to localhost, pointing developers to the\n    //             // service worker/PWA documentation.\n    //             navigator.serviceWorker.ready.then(() => {\n    //                 console.log(\n    //                     'This web app is being served cache-first by a service ' +\n    //                         'worker. To learn more, visit https://bit.ly/CRA-PWA'\n    //                 );\n    //             });\n    //         } else {\n    //             // Is not localhost. Just register service worker\n    //             registerValidSW(swUrl, config);\n    //         }\n    //     });\n    // }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then((registration) => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch((error) => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then((response) => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then((registration) => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.');\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then((registration) => {\n            registration.unregister();\n        });\n    }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ThemeProvider } from 'react-jss';\nimport Theme from 'resources/theme';\nimport Routes from 'routes';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <ThemeProvider theme={Theme}>\n        <Router basename={process.env.PUBLIC_URL}>\n            <Routes />\n        </Router>\n    </ThemeProvider>,\n    document.getElementById('root')\n);\nserviceWorker.unregister();\n","export const formateData=(value)=>{\n    const isArray= Array.isArray(value)\nif(isArray)\n{\n    const newArr=value.filter(item=>item)\n    return newArr;\n}\nelse \n{\n    let arr=[]\n    for (let key in value) {\n        if (value.hasOwnProperty(key)) {\n            let data = value[key];\n            \n            arr.push(data)\n        }\n    }\n    const newArr=arr.filter(item=>item)\n   return newArr\n}\n}","import { initializeApp } from 'firebase/app';\nimport { getDatabase } from 'firebase/database';\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyCPpB5u96_fKUOhrpLfTD6Lhdxs6-pCSGU',\n    authDomain: 'urbanminer-49466.firebaseapp.com',\n    databaseURL: 'https://urbanminer-49466-default-rtdb.firebaseio.com',\n    projectId: 'urbanminer-49466',\n    storageBucket: 'urbanminer-49466.appspot.com',\n    messagingSenderId: '281440786865',\n    appId: '1:281440786865:web:0922bf95a2e82242510590',\n    measurementId: 'G-0NR3F1Z5HB'\n};\nconst app = initializeApp(firebaseConfig);\nexport const database = getDatabase(app);\n"],"sourceRoot":""}