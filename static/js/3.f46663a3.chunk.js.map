{"version":3,"sources":["components/cards/MiniCardComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","concat","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","_objectSpread","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","_ref","_ref$className","className","useTheme","classes","composedClassName","join","React","createElement","Column","flexGrow","horizontal","vertical","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","record","result","__await","then","unwrapped","error","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","cardsContainer","marginRight","marginTop","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","DashboardComponent","_useState","useState","_useState2","_slicedToArray","totalUser","setTotalUser","_useState3","_useState4","totalSubUser","setTotalSubUser","_useState5","_useState6","totalItem","setTotalItem","_useState7","_useState8","totalInvoice","setTotalInvoice","_useState9","_useState10","subUserInvoice","setSubUserInvoice","_useState11","_useState12","adminLevel","setAdminLevel","_useState13","_useState14","subUserIds","getAllData","_asyncToGenerator","_callee","id","userRef","subUserRef","starCountRef","starCountRef1","starCountRef2","_context","localStorage","getItem","ref","database","onValue","snapshot","newArr","child","isDeleted","ID","formateData","filter","item","map","console","log","userId","includes","t0","apply","arguments","useEffect","Row","breakpoints","768","384"],"mappings":"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","file":"static/js/3.f46663a3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Column } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        maxWidth: 350,\r\n        padding: '16px 32px 16px 32px',\r\n        '&:hover': {\r\n            borderColor: theme.color.lightBlue,\r\n            '&:nth-child(n) > span': {\r\n                color: theme.color.lightBlue\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginBottom: 12,\r\n        minWidth: 102,\r\n        textAlign: 'center'\r\n    },\r\n    value: {\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        fontWeight: 'bold',\r\n        fontSize: 40,\r\n        letterSpacing: '1px',\r\n        lineHeight: '50px',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nfunction MiniCardComponent({ className = '', title, value }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const composedClassName = [classes.container, className].join(' ');\r\n    return (\r\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\r\n            <span className={classes.title}>{title}</span>\r\n            <span className={classes.value}>{value}</span>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default MiniCardComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport { database } from 'configs/firebaseConfig';\r\nimport { child, onValue, ref } from 'firebase/database';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { formateData } from 'util/formateData';\r\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction DashboardComponent() {\r\n    const [totalUser, setTotalUser] = useState('');\r\n    const [totalSubUser, setTotalSubUser] = useState('');\r\n    const [totalItem, setTotalItem] = useState('');\r\n    const [totalInvoice, setTotalInvoice] = useState('');\r\n    const [subUserInvoice, setSubUserInvoice] = useState('');\r\n    const [adminLevel, setAdminLevel] = useState(1);\r\n    const [subUserIds, setSubUserId] = useState([]);\r\n\r\n    const getAllData = async () => {\r\n        try {\r\n            const id = await localStorage.getItem('userID');\r\n            const userRef = ref(database, `/ADMIN/USERS/${id}`);\r\n            onValue(userRef, (snapshot) => {\r\n                setAdminLevel(snapshot.val().adminLevel);\r\n            });\r\n            const subUserRef = ref(database, `/ADMIN/USERS/${id}/SUB_USERS`);\r\n            onValue(subUserRef, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                snapshot.forEach((child) => {\r\n                    if (child.val()) {\r\n                        if (child.val().isDeleted != true) {\r\n                            subUserIds.push(child.val().ID);\r\n                        }\r\n                    }\r\n                });\r\n                setTotalSubUser(\r\n                    formateData(newArr).filter((item) => item.isDeleted != true).length\r\n                );\r\n            });\r\n            const starCountRef = ref(database, '/USERS');\r\n            onValue(starCountRef, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                setTotalUser(formateData(newArr).filter((item) => item.isDeleted != true).length);\r\n            });\r\n            const starCountRef1 = ref(database, '/INVOICE_LIST');\r\n            onValue(starCountRef1, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                formateData(newArr).map((item) => {\r\n                    console.log('total invoices', item.userId);\r\n                });\r\n                setSubUserInvoice(\r\n                    formateData(newArr).filter((item) => subUserIds.includes(item.userId)).length\r\n                );\r\n                setTotalInvoice(formateData(newArr).length);\r\n            });\r\n            const starCountRef2 = ref(database, '/ADMIN/ITEM');\r\n            onValue(starCountRef2, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                setTotalItem(formateData(newArr).length);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAllData();\r\n    }, []);\r\n    const theme = useTheme();\r\n\r\n    const classes = useStyles(theme);\r\n    return (\r\n        <Column>\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='AdminLevel'\r\n                        value={adminLevel}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total User'\r\n                        value={adminLevel == 1 ? totalUser : totalSubUser}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total Items'\r\n                        value={totalItem}\r\n                    />\r\n                </Row>\r\n                <MiniCardComponent\r\n                    className={classes.miniCardContainer}\r\n                    title='TotalInvoice'\r\n                    value={adminLevel == 1 ? totalInvoice : subUserInvoice}\r\n                />\r\n            </Row>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import DashboardComponent from './DashboardComponent';\r\n\r\nexport default DashboardComponent;\r\n"],"sourceRoot":""}