{"version":3,"sources":["components/cards/MiniCardComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","MiniCardComponent","className","useTheme","classes","composedClassName","join","flexGrow","horizontal","vertical","i","cardsContainer","marginRight","marginTop","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","DashboardComponent","useState","totalUser","setTotalUser","totalItem","setTotalItem","totalInvoice","setTotalInvoice","getAllData","starCountRef","ref","database","onValue","snapshot","newArr","val","formateData","length","starCountRef1","starCountRef2","error","console","log","useEffect","wrap","breakpoints","768","384"],"mappings":"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","file":"static/js/3.cbee1115.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Column } from 'simple-flexbox';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\n\r\nconst useStyles = createUseStyles((theme) => ({\r\n    container: {\r\n        backgroundColor: '#FFFFFF',\r\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\r\n        borderRadius: 4,\r\n        cursor: 'pointer',\r\n        maxWidth: 350,\r\n        padding: '16px 32px 16px 32px',\r\n        '&:hover': {\r\n            borderColor: theme.color.lightBlue,\r\n            '&:nth-child(n) > span': {\r\n                color: theme.color.lightBlue\r\n            }\r\n        }\r\n    },\r\n    title: {\r\n        ...theme.typography.cardTitle,\r\n        color: theme.color.grayishBlue2,\r\n        marginBottom: 12,\r\n        minWidth: 102,\r\n        textAlign: 'center'\r\n    },\r\n    value: {\r\n        color: theme.color.veryDarkGrayishBlue,\r\n        fontWeight: 'bold',\r\n        fontSize: 40,\r\n        letterSpacing: '1px',\r\n        lineHeight: '50px',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nfunction MiniCardComponent({ className = '', title, value }) {\r\n    const theme = useTheme();\r\n    const classes = useStyles({ theme });\r\n    const composedClassName = [classes.container, className].join(' ');\r\n    return (\r\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\r\n            <span className={classes.title}>{title}</span>\r\n            <span className={classes.value}>{value}</span>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default MiniCardComponent;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Column, Row } from 'simple-flexbox';\r\nimport { database } from 'configs/firebaseConfig';\r\nimport { onValue, ref } from 'firebase/database';\r\nimport { createUseStyles, useTheme } from 'react-jss';\r\nimport { formateData } from 'util/formateData';\r\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\r\n\r\nconst useStyles = createUseStyles({\r\n    cardsContainer: {\r\n        marginRight: -30,\r\n        marginTop: -30\r\n    },\r\n    cardRow: {\r\n        marginTop: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 0\r\n        }\r\n    },\r\n    miniCardContainer: {\r\n        flexGrow: 1,\r\n        marginRight: 30,\r\n        '@media (max-width: 768px)': {\r\n            marginTop: 30,\r\n            maxWidth: 'none'\r\n        }\r\n    },\r\n    todayTrends: {\r\n        marginTop: 30\r\n    },\r\n    lastRow: {\r\n        marginTop: 30\r\n    },\r\n    unresolvedTickets: {\r\n        marginRight: 30,\r\n        '@media (max-width: 1024px)': {\r\n            marginRight: 0\r\n        }\r\n    },\r\n    tasks: {\r\n        marginTop: 0,\r\n        '@media (max-width: 1024px)': {\r\n            marginTop: 30\r\n        }\r\n    }\r\n});\r\n\r\nfunction DashboardComponent() {\r\n    const [totalUser, setTotalUser] = useState('');\r\n    const [totalItem, setTotalItem] = useState('');\r\n    const [totalInvoice, setTotalInvoice] = useState('');\r\n    const getAllData = async () => {\r\n        try {\r\n            const starCountRef = ref(database, '/USERS');\r\n            onValue(starCountRef, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                setTotalUser(formateData(newArr).length);\r\n            });\r\n            const starCountRef1 = ref(database, '/INVOICE');\r\n            onValue(starCountRef1, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                setTotalInvoice(formateData(newArr).length);\r\n            });\r\n            const starCountRef2 = ref(database, '/ADMIN/ITEM');\r\n            onValue(starCountRef2, (snapshot) => {\r\n                const newArr = snapshot.val();\r\n                setTotalItem(formateData(newArr).length);\r\n            });\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        getAllData();\r\n    }, []);\r\n    const theme = useTheme();\r\n\r\n    const classes = useStyles(theme);\r\n    return (\r\n        <Column>\r\n            <Row\r\n                className={classes.cardsContainer}\r\n                wrap\r\n                flexGrow={1}\r\n                horizontal='space-between'\r\n                breakpoints={{ 768: 'column' }}\r\n            >\r\n                <Row\r\n                    className={classes.cardRow}\r\n                    wrap\r\n                    flexGrow={1}\r\n                    horizontal='space-between'\r\n                    breakpoints={{ 384: 'column' }}\r\n                >\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total User'\r\n                        value={totalUser}\r\n                    />\r\n                    <MiniCardComponent\r\n                        className={classes.miniCardContainer}\r\n                        title='Total Items'\r\n                        value={totalItem}\r\n                    />\r\n                </Row>\r\n                <MiniCardComponent\r\n                    className={classes.miniCardContainer}\r\n                    title='TotalInvoice'\r\n                    value={totalInvoice}\r\n                />\r\n            </Row>\r\n        </Column>\r\n    );\r\n}\r\n\r\nexport default DashboardComponent;\r\n","import DashboardComponent from './DashboardComponent';\r\n\r\nexport default DashboardComponent;\r\n"],"sourceRoot":""}