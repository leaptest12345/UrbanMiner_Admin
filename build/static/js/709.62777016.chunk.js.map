{"version":3,"file":"static/js/709.62777016.chunk.js","mappings":"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","sources":["components/cards/MiniCardComponent.js","routes/dashboard/DashboardComponent.js","routes/dashboard/index.js"],"sourcesContent":["import React from 'react';\nimport { Column } from 'simple-flexbox';\nimport { createUseStyles, useTheme } from 'react-jss';\n\nconst useStyles = createUseStyles((theme) => ({\n    container: {\n        backgroundColor: '#FFFFFF',\n        border: `1px solid ${theme.color.lightGrayishBlue2}`,\n        borderRadius: 4,\n        cursor: 'pointer',\n        maxWidth: 350,\n        padding: '16px 32px 16px 32px',\n        '&:hover': {\n            borderColor: theme.color.lightBlue,\n            '&:nth-child(n) > span': {\n                color: theme.color.lightBlue\n            }\n        }\n    },\n    title: {\n        ...theme.typography.cardTitle,\n        color: theme.color.grayishBlue2,\n        marginBottom: 12,\n        minWidth: 102,\n        textAlign: 'center'\n    },\n    value: {\n        color: theme.color.veryDarkGrayishBlue,\n        fontWeight: 'bold',\n        fontSize: 40,\n        letterSpacing: '1px',\n        lineHeight: '50px',\n        textAlign: 'center'\n    }\n}));\n\nfunction MiniCardComponent({ className = '', title, value }) {\n    const theme = useTheme();\n    const classes = useStyles({ theme });\n    const composedClassName = [classes.container, className].join(' ');\n    return (\n        <Column flexGrow={1} className={composedClassName} horizontal='center' vertical='center'>\n            <span className={classes.title}>{title}</span>\n            <span className={classes.value}>{value}</span>\n        </Column>\n    );\n}\n\nexport default MiniCardComponent;\n","import React, { useEffect, useState } from 'react';\nimport { Column, Row } from 'simple-flexbox';\nimport { database } from 'configs/firebaseConfig';\nimport { child, onValue, ref } from 'firebase/database';\nimport { createUseStyles, useTheme } from 'react-jss';\nimport { formateData } from 'util/formateData';\nimport MiniCardComponent from 'components/cards/MiniCardComponent';\n\nconst useStyles = createUseStyles({\n    cardsContainer: {\n        marginRight: -30,\n        marginTop: -30\n    },\n    cardRow: {\n        marginTop: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 0\n        }\n    },\n    miniCardContainer: {\n        flexGrow: 1,\n        marginRight: 30,\n        '@media (max-width: 768px)': {\n            marginTop: 30,\n            maxWidth: 'none'\n        }\n    },\n    todayTrends: {\n        marginTop: 30\n    },\n    lastRow: {\n        marginTop: 30\n    },\n    unresolvedTickets: {\n        marginRight: 30,\n        '@media (max-width: 1024px)': {\n            marginRight: 0\n        }\n    },\n    tasks: {\n        marginTop: 0,\n        '@media (max-width: 1024px)': {\n            marginTop: 30\n        }\n    }\n});\n\nfunction DashboardComponent() {\n    const [totalUser, setTotalUser] = useState('');\n    const [totalSubUser, setTotalSubUser] = useState('');\n    const [totalItem, setTotalItem] = useState('');\n    const [totalInvoice, setTotalInvoice] = useState('');\n    const [subUserInvoice, setSubUserInvoice] = useState('');\n    const [adminLevel, setAdminLevel] = useState(1);\n    const [subUserIds, setSubUserId] = useState([]);\n\n    const getAllData = async () => {\n        try {\n            const id = await localStorage.getItem('userID');\n            const userRef = ref(database, `/ADMIN/USERS/${id}`);\n            onValue(userRef, (snapshot) => {\n                setAdminLevel(snapshot.val().adminLevel);\n            });\n            const subUserRef = ref(database, `/ADMIN/USERS/${id}/SUB_USERS`);\n            onValue(subUserRef, (snapshot) => {\n                const newArr = snapshot.val();\n                snapshot.forEach((child) => {\n                    if (child.val()) {\n                        if (child.val().isDeleted != true) {\n                            subUserIds.push(child.val().ID);\n                        }\n                    }\n                });\n                setTotalSubUser(\n                    formateData(newArr).filter((item) => item.isDeleted != true).length\n                );\n            });\n            const starCountRef = ref(database, '/USERS');\n            onValue(starCountRef, (snapshot) => {\n                const newArr = snapshot.val();\n                setTotalUser(formateData(newArr).filter((item) => item.isDeleted != true).length);\n            });\n            const starCountRef1 = ref(database, '/INVOICE_LIST');\n            onValue(starCountRef1, (snapshot) => {\n                const newArr = snapshot.val();\n\n                setSubUserInvoice(\n                    formateData(newArr).filter((item) => subUserIds.includes(item.userId)).length\n                );\n                setTotalInvoice(formateData(newArr).length);\n            });\n            const starCountRef2 = ref(database, '/ADMIN/ITEM');\n            onValue(starCountRef2, (snapshot) => {\n                const newArr = snapshot.val();\n                setTotalItem(formateData(newArr).length);\n            });\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    useEffect(() => {\n        getAllData();\n    }, []);\n    const theme = useTheme();\n\n    const classes = useStyles(theme);\n    return (\n        <Column>\n            <Row\n                className={classes.cardsContainer}\n                wrap\n                flexGrow={1}\n                horizontal='space-between'\n                breakpoints={{ 768: 'column' }}\n            >\n                <Row\n                    className={classes.cardRow}\n                    wrap\n                    flexGrow={1}\n                    horizontal='space-between'\n                    breakpoints={{ 384: 'column' }}\n                >\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='AdminLevel'\n                        value={adminLevel}\n                    />\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Total User'\n                        value={adminLevel == 1 ? totalUser : totalSubUser}\n                    />\n                    <MiniCardComponent\n                        className={classes.miniCardContainer}\n                        title='Total Items'\n                        value={totalItem}\n                    />\n                </Row>\n                <MiniCardComponent\n                    className={classes.miniCardContainer}\n                    title='TotalInvoice'\n                    value={adminLevel == 1 ? totalInvoice : subUserInvoice}\n                />\n            </Row>\n        </Column>\n    );\n}\n\nexport default DashboardComponent;\n","import DashboardComponent from './DashboardComponent';\n\nexport default DashboardComponent;\n"],"names":["useStyles","createUseStyles","theme","container","backgroundColor","border","concat","color","lightGrayishBlue2","borderRadius","cursor","maxWidth","padding","borderColor","lightBlue","title","_objectSpread","typography","cardTitle","grayishBlue2","marginBottom","minWidth","textAlign","value","veryDarkGrayishBlue","fontWeight","fontSize","letterSpacing","lineHeight","_ref","_ref$className","className","useTheme","classes","composedClassName","join","_jsxs","Column","flexGrow","horizontal","vertical","children","_jsx","cardsContainer","marginRight","marginTop","cardRow","miniCardContainer","todayTrends","lastRow","unresolvedTickets","tasks","_useState","useState","_useState2","_slicedToArray","totalUser","setTotalUser","_useState3","_useState4","totalSubUser","setTotalSubUser","_useState5","_useState6","totalItem","setTotalItem","_useState7","_useState8","totalInvoice","setTotalInvoice","_useState9","_useState10","subUserInvoice","setSubUserInvoice","_useState11","_useState12","adminLevel","setAdminLevel","_useState13","_useState14","subUserIds","getAllData","_asyncToGenerator","_regeneratorRuntime","mark","_callee","id","userRef","subUserRef","starCountRef","starCountRef1","starCountRef2","wrap","_context","prev","next","localStorage","getItem","sent","ref","database","onValue","snapshot","val","newArr","forEach","child","isDeleted","push","ID","formateData","filter","item","length","includes","userId","t0","console","log","stop","apply","arguments","useEffect","Row","breakpoints","MiniCardComponent"],"sourceRoot":""}